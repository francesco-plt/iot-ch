<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="26:AppCh4C.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb7b66e30"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb7b672a0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb7b672a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb7a751c8"/></to>
    </wire>
    <wire loc="31:AppCh4C.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7a2f908"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb725ba48"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb725ba48"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb79e9f10"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7a48e40"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:AppCh4C.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb7a347d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb72a86a0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb72a86a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6f2acf0"/></to>
    </wire>
    <wire loc="34:AppCh4C.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0xb7a2aa10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7a06c10"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb7a06c10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb79c7220"/></to>
    </wire>
    <wire loc="35:AppCh4C.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7a2b248"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb79e64d0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb79e64d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb79bbd70"/></to>
    </wire>
    <wire loc="38:AppCh4C.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7a39e50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb72a8d38"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb72a8d38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6f263f0"/></to>
    </wire>
    <wire loc="41:AppCh4C.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0xb7a24c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb7257e48"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb7257e48"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb73c08f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:AppCh4C.nc">
      <from><interface-ref name="Read" scoped="" ref="0xb7a19e78"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb7252c08"/></to>
    </wire>
    <wire loc="19:FakeSensorC.nc">
      <from><interface-ref name="Read" scoped="" ref="0xb7252c08"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb6ef4350"/></to>
    </wire>
    <wire loc="23:FakeSensorC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7b67ec8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7396e30"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7b67ec8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb73519f0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7b67ec8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7371f10"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7b67ec8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb737f180"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7b67ec8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb73915f8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7b67ec8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb745d3e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7b67ec8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb74f27e0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7b67ec8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb75739c0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7b67ec8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb78e24c0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7b67ec8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6ffa238"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7b67ec8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb76b97c8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7b67ec8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb794ab20"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb7a75560"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb7c09ed8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb7c09ed8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb7b8f4f8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7a75b28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7b650b0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7b650b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7b64b98"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7a74010"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb7b67ec8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-main-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7b640f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb780a700"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7b61968"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7a87c08"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0xb7b5d418"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7a87858"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb7b5d010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb79eda38"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb7b5d010"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb7b63410"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7b63410"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb7b573d0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7b637e0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xb7b640f8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0xb7b539e8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0xb7b4eea8"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0xb7b4eea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7b026b0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7b564a8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xb7b637e0"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0xb7b30210"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7ab1ee0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0xb7b3f750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7aeb4f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7aeb4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7177010"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0xb7b39ce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7ae1030"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb7ae1030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb713b228"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0xb7b34ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7ada890"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb7ada890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7104c08"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0xb7b4c2f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7b01988"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb7b01988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb72170b0"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0xb7b35a98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7adb5d0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7adb5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71077f8"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0xb7b4b750"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7afd888"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7afd888"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71edde8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0xb7b44ea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7af34f0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb7af34f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71aed70"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0xb7b3d670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7ae9170"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb7ae9170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7172010"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0xb7b37c08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7ae0c88"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb7ae0c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71360b0"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0xb7b4f010"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7b05968"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7b05968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7225d70"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0xb7b49670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7afb5d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb7afb5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71e5c08"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0xb7b42ce8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7af1170"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb7af1170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71a9c08"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0xb7b3b4b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7ae8e48"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7ae8e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb716c010"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0xb7b32ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7ad85d0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb7ad85d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb70fea88"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0xb7b2e2f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7aa9dd8"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0xb7b3a8e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7ae4d30"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7ae4d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb713fde0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb7b026b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb721bc08"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0xb7b47590"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7af9250"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb7af9250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71e0a88"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0xb7b30e08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7aae3e8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0xb7b45a08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7af4228"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7af4228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71b1938"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0xb7b3e210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7aebe48"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb7aebe48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71769e8"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0xb7b38750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7ae1988"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb7ae1988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb713ac08"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0xb7b338e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7ad9250"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb7ad9250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71026c0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0xb7b4cce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7b00330"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7b00330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7216a88"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0xb7b4a210"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7afc250"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7afc250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71e87f8"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0xb7b438e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7af3e48"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb7af3e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71ac7f8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0xb7b3c0a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7ae9ac8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb7ae9ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71719e8"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0xb7b36670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7adf6b0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7adf6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7135a88"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0xb7b4fa08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7b03330"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb7b03330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb721e7f8"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0xb7b480a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7afbf28"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb7afbf28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71e36c0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0xb7b41750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7af1ac8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb7af1ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71a76c0"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0xb7b31750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7ad8f28"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7ad8f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb70fc538"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0xb7b40c08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7aecb00"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7aecb00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7179538"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0xb7b392f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7ae26b0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb7ae26b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb713d7f8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0xb7b344b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7adbf28"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb7adbf28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7105228"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0xb7b2ece8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7aa63b0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0xb7b4d8e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7b01030"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb7b01030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb72196c0"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0xb7b45010"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7af9ba8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7af9ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71de538"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0xb7b350a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7adcc28"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7adcc28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb710cde8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0xb7b444b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7af4b80"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7af4b80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71af3b0"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0xb7b3ec08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7aea7d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb7aea7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7174538"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0xb7b37210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7ae0330"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb7ae0330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71386c0"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0xb7b322f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7ad9ba8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb7ad9ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb70ff0b0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0xb7b59550"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7b05010"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7b05010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb72263b0"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0xb7b4ac08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7afcba8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb7afcba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71e6228"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0xb7b422f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7af27d0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb7af27d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71aa228"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0xb7b3ca98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7ae84f0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb7ae84f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb716e538"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0xb7b2f830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7aac8f0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0xb7b3bea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7ae43d8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7ae43d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7140418"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0xb7b40210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7af04f0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7af04f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71a50b0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0xb7b4e4b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7b03c88"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb7b03c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb721c228"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0xb7b48b18"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7afa890"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb7afa890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71e10b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0xb7c03600"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7b8fd30"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0xb7b8d9c0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0xb7b7d438"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0xb7b7af18"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0xb789c010"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb7a05168"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7a047e8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb79eda38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7a044a0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb7a014e0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0xb7a03ba8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb7a03ba8"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0xb7b4fa08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb7a01ec8"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0xb79ee680"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb79ee680"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0xb7b4f010"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb7a008d0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0xb79ed0b0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb79ed0b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0xb7b59550"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb79c7220"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb79b3ca8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb79e9550"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb79c7af8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb79c7af8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb72fe100"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb79e85c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb79c6bf0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb79c6bf0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb72fd178"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb79e8920"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb79c5c28"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb79c5c28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb72fc190"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb79d6e98"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb74a4b00"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb74a4b00"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb749b668"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb79cf6a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb79bf660"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb79bf660"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb799e010"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb79e9f10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb79c6558"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb79c6558"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb72feac0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb79bbd70"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb799f690"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb79db7b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb79c5010"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb79c5010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb72fd4e8"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb79da888"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb74a2578"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb74a2578"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7498100"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb79b3ca8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7319570"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0xb79b5da0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb72fb238"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb79adad0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb72fcb88"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb79bb518"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb79a5e08"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb79a5e08"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb74a60e0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb799e010"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb731df20"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb799f690"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xb74a6988"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb79ba010"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb799e630"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb799e630"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb731ce48"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb79b7228"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb799fc20"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb799fc20"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb74a44a8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0xb72f64f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb79a66f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb72fba88"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0xb79a52e8"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0xb79a52e8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0xb7355490"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb72f9220"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0xb79a5a70"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0xb79a5a70"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0xb7355c18"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb72f7460"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb759dea8"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb72f95b8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb74a60e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb74a60e0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb749fb20"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb72f9dd8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb74a6f08"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb74a6f08"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb749c9c0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0xb72f8390"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0xb794baf0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0xb794baf0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0xb7947620"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0xb72f7ba0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb799a460"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0xb799a460"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb79951f0"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb72f6bb8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7a05168"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb7319570"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb7317098"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb74a44a8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb749b010"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb731ce48"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb730c2a8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0xb7355490"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0xb734f9b8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb731df20"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb7317cb8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0xb79a9780"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb73550c0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb73550c0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0xb734f5e8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb74a6988"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xb749c440"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb79a66f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb7356308"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb7356308"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb7350718"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0xb79a9010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb73569d0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb73569d0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0xb7350e58"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0xb79a9b60"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0xb7354010"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0xb7354010"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0xb734e540"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0xb7355c18"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0xb734e160"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xb7317098"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb799d388"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb799d388"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7997408"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb7354b68"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb7386390"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb7386390"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb7382a20"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb7386b00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb731c748"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb731c748"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb730d5e8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb730d5e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb731d478"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb731d478"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb73184c8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb73184c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb799d990"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb799d990"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb7997a10"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb73547b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb731db58"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb731db58"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb7318c30"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb7318c30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb73722d8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb73722d8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb73717a0"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb7372b28"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb799a0a8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb799a0a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb74f3658"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb74f3658"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb74ef580"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb79959e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb79579f8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb79579f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb794aeb0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0xb7990be0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0xb7953c00"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0xb7953c00"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0xb79466c0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xb798e668"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb75880d8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xb798e668"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb74f6c58"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb74f6c58"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb74f2b80"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb75880d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb7573d60"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0xb798ac20"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0xb7588560"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0xb7588560"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb7572330"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0xb7992438"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb7588c78"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0xb7588c78"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb7572a68"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb798f9d0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb74a60e0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb79831c8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb74a6f08"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb7988898"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb7392978"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb7392978"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb738e478"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0xb7980a10"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb7395608"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb7395608"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb76bc790"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb7988ce0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7a05168"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0xb797fb60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c03600"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0xb797f350"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c03600"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0xb7985af8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c03600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0xb7952760"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0xb79451c0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0xb793eeb0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0xb78e2a88"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0xb78e2a88"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb78dda60"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0xb79438d0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0xb778ec48"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0xb778ec48"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb7b4b750"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb793c300"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0xb778ca50"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb778ca50"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0xb7b4c2f0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0xb793cd08"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0xb778be78"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0xb778be78"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0xb7b4d8e0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0xb7938e40"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0xb7782ef0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0xb7782ef0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0xb772a010"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb792d578"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb75d81f0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb75d81f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb77068c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb792c3d8"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0xb75d7840"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb75d7840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb792c7f0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0xb75d6260"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb75d6260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb792d158"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0xb75d7190"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb75d7190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb792cc20"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0xb75d65b8"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb75d65b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb792f188"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0xb75d1548"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb75d1548"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb792f690"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0xb75d06a8"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb75d06a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb792fb98"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0xb75d0ae0"/></to>
    </wire>
    <wire loc="145:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb75d0ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb79370d8"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0xb75d35c8"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb75d35c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb79375f8"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0xb75d3a00"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb75d3a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb79329e8"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0xb75cc190"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb75cc190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb7932498"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0xb75cdcd8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb75cdcd8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb7937b08"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0xb75d1010"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb75d1010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb7935030"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0xb75d3e38"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb75d3e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb7935538"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0xb75d26e8"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb75d26e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0xb792b508"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb75c3c80"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb75c3c80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb77068c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0xb792dd28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb75b0518"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb75b0518"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb77068c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb7936e48"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb759dea8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb7942628"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb759c760"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0xb7926e60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c03600"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0xb7926680"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c03600"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb78e24c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb77914b8"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb77914b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb77937a0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb78dda60"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb7086800"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-main-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb7086800"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb707f0a0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-main-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0xb7075de0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb7082610"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb7082610"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb706f560"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-main-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb7077b90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb77dd010"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-main-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb77dd010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb77d97f0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0xb706d010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb78c6928"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb78c6928"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb78b1b70"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0xb706a2d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb78b82f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb78bf840"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb7867e78"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xb78ba6f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb7865b88"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb78b82f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0xb7863a80"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb78b82f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0xb78606a0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb78b82f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0xb785e340"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0xb785de98"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb78aae18"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb78aae18"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb78a0af0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0xb78a3498"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xb789c470"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb78ad798"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb789f4f8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb78b35f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb78a7798"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-main-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb780aae8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb78c6928"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-main-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0xb77b6ae8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb77dca00"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-main-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb77dca00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb77d5320"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-main-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb77d4568"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb78c6928"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0xb778d660"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0xb7b45010"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0xb778c068"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0xb7b37c08"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0xb778e270"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0xb7b3ca98"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0xb778b490"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0xb7b3d670"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0xb77827f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb7780ad0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0xb7784618"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0xb7768e30"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0xb777f220"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb78ba6f0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0xb7774470"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0xb7763c98"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0xb7763c98"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb7735e68"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0xb772a6c8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0xb778e270"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0xb7765090"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb7740538"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0xb7764ad8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb7739a08"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0xb77625d8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb7731050"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0xb7765910"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb773d6c0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0xb7763418"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb7737c70"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0xb77737e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb775f3b0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0xb7764258"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb773b7a8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb775fb68"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0xb775c140"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb7740cf0"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0xb775c5b8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb773de78"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0xb775ca30"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb773a010"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0xb775cea8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb7738270"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0xb775e360"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb7736438"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0xb775e7d8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb7733630"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0xb775ec50"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb7731808"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0xb775b1a0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0xb7729ed8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c03600"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb75d74e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb75d1db8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb75d0270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb75ca448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb75cb2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb75d7ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb75cca00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb75cebd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb75d88a8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb7702040"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb7702040"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb7700e88"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb75d6c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb75d4010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb75d43e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb75cce38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb75d22b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb75ca010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb75cb6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb75cd030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb75cc5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb75d0f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb75ca880"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb77028d0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb75d8dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb75d3190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb75d2b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb75d1980"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb75d4740"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb75d4df0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb75d6910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb75cd8a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb75cbb20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb75cd468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb75d7b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb75ce7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb75ce368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb75d4a98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb75c8190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb77028d0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0xb77028d0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb76fc100"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0xb7701340"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb76fcb28"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0xb7701b08"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb76fa2f0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb77068c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb76fd6a8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0xb7700310"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb76faaa8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0xb76f17c0"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb76be528"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb76be528"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb76bc790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb76faee8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb76b7268"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb76b7268"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb75f4c00"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb76f9ed8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb76b7920"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb76b7920"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb76a54f8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb76f12f0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb76b7c58"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb76b7c58"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb76a1df8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb76f7010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7a05168"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0xb76f2d60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c03600"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-main-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb76bc790"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb76b9df8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb76a1df8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb769e450"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb76a54f8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb76a3a30"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb76baf10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb76a5178"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb76a5178"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb76a36d0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0xb75f0438"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb76a4588"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0xb75f0b68"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb7b4b750"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xb76a17c0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xb76a3db8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb76a4588"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb769eb80"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0xb769b8c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb762c570"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb762c570"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6ff9578"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb768bf08"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb75f7150"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb75f7150"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb6ff7150"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0xb768dbc8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0xb769fe48"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0xb769fe48"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0xb765a1c8"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0xb768a398"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb7b7a148"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0xb76771e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c03600"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0xb7654898"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb7b7a148"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0xb7658010"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb7b4b750"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0xb76589e8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0xb7b4a210"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0xb76574a0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0xb7b4ac08"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0xb7657e88"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0xb7b49670"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb762ccb0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb6ff9cb8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb6ff7610"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb75f7600"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb6ff7a38"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb6ffa570"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb6ff6050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c03600"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb75bcbd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb75c1010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb75bd270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb75bba00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb75bbe38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb75b4190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb75b5010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb75c1a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb75b66e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb75bdae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb75bc368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb75b9880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb75ba2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb75c2410"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb7702040"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb75c0840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb75c0b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb75bf010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb75b6b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb75c0190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb75bdf18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb75bd6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb75c2c80"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb75b5cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb75b5448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb75b9cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb75b62b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb75bab20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb75b45c8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb77028d0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb75c2928"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb75bfd70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb75bc7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb75ba6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb75bb190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb75c1368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb75bb5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb75bf368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb75bfa18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb75b8e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb75b8a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb75c04e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb75b85c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb75b5880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb75b8190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb75c16c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb75b9448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb75c1d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb75b9010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb75bf6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb75b4ea0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb77028d0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb75a9368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb75af840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb75ab920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb75a7190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb75a75c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb75a2880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb75a36e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb75ad260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb75a4e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb75aa270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb75aaae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb75a5010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb75a7a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb75b0bd0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb7702040"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb75ac010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb75ac368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb75ac740"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb75a32b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb75ad910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb75aa6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb75abd58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb75af4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb75a2448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb75a3b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb75a5448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb75a4a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb75a62b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb75a2cb8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb77028d0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb75af190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb75ab4e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb75aaf18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb75a7e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb75a98a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb75afb98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb75a9cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb75aca98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb75ab190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb75a45c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb75a4190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb75adc68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb75a5cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb75a2010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb75a5880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb75afef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb75a6b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb75ad5b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb75a66e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb75acdf0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb75a05c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb77028d0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0xb7587e18"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0xb75713b0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0xb75862a0"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0xb7571838"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0xb7571e00"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0xb78e2a88"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0xb75694f0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0xb778e270"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0xb7568010"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0xb778ec48"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0xb7568a08"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0xb778b490"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0xb7566e58"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0xb77827f0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb75654f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb750ce60"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb750ce60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb77068c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb7565c48"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb750b530"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb750b530"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb7702040"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb75623f0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0xb750ba48"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb750ba48"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb7562800"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0xb7509840"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb7509840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb7562c30"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0xb7509b98"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb7509b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb7561088"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0xb7508910"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb7508910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb7563ee0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0xb7504368"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb7504368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb7563238"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0xb74fcea0"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb74fcea0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb77028d0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb75639d8"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb74ff6e8"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb74ff6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb75614c8"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0xb75066a8"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb75066a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb7561f00"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0xb75035c8"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb75035c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb7560438"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0xb7503a00"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb7503a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb7561ac0"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0xb7507730"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb7507730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb755f318"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0xb74fdcb8"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb74fdcb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb7560900"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0xb74fd010"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb74fd010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb7560dc8"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0xb74fd448"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb74fd448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0xb755b120"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0xb74f3118"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0xb74f3118"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0xb74ef040"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb756e878"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb74a60e0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb756d108"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb74a6f08"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb756d850"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb74a4b00"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb7566788"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb74a1cb0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb74a1cb0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb7497888"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb755b648"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7a05168"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb7504bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb7509190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb7506270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb7503e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb74fc190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb7506ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb7501880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb75022b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb7508c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb7507080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb74ffb20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb7508260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb7506f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb750bda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb7501cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb74ff2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb7502b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb74fc5c8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb77028d0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb7507de0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb75047a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb75026e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb7503190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb75094e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb75073d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb7507a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb7500e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb7500a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb75085b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb75005c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb74fd880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb7500190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb7501448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb7509ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb7501010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0xb74f3af0"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0xb74efa18"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb74e4c88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7a05168"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0xb74efdf0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0xb778ec48"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0xb74ee840"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0xb778d660"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0xb74ed308"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0xb778c068"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0xb74edd98"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0xb7784618"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb74ec4f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb74a72c0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb74a72c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb77068c0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb74ecc78"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0xb73aab20"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb73aab20"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb77028d0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb74eb910"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0xb73b6a18"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb73b6a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb74eb4e0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0xb73b4190"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb73b4190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb74ebd48"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb74a60e0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb74e95a0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb74a6f08"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb74e8de0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb74a4b00"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0xb74e9b18"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0xb794baf0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb74e69e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0xb73b1b00"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb73b1b00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb74e6f00"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0xb73b0010"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb73b0010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb74e65a0"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0xb73b48c0"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb73b48c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb74e5d88"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0xb73aa6e8"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb73aa6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb74e53e0"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0xb73ab5c8"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb73ab5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb74e58a8"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0xb73aba00"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb73aba00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb74e4338"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb73ab190"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb73ab190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb74e4820"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0xb74a7e90"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb74a7e90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0xb74ddea0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c03600"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb7465360"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb77dd010"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0xb7493440"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb7466940"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0xb7493e98"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb7459eb8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb7459eb8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb73c9c60"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb745db98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb73f4210"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb745d3e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb74565a0"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb74565a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7415010"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0xb73cd5a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb7410270"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb73f95b8"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0xb7456b68"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0xb7456b68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb7415448"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb73c8638"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0xb74527c0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0xb74527c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb7413eb0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb7413eb0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6f840c0"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7415010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6f87200"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb7415448"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6f87638"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6f83300"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb78b35f8"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb6f804e0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb78aae18"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb6f80d08"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb78ad798"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0xb6f7e730"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xb78a3498"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0xb73f7010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c03600"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0xb73ca798"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c03600"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb73c46e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb73c08f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb73c08f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb745db98"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb73b1190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb73b7558"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb73b37a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb73b0448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb73b6010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb73accb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb73b2030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb73b28a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb73aee38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb73b0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb74a7978"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb7702040"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb73b6d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb73b4568"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb73b66c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb73b2468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb73b3bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb73b7200"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb73aa2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb73ad2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb73ac880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb73ae190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb73b3368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb73b2cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb73b0cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb73b16c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb73b78b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb73b3010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb73ac448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb73ac010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb73adb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb73abe38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7701340"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb73ad6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb73b7c08"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb73aea00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb73b6368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb73ae5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7701b08"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb73b4c18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7700310"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb73a8430"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb77028d0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0xb73920b8"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0xb7391b18"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7396e30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb73915f8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb737f570"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb7386b00"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb737fc40"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb7381ab8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb7381ab8"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb76bc790"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb737e430"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb7392978"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb737e8d0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb74a6f08"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0xb7372700"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0xb7371bc8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb736e358"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb7372b28"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb736e718"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb74a6f08"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb734ecb0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb7354b68"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb734c4c0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb73547b8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb734c858"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb74a60e0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb734b108"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb74a6f08"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb734b6c0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb7351d28"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0xb7332250"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c03600"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0xb7319be0"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb730fd20"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb730fd20"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb76bc790"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb730ca60"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb799f690"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6f2acf0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6f20670"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6f263f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb79e8920"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb725e3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6f26a88"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6f26a88"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb79db7b0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb725d010"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xb6f256b0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb6f256b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb79e64d0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6f20d38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb7294688"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6f1f3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb79db7b0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb7294688"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb728e538"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb728eca8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb79e9550"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb72673f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb79db7b0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7266010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb79e8920"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0xb72666e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c03600"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0xb7266b20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c03600"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb725bd60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb79e8920"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb725a4d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb79db7b0"/></to>
    </wire>
    <wire loc="22:FakeSensorC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb6ef4ec8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb7392978"/></to>
    </wire>
    <wire loc="26:FakeSensorC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0xb6ef33b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6eef0f0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6eef0f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb73c08f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-main-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-main-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-main-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-main-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-main-2.1.2/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-main-2.1.2/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-main-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-main-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-main-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-main-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Ch4C" loc="12:Ch4C.nc">
      <documentation loc="1:Ch4C.h">
        <short>&#10;  </short>
        <long>&#10;  @author Luca Pietro Borsani&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-main-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-main-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-main-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="53:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="43:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-main-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="TOne" ref="0xb7b939a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-main-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-main-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="TOne" ref="0xb7b939a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bb4f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="TOne" ref="0xb7b939a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0xb7b93ea8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bb4f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="TOne" ref="0xb7b939a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-main-2.1.2/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/tinyos-main-2.1.2/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008-06-26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008-06-26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-main-2.1.2/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-main-2.1.2/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-main-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-main-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-main-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/opt/tinyos-main-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bb4f08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb744d2f8"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-main-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-main-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/opt/tinyos-main-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AppCh4C.AMSenderC" loc="47(AppCh4C.AMSenderC):/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AppCh4C.AMSenderC.SenderC" loc="47(AppCh4C.AMSenderC.SenderC):/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7a48e40"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AppCh4C.AMSenderC.SenderC.AMQueueEntryP" loc="43(AppCh4C.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7a48e40"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AppCh4C.AMReceiverC" loc="43(AppCh4C.AMReceiverC):/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AppCh4C.TimerMilliC" loc="44(AppCh4C.TimerMilliC):/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AppCh4C.FakeSensorC" loc="8(AppCh4C.FakeSensorC):FakeSensorC.nc">
      <documentation loc="1:FakeSensorC.nc">
        <short>&#10;  Configuration file for wiring of FakeSensorP module to other common &#10;  components to simulate the behavior of a real sensor&#10;&#10;  </short>
        <long>&#10;  Configuration file for wiring of FakeSensorP module to other common &#10;  components to simulate the behavior of a real sensor&#10;&#10;  @author Luca Pietro Borsani&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FakeSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AppCh4C.FakeSensorC.FakeSensorP" loc="8(AppCh4C.FakeSensorC.FakeSensorP):FakeSensorP.nc">
      <documentation loc="1:FakeSensorP.nc">
        <short>&#10;  Source file for implementation of module Middleware&#10;  which provides the main logic for middleware message management&#10;&#10;  </short>
        <long>&#10;  Source file for implementation of module Middleware&#10;  which provides the main logic for middleware message management&#10;&#10;  @author Luca Pietro Borsani&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FakeSensorP"/>
      </instance>
      <module/>
    </component>
    <component qname="AppCh4C.FakeSensorC.TimerMilliC" loc="44(AppCh4C.FakeSensorC.TimerMilliC):/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7b2bb08" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb7b2bd20" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb7b28010" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7b23f10" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb7b20158" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb7b20380" loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb7b20570" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7ad1010" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb7ad1238" loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb7ad1460" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb7ad1650" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-main-2.1.2/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xb780bde0" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb780bde0"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0xb7807030" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb780dc18" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb780dc18"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xb77fd090" loc="52:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb77fd090"/></type-var>
        </typedef>
        <constant name="mindt" ref="0xb77fd250" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb77d68e0" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb77d68e0"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xb77d6d28" loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb77d6d28"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0xb77dad60" loc="55:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0xb77dad60"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0xb77c51d8" loc="56:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0xb77c51d8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0xb77c5440" loc="57:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0xb77c5440"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0xb77c58b0" loc="58:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0xb77c58b0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0xb77c5b18" loc="59:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0xb77c3010" loc="60:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0xb77c3010"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0xb77e0bb8" loc="52:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0xb77e0bb8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0xb77b2038" loc="53:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0xb77b2038"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0xb77b22a0" loc="54:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0xb77b22a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0xb77b2710" loc="55:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0xb77b2710"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0xb77b2978" loc="56:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0xb774b218" loc="39:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0xb774b440" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0xb774b668" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb774b858" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-main-2.1.2/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0xb762b4c0" loc="83:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-main-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0xb7623380" loc="42:/opt/tinyos-main-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb749d770" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb749d770"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb744d2f8" loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb744d2f8"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb744d4b8" loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb7448568" loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb7448568"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb7448728" loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7455e60" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7455e60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb73f33a8" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb73f33a8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0xb73f3588" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb72aadf0" loc="47:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7a48e40"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb72a58f0" loc="47:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7a48e40"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xb72a03a8" loc="43:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7a48e40"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0xb7290b90" loc="45:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xb725c340" loc="43:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7a48e40"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FakeSensorC" loc="8:FakeSensorC.nc" abstract="">
      <documentation loc="1:FakeSensorC.nc">
        <short>&#10;  Configuration file for wiring of FakeSensorP module to other common &#10;  components to simulate the behavior of a real sensor&#10;&#10;  </short>
        <long>&#10;  Configuration file for wiring of FakeSensorP module to other common &#10;  components to simulate the behavior of a real sensor&#10;&#10;  @author Luca Pietro Borsani&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FakeSensorP" loc="8:FakeSensorP.nc" abstract="">
      <documentation loc="1:FakeSensorP.nc">
        <short>&#10;  Source file for implementation of module Middleware&#10;  which provides the main logic for middleware message management&#10;&#10;  </short>
        <long>&#10;  Source file for implementation of module Middleware&#10;  which provides the main logic for middleware message management&#10;&#10;  @author Luca Pietro Borsani&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0xb7b67ec8" loc="58:/opt/tinyos-main-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb7b67ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b6a0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb7b672a0" loc="57:/opt/tinyos-main-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb7b672a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb7b67478"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb7b640f8" loc="52:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb7b640f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b642d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7b650b0" loc="46:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7b650b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b65288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xb7b61968" loc="50:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7b61968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb7b61b40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb7b61c20"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb7b61d00"/>
        <function-ref name="actualMicro" scoped="" ref="0xb7b61de0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb7b61ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0xb7b5d010" loc="45:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0xb7b5d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b5d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7b64b98" loc="44:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7b64b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b64d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0xb7b5d418" loc="46:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0xb7b5d418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b5d5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb7b637e0" loc="41:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb7b637e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b639b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb7b63410" loc="40:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb7b63410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b635e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb7b564a8" loc="45:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb7b564a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b56680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0xb7b539e8" loc="44:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0xb7b539e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b53bc0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b53ca0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b53d80"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b53e60"/>
        <function-ref name="get" scoped="" ref="0xb7b56010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b560f0"/>
        <function-ref name="set" scoped="" ref="0xb7b561d0"/>
        <function-ref name="clr" scoped="" ref="0xb7b562b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb7b573d0" loc="43:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb7b573d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b575a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0xb7b30210" loc="100:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0xb7b30210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b305e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b306c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b307a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b30888"/>
        <function-ref name="get" scoped="" ref="0xb7b30968"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b30a48"/>
        <function-ref name="set" scoped="" ref="0xb7b30b28"/>
        <function-ref name="clr" scoped="" ref="0xb7b30c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0xb7b3f750" loc="74:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0xb7b3f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b3f928"/>
        <function-ref name="isInput" scoped="" ref="0xb7b3fa08"/>
        <function-ref name="toggle" scoped="" ref="0xb7b3fae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b3fbc8"/>
        <function-ref name="get" scoped="" ref="0xb7b3fca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b3fd88"/>
        <function-ref name="set" scoped="" ref="0xb7b3fe68"/>
        <function-ref name="clr" scoped="" ref="0xb7b3e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0xb7b39ce8" loc="85:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0xb7b39ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b39ec0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b38010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b380f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b381d0"/>
        <function-ref name="get" scoped="" ref="0xb7b382b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b38390"/>
        <function-ref name="set" scoped="" ref="0xb7b38470"/>
        <function-ref name="clr" scoped="" ref="0xb7b38550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0xb7b34ea8" loc="94:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0xb7b34ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b330c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b331a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b33280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b33360"/>
        <function-ref name="get" scoped="" ref="0xb7b33440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b33520"/>
        <function-ref name="set" scoped="" ref="0xb7b33600"/>
        <function-ref name="clr" scoped="" ref="0xb7b336e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0xb7b4c2f0" loc="52:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0xb7b4c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b4c4c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b4c5a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b4c688"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b4c768"/>
        <function-ref name="get" scoped="" ref="0xb7b4c848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b4c928"/>
        <function-ref name="set" scoped="" ref="0xb7b4ca08"/>
        <function-ref name="clr" scoped="" ref="0xb7b4cae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0xb7b35a98" loc="92:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0xb7b35a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b35c70"/>
        <function-ref name="isInput" scoped="" ref="0xb7b35d50"/>
        <function-ref name="toggle" scoped="" ref="0xb7b35e30"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b35f10"/>
        <function-ref name="get" scoped="" ref="0xb7b34010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b340f0"/>
        <function-ref name="set" scoped="" ref="0xb7b341d0"/>
        <function-ref name="clr" scoped="" ref="0xb7b342b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0xb7b4b750" loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0xb7b4b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b4b928"/>
        <function-ref name="isInput" scoped="" ref="0xb7b4ba08"/>
        <function-ref name="toggle" scoped="" ref="0xb7b4bae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b4bbc8"/>
        <function-ref name="get" scoped="" ref="0xb7b4bca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b4bd88"/>
        <function-ref name="set" scoped="" ref="0xb7b4be68"/>
        <function-ref name="clr" scoped="" ref="0xb7b4a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0xb7b44ea8" loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0xb7b44ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b430c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b431a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b43280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b43360"/>
        <function-ref name="get" scoped="" ref="0xb7b43440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b43520"/>
        <function-ref name="set" scoped="" ref="0xb7b43600"/>
        <function-ref name="clr" scoped="" ref="0xb7b436e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0xb7b3d670" loc="77:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0xb7b3d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b3d848"/>
        <function-ref name="isInput" scoped="" ref="0xb7b3d928"/>
        <function-ref name="toggle" scoped="" ref="0xb7b3da08"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b3dae8"/>
        <function-ref name="get" scoped="" ref="0xb7b3dbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b3dca8"/>
        <function-ref name="set" scoped="" ref="0xb7b3dd88"/>
        <function-ref name="clr" scoped="" ref="0xb7b3de68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0xb7b37c08" loc="88:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0xb7b37c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b37de0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b37ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b36010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b360f0"/>
        <function-ref name="get" scoped="" ref="0xb7b361d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b362b0"/>
        <function-ref name="set" scoped="" ref="0xb7b36390"/>
        <function-ref name="clr" scoped="" ref="0xb7b36470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0xb7b4f010" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0xb7b4f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b4f1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b4f2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b4f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b4f488"/>
        <function-ref name="get" scoped="" ref="0xb7b4f568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b4f648"/>
        <function-ref name="set" scoped="" ref="0xb7b4f728"/>
        <function-ref name="clr" scoped="" ref="0xb7b4f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0xb7b49670" loc="58:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0xb7b49670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b49848"/>
        <function-ref name="isInput" scoped="" ref="0xb7b49928"/>
        <function-ref name="toggle" scoped="" ref="0xb7b49a08"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b49ae8"/>
        <function-ref name="get" scoped="" ref="0xb7b49bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b49ca8"/>
        <function-ref name="set" scoped="" ref="0xb7b49d88"/>
        <function-ref name="clr" scoped="" ref="0xb7b49e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0xb7b42ce8" loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0xb7b42ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b42ec0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b41010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b410f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b411d0"/>
        <function-ref name="get" scoped="" ref="0xb7b412b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b41390"/>
        <function-ref name="set" scoped="" ref="0xb7b41470"/>
        <function-ref name="clr" scoped="" ref="0xb7b41550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0xb7b3b4b0" loc="80:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0xb7b3b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b3b688"/>
        <function-ref name="isInput" scoped="" ref="0xb7b3b768"/>
        <function-ref name="toggle" scoped="" ref="0xb7b3b848"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b3b928"/>
        <function-ref name="get" scoped="" ref="0xb7b3ba08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b3bae8"/>
        <function-ref name="set" scoped="" ref="0xb7b3bbc8"/>
        <function-ref name="clr" scoped="" ref="0xb7b3bca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0xb7b32ce8" loc="97:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0xb7b32ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b32ec0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b31010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b310f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b311d0"/>
        <function-ref name="get" scoped="" ref="0xb7b312b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b31390"/>
        <function-ref name="set" scoped="" ref="0xb7b31470"/>
        <function-ref name="clr" scoped="" ref="0xb7b31550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0xb7b2e2f0" loc="103:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0xb7b2e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b2e4c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b2e5a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b2e688"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b2e768"/>
        <function-ref name="get" scoped="" ref="0xb7b2e848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b2e928"/>
        <function-ref name="set" scoped="" ref="0xb7b2ea08"/>
        <function-ref name="clr" scoped="" ref="0xb7b2eae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0xb7b3a8e0" loc="83:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0xb7b3a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b3aab8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b3ab98"/>
        <function-ref name="toggle" scoped="" ref="0xb7b3ac78"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b3ad58"/>
        <function-ref name="get" scoped="" ref="0xb7b3ae38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b3af18"/>
        <function-ref name="set" scoped="" ref="0xb7b39010"/>
        <function-ref name="clr" scoped="" ref="0xb7b390f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0xb7b4eea8" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0xb7b4eea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b4d0c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b4d1a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b4d280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b4d360"/>
        <function-ref name="get" scoped="" ref="0xb7b4d440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b4d520"/>
        <function-ref name="set" scoped="" ref="0xb7b4d600"/>
        <function-ref name="clr" scoped="" ref="0xb7b4d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0xb7b47590" loc="61:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0xb7b47590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b47768"/>
        <function-ref name="isInput" scoped="" ref="0xb7b47848"/>
        <function-ref name="toggle" scoped="" ref="0xb7b47928"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b47a08"/>
        <function-ref name="get" scoped="" ref="0xb7b47ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b47bc8"/>
        <function-ref name="set" scoped="" ref="0xb7b47ca8"/>
        <function-ref name="clr" scoped="" ref="0xb7b47d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0xb7b30e08" loc="101:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0xb7b30e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b2f010"/>
        <function-ref name="isInput" scoped="" ref="0xb7b2f0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b2f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b2f2b0"/>
        <function-ref name="get" scoped="" ref="0xb7b2f390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b2f470"/>
        <function-ref name="set" scoped="" ref="0xb7b2f550"/>
        <function-ref name="clr" scoped="" ref="0xb7b2f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0xb7b45a08" loc="64:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0xb7b45a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b45be0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b45cc0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b45da0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b45e80"/>
        <function-ref name="get" scoped="" ref="0xb7b44010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b440f0"/>
        <function-ref name="set" scoped="" ref="0xb7b441d0"/>
        <function-ref name="clr" scoped="" ref="0xb7b442b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0xb7b3e210" loc="75:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0xb7b3e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b3e3e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b3e4c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b3e5a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b3e688"/>
        <function-ref name="get" scoped="" ref="0xb7b3e768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b3e848"/>
        <function-ref name="set" scoped="" ref="0xb7b3e928"/>
        <function-ref name="clr" scoped="" ref="0xb7b3ea08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0xb7b38750" loc="86:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0xb7b38750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b38928"/>
        <function-ref name="isInput" scoped="" ref="0xb7b38a08"/>
        <function-ref name="toggle" scoped="" ref="0xb7b38ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b38bc8"/>
        <function-ref name="get" scoped="" ref="0xb7b38ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b38d88"/>
        <function-ref name="set" scoped="" ref="0xb7b38e68"/>
        <function-ref name="clr" scoped="" ref="0xb7b37010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0xb7b338e0" loc="95:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0xb7b338e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b33ab8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b33b98"/>
        <function-ref name="toggle" scoped="" ref="0xb7b33c78"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b33d58"/>
        <function-ref name="get" scoped="" ref="0xb7b33e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b33f18"/>
        <function-ref name="set" scoped="" ref="0xb7b32010"/>
        <function-ref name="clr" scoped="" ref="0xb7b320f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0xb7b4cce8" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0xb7b4cce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b4cec0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b4b010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b4b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b4b1d0"/>
        <function-ref name="get" scoped="" ref="0xb7b4b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b4b390"/>
        <function-ref name="set" scoped="" ref="0xb7b4b470"/>
        <function-ref name="clr" scoped="" ref="0xb7b4b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0xb7b4a210" loc="56:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0xb7b4a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b4a3e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b4a4c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b4a5a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b4a688"/>
        <function-ref name="get" scoped="" ref="0xb7b4a768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b4a848"/>
        <function-ref name="set" scoped="" ref="0xb7b4a928"/>
        <function-ref name="clr" scoped="" ref="0xb7b4aa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0xb7b438e0" loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0xb7b438e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b43ab8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b43b98"/>
        <function-ref name="toggle" scoped="" ref="0xb7b43c78"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b43d58"/>
        <function-ref name="get" scoped="" ref="0xb7b43e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b43f18"/>
        <function-ref name="set" scoped="" ref="0xb7b42010"/>
        <function-ref name="clr" scoped="" ref="0xb7b420f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0xb7b3c0a0" loc="78:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0xb7b3c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b3c278"/>
        <function-ref name="isInput" scoped="" ref="0xb7b3c358"/>
        <function-ref name="toggle" scoped="" ref="0xb7b3c438"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b3c518"/>
        <function-ref name="get" scoped="" ref="0xb7b3c5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b3c6d8"/>
        <function-ref name="set" scoped="" ref="0xb7b3c7b8"/>
        <function-ref name="clr" scoped="" ref="0xb7b3c898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0xb7b36670" loc="89:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0xb7b36670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b36848"/>
        <function-ref name="isInput" scoped="" ref="0xb7b36928"/>
        <function-ref name="toggle" scoped="" ref="0xb7b36a08"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b36ae8"/>
        <function-ref name="get" scoped="" ref="0xb7b36bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b36ca8"/>
        <function-ref name="set" scoped="" ref="0xb7b36d88"/>
        <function-ref name="clr" scoped="" ref="0xb7b36e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0xb7b4fa08" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0xb7b4fa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b4fbe0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b4fcc0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b4fda0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b4fe80"/>
        <function-ref name="get" scoped="" ref="0xb7b4e010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b4e0f0"/>
        <function-ref name="set" scoped="" ref="0xb7b4e1d0"/>
        <function-ref name="clr" scoped="" ref="0xb7b4e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0xb7b480a0" loc="59:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0xb7b480a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b482f8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b483d8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b484b8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b48598"/>
        <function-ref name="get" scoped="" ref="0xb7b48678"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b48758"/>
        <function-ref name="set" scoped="" ref="0xb7b48838"/>
        <function-ref name="clr" scoped="" ref="0xb7b48918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0xb7b41750" loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0xb7b41750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b41928"/>
        <function-ref name="isInput" scoped="" ref="0xb7b41a08"/>
        <function-ref name="toggle" scoped="" ref="0xb7b41ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b41bc8"/>
        <function-ref name="get" scoped="" ref="0xb7b41ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b41d88"/>
        <function-ref name="set" scoped="" ref="0xb7b41e68"/>
        <function-ref name="clr" scoped="" ref="0xb7b40010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0xb7b31750" loc="98:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0xb7b31750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b31928"/>
        <function-ref name="isInput" scoped="" ref="0xb7b31a08"/>
        <function-ref name="toggle" scoped="" ref="0xb7b31ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b31bc8"/>
        <function-ref name="get" scoped="" ref="0xb7b31ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b31d88"/>
        <function-ref name="set" scoped="" ref="0xb7b31e68"/>
        <function-ref name="clr" scoped="" ref="0xb7b30010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0xb7b40c08" loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0xb7b40c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b40ee0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b3f010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b3f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b3f1d0"/>
        <function-ref name="get" scoped="" ref="0xb7b3f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b3f390"/>
        <function-ref name="set" scoped="" ref="0xb7b3f470"/>
        <function-ref name="clr" scoped="" ref="0xb7b3f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0xb7b392f0" loc="84:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0xb7b392f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b394c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b395a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b39688"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b39768"/>
        <function-ref name="get" scoped="" ref="0xb7b39848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b39928"/>
        <function-ref name="set" scoped="" ref="0xb7b39a08"/>
        <function-ref name="clr" scoped="" ref="0xb7b39ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0xb7b344b0" loc="93:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0xb7b344b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b34688"/>
        <function-ref name="isInput" scoped="" ref="0xb7b34768"/>
        <function-ref name="toggle" scoped="" ref="0xb7b34848"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b34928"/>
        <function-ref name="get" scoped="" ref="0xb7b34a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b34ae8"/>
        <function-ref name="set" scoped="" ref="0xb7b34bc8"/>
        <function-ref name="clr" scoped="" ref="0xb7b34ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0xb7b2ece8" loc="104:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0xb7b2ece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b2eec0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b2d010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b2d0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b2d1d0"/>
        <function-ref name="get" scoped="" ref="0xb7b2d2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b2d390"/>
        <function-ref name="set" scoped="" ref="0xb7b2d470"/>
        <function-ref name="clr" scoped="" ref="0xb7b2d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0xb7b4d8e0" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0xb7b4d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b4dab8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b4db98"/>
        <function-ref name="toggle" scoped="" ref="0xb7b4dc78"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b4dd58"/>
        <function-ref name="get" scoped="" ref="0xb7b4de38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b4df18"/>
        <function-ref name="set" scoped="" ref="0xb7b4c010"/>
        <function-ref name="clr" scoped="" ref="0xb7b4c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0xb7b45010" loc="62:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0xb7b45010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b451e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b452c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b453a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b45488"/>
        <function-ref name="get" scoped="" ref="0xb7b45568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b45648"/>
        <function-ref name="set" scoped="" ref="0xb7b45728"/>
        <function-ref name="clr" scoped="" ref="0xb7b45808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0xb7b350a0" loc="91:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0xb7b350a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b35278"/>
        <function-ref name="isInput" scoped="" ref="0xb7b35358"/>
        <function-ref name="toggle" scoped="" ref="0xb7b35438"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b35518"/>
        <function-ref name="get" scoped="" ref="0xb7b355f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b356d8"/>
        <function-ref name="set" scoped="" ref="0xb7b357b8"/>
        <function-ref name="clr" scoped="" ref="0xb7b35898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0xb7b444b0" loc="65:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0xb7b444b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b44688"/>
        <function-ref name="isInput" scoped="" ref="0xb7b44768"/>
        <function-ref name="toggle" scoped="" ref="0xb7b44848"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b44928"/>
        <function-ref name="get" scoped="" ref="0xb7b44a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b44ae8"/>
        <function-ref name="set" scoped="" ref="0xb7b44bc8"/>
        <function-ref name="clr" scoped="" ref="0xb7b44ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0xb7b3ec08" loc="76:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0xb7b3ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b3ede0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b3eec0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b3d010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b3d0f0"/>
        <function-ref name="get" scoped="" ref="0xb7b3d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b3d2b0"/>
        <function-ref name="set" scoped="" ref="0xb7b3d390"/>
        <function-ref name="clr" scoped="" ref="0xb7b3d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0xb7b37210" loc="87:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0xb7b37210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b373e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b374c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b375a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b37688"/>
        <function-ref name="get" scoped="" ref="0xb7b37768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b37848"/>
        <function-ref name="set" scoped="" ref="0xb7b37928"/>
        <function-ref name="clr" scoped="" ref="0xb7b37a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0xb7b322f0" loc="96:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0xb7b322f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b324c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b325a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b32688"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b32768"/>
        <function-ref name="get" scoped="" ref="0xb7b32848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b32928"/>
        <function-ref name="set" scoped="" ref="0xb7b32a08"/>
        <function-ref name="clr" scoped="" ref="0xb7b32ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0xb7b59550" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0xb7b59550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b59728"/>
        <function-ref name="isInput" scoped="" ref="0xb7b59808"/>
        <function-ref name="toggle" scoped="" ref="0xb7b598e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b599c8"/>
        <function-ref name="get" scoped="" ref="0xb7b59aa8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b59b88"/>
        <function-ref name="set" scoped="" ref="0xb7b59c68"/>
        <function-ref name="clr" scoped="" ref="0xb7b59d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0xb7b4ac08" loc="57:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0xb7b4ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b4ade0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b4aec0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b49010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b490f0"/>
        <function-ref name="get" scoped="" ref="0xb7b491d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b492b0"/>
        <function-ref name="set" scoped="" ref="0xb7b49390"/>
        <function-ref name="clr" scoped="" ref="0xb7b49470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0xb7b422f0" loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0xb7b422f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b424c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b425a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b42688"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b42768"/>
        <function-ref name="get" scoped="" ref="0xb7b42848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b42928"/>
        <function-ref name="set" scoped="" ref="0xb7b42a08"/>
        <function-ref name="clr" scoped="" ref="0xb7b42ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0xb7b3ca98" loc="79:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0xb7b3ca98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b3cc70"/>
        <function-ref name="isInput" scoped="" ref="0xb7b3cd50"/>
        <function-ref name="toggle" scoped="" ref="0xb7b3ce30"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b3cf10"/>
        <function-ref name="get" scoped="" ref="0xb7b3b010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b3b0f0"/>
        <function-ref name="set" scoped="" ref="0xb7b3b1d0"/>
        <function-ref name="clr" scoped="" ref="0xb7b3b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0xb7b2f830" loc="102:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0xb7b2f830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b2fa08"/>
        <function-ref name="isInput" scoped="" ref="0xb7b2fae8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b2fbc8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b2fca8"/>
        <function-ref name="get" scoped="" ref="0xb7b2fd88"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b2fe68"/>
        <function-ref name="set" scoped="" ref="0xb7b2e010"/>
        <function-ref name="clr" scoped="" ref="0xb7b2e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0xb7b3bea8" loc="82:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0xb7b3bea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b3a0c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b3a1a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b3a280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b3a360"/>
        <function-ref name="get" scoped="" ref="0xb7b3a440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b3a520"/>
        <function-ref name="set" scoped="" ref="0xb7b3a600"/>
        <function-ref name="clr" scoped="" ref="0xb7b3a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0xb7b40210" loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0xb7b40210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b403e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b404c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b405a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b40688"/>
        <function-ref name="get" scoped="" ref="0xb7b40768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b40848"/>
        <function-ref name="set" scoped="" ref="0xb7b40928"/>
        <function-ref name="clr" scoped="" ref="0xb7b40a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0xb7b4e4b0" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0xb7b4e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b4e688"/>
        <function-ref name="isInput" scoped="" ref="0xb7b4e768"/>
        <function-ref name="toggle" scoped="" ref="0xb7b4e848"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b4e928"/>
        <function-ref name="get" scoped="" ref="0xb7b4ea08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b4eae8"/>
        <function-ref name="set" scoped="" ref="0xb7b4ebc8"/>
        <function-ref name="clr" scoped="" ref="0xb7b4eca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0xb7b48b18" loc="60:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0xb7b48b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b48cf0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b48dd0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b48eb0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b47010"/>
        <function-ref name="get" scoped="" ref="0xb7b470f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b471d0"/>
        <function-ref name="set" scoped="" ref="0xb7b472b0"/>
        <function-ref name="clr" scoped="" ref="0xb7b47390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7b03330" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7b03330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b03508"/>
        <function-ref name="isInput" scoped="" ref="0xb7b035e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b036c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b037a8"/>
        <function-ref name="get" scoped="" ref="0xb7b03888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b03968"/>
        <function-ref name="set" scoped="" ref="0xb7b03a48"/>
        <function-ref name="clr" scoped="" ref="0xb7b03b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7b01030" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7b01030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b01208"/>
        <function-ref name="isInput" scoped="" ref="0xb7b012e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b013c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b014a8"/>
        <function-ref name="get" scoped="" ref="0xb7b01588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b01668"/>
        <function-ref name="set" scoped="" ref="0xb7b01748"/>
        <function-ref name="clr" scoped="" ref="0xb7b01828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7b05010" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7b05010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b051e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b052c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b053a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b05488"/>
        <function-ref name="get" scoped="" ref="0xb7b05568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b05648"/>
        <function-ref name="set" scoped="" ref="0xb7b05728"/>
        <function-ref name="clr" scoped="" ref="0xb7b05808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7b03c88" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7b03c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b03e60"/>
        <function-ref name="isInput" scoped="" ref="0xb7b02010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b020f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b021d0"/>
        <function-ref name="get" scoped="" ref="0xb7b022b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b02390"/>
        <function-ref name="set" scoped="" ref="0xb7b02470"/>
        <function-ref name="clr" scoped="" ref="0xb7b02550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7b01988" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7b01988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b01b60"/>
        <function-ref name="isInput" scoped="" ref="0xb7b01c40"/>
        <function-ref name="toggle" scoped="" ref="0xb7b01d20"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b01e00"/>
        <function-ref name="get" scoped="" ref="0xb7b01ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b00010"/>
        <function-ref name="set" scoped="" ref="0xb7b000f0"/>
        <function-ref name="clr" scoped="" ref="0xb7b001d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7b05968" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7b05968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b05b40"/>
        <function-ref name="isInput" scoped="" ref="0xb7b05c20"/>
        <function-ref name="toggle" scoped="" ref="0xb7b05d00"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b05de0"/>
        <function-ref name="get" scoped="" ref="0xb7b05ec0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b03010"/>
        <function-ref name="set" scoped="" ref="0xb7b030f0"/>
        <function-ref name="clr" scoped="" ref="0xb7b031d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7b026b0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7b026b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b02888"/>
        <function-ref name="isInput" scoped="" ref="0xb7b02968"/>
        <function-ref name="toggle" scoped="" ref="0xb7b02a48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b02b28"/>
        <function-ref name="get" scoped="" ref="0xb7b02c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b02ce8"/>
        <function-ref name="set" scoped="" ref="0xb7b02dc8"/>
        <function-ref name="clr" scoped="" ref="0xb7b02ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7b00330" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7b00330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b00508"/>
        <function-ref name="isInput" scoped="" ref="0xb7b005e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b006c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b007a8"/>
        <function-ref name="get" scoped="" ref="0xb7b00888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b00968"/>
        <function-ref name="set" scoped="" ref="0xb7b00a48"/>
        <function-ref name="clr" scoped="" ref="0xb7b00b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb72263b0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb72263b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7226588"/>
        <function-ref name="isInput" scoped="" ref="0xb7226668"/>
        <function-ref name="toggle" scoped="" ref="0xb7226748"/>
        <function-ref name="isOutput" scoped="" ref="0xb7226828"/>
        <function-ref name="get" scoped="" ref="0xb7226908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72269e8"/>
        <function-ref name="set" scoped="" ref="0xb7226ac8"/>
        <function-ref name="clr" scoped="" ref="0xb7226ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7225d70" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7225d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7224010"/>
        <function-ref name="isInput" scoped="" ref="0xb72240f0"/>
        <function-ref name="toggle" scoped="" ref="0xb72241d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72242b0"/>
        <function-ref name="get" scoped="" ref="0xb7224390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7224470"/>
        <function-ref name="set" scoped="" ref="0xb7224550"/>
        <function-ref name="clr" scoped="" ref="0xb7224630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb721e7f8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb721e7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb721e9d0"/>
        <function-ref name="isInput" scoped="" ref="0xb721eab0"/>
        <function-ref name="toggle" scoped="" ref="0xb721eb90"/>
        <function-ref name="isOutput" scoped="" ref="0xb721ec70"/>
        <function-ref name="get" scoped="" ref="0xb721ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb721ee30"/>
        <function-ref name="set" scoped="" ref="0xb721ef10"/>
        <function-ref name="clr" scoped="" ref="0xb721d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb721c228" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb721c228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb721c400"/>
        <function-ref name="isInput" scoped="" ref="0xb721c4e0"/>
        <function-ref name="toggle" scoped="" ref="0xb721c5c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb721c6a0"/>
        <function-ref name="get" scoped="" ref="0xb721c780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb721c860"/>
        <function-ref name="set" scoped="" ref="0xb721c940"/>
        <function-ref name="clr" scoped="" ref="0xb721ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb721bc08" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb721bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb721bde0"/>
        <function-ref name="isInput" scoped="" ref="0xb721bec0"/>
        <function-ref name="toggle" scoped="" ref="0xb721a010"/>
        <function-ref name="isOutput" scoped="" ref="0xb721a0f0"/>
        <function-ref name="get" scoped="" ref="0xb721a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb721a2b0"/>
        <function-ref name="set" scoped="" ref="0xb721a390"/>
        <function-ref name="clr" scoped="" ref="0xb721a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb72196c0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb72196c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7219898"/>
        <function-ref name="isInput" scoped="" ref="0xb7219978"/>
        <function-ref name="toggle" scoped="" ref="0xb7219a58"/>
        <function-ref name="isOutput" scoped="" ref="0xb7219b38"/>
        <function-ref name="get" scoped="" ref="0xb7219c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7219cf8"/>
        <function-ref name="set" scoped="" ref="0xb7219dd8"/>
        <function-ref name="clr" scoped="" ref="0xb7219eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb72170b0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb72170b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7217288"/>
        <function-ref name="isInput" scoped="" ref="0xb7217368"/>
        <function-ref name="toggle" scoped="" ref="0xb7217448"/>
        <function-ref name="isOutput" scoped="" ref="0xb7217528"/>
        <function-ref name="get" scoped="" ref="0xb7217608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72176e8"/>
        <function-ref name="set" scoped="" ref="0xb72177c8"/>
        <function-ref name="clr" scoped="" ref="0xb72178a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7216a88" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7216a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7216c60"/>
        <function-ref name="isInput" scoped="" ref="0xb7216d40"/>
        <function-ref name="toggle" scoped="" ref="0xb7216e20"/>
        <function-ref name="isOutput" scoped="" ref="0xb7216f00"/>
        <function-ref name="get" scoped="" ref="0xb7215010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72150f0"/>
        <function-ref name="set" scoped="" ref="0xb72151d0"/>
        <function-ref name="clr" scoped="" ref="0xb72152b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7afcba8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7afcba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7afcd80"/>
        <function-ref name="isInput" scoped="" ref="0xb7afce60"/>
        <function-ref name="toggle" scoped="" ref="0xb7afb010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7afb0f0"/>
        <function-ref name="get" scoped="" ref="0xb7afb1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7afb2b0"/>
        <function-ref name="set" scoped="" ref="0xb7afb390"/>
        <function-ref name="clr" scoped="" ref="0xb7afb470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7afa890" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7afa890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7afaa68"/>
        <function-ref name="isInput" scoped="" ref="0xb7afab48"/>
        <function-ref name="toggle" scoped="" ref="0xb7afac28"/>
        <function-ref name="isOutput" scoped="" ref="0xb7afad08"/>
        <function-ref name="get" scoped="" ref="0xb7afade8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7afaec8"/>
        <function-ref name="set" scoped="" ref="0xb7af9010"/>
        <function-ref name="clr" scoped="" ref="0xb7af90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7afd888" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7afd888"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7afda60"/>
        <function-ref name="isInput" scoped="" ref="0xb7afdb40"/>
        <function-ref name="toggle" scoped="" ref="0xb7afdc20"/>
        <function-ref name="isOutput" scoped="" ref="0xb7afdd00"/>
        <function-ref name="get" scoped="" ref="0xb7afdde0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7afdec0"/>
        <function-ref name="set" scoped="" ref="0xb7afc010"/>
        <function-ref name="clr" scoped="" ref="0xb7afc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7afb5d0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7afb5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7afb7a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7afb888"/>
        <function-ref name="toggle" scoped="" ref="0xb7afb968"/>
        <function-ref name="isOutput" scoped="" ref="0xb7afba48"/>
        <function-ref name="get" scoped="" ref="0xb7afbb28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7afbc08"/>
        <function-ref name="set" scoped="" ref="0xb7afbce8"/>
        <function-ref name="clr" scoped="" ref="0xb7afbdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7af9250" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7af9250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7af9428"/>
        <function-ref name="isInput" scoped="" ref="0xb7af9508"/>
        <function-ref name="toggle" scoped="" ref="0xb7af95e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7af96c8"/>
        <function-ref name="get" scoped="" ref="0xb7af97a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7af9888"/>
        <function-ref name="set" scoped="" ref="0xb7af9968"/>
        <function-ref name="clr" scoped="" ref="0xb7af9a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7afc250" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7afc250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7afc428"/>
        <function-ref name="isInput" scoped="" ref="0xb7afc508"/>
        <function-ref name="toggle" scoped="" ref="0xb7afc5e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7afc6c8"/>
        <function-ref name="get" scoped="" ref="0xb7afc7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7afc888"/>
        <function-ref name="set" scoped="" ref="0xb7afc968"/>
        <function-ref name="clr" scoped="" ref="0xb7afca48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7afbf28" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7afbf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7afa110"/>
        <function-ref name="isInput" scoped="" ref="0xb7afa1f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7afa2d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7afa3b0"/>
        <function-ref name="get" scoped="" ref="0xb7afa490"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7afa570"/>
        <function-ref name="set" scoped="" ref="0xb7afa650"/>
        <function-ref name="clr" scoped="" ref="0xb7afa730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7af9ba8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7af9ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7af9d80"/>
        <function-ref name="isInput" scoped="" ref="0xb7af9e60"/>
        <function-ref name="toggle" scoped="" ref="0xb7af7010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7af70f0"/>
        <function-ref name="get" scoped="" ref="0xb7af71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7af72b0"/>
        <function-ref name="set" scoped="" ref="0xb7af7390"/>
        <function-ref name="clr" scoped="" ref="0xb7af7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71edde8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71edde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71e9010"/>
        <function-ref name="isInput" scoped="" ref="0xb71e90f0"/>
        <function-ref name="toggle" scoped="" ref="0xb71e91d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71e92b0"/>
        <function-ref name="get" scoped="" ref="0xb71e9390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71e9470"/>
        <function-ref name="set" scoped="" ref="0xb71e9550"/>
        <function-ref name="clr" scoped="" ref="0xb71e9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71e87f8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71e87f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71e89d0"/>
        <function-ref name="isInput" scoped="" ref="0xb71e8ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb71e8b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb71e8c70"/>
        <function-ref name="get" scoped="" ref="0xb71e8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71e8e30"/>
        <function-ref name="set" scoped="" ref="0xb71e8f10"/>
        <function-ref name="clr" scoped="" ref="0xb71e7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71e6228" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71e6228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71e6400"/>
        <function-ref name="isInput" scoped="" ref="0xb71e64e0"/>
        <function-ref name="toggle" scoped="" ref="0xb71e65c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71e66a0"/>
        <function-ref name="get" scoped="" ref="0xb71e6780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71e6860"/>
        <function-ref name="set" scoped="" ref="0xb71e6940"/>
        <function-ref name="clr" scoped="" ref="0xb71e6a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71e5c08" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71e5c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71e5de0"/>
        <function-ref name="isInput" scoped="" ref="0xb71e5ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb71e4010"/>
        <function-ref name="isOutput" scoped="" ref="0xb71e40f0"/>
        <function-ref name="get" scoped="" ref="0xb71e41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71e42b0"/>
        <function-ref name="set" scoped="" ref="0xb71e4390"/>
        <function-ref name="clr" scoped="" ref="0xb71e4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71e36c0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71e36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71e3898"/>
        <function-ref name="isInput" scoped="" ref="0xb71e3978"/>
        <function-ref name="toggle" scoped="" ref="0xb71e3a58"/>
        <function-ref name="isOutput" scoped="" ref="0xb71e3b38"/>
        <function-ref name="get" scoped="" ref="0xb71e3c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71e3cf8"/>
        <function-ref name="set" scoped="" ref="0xb71e3dd8"/>
        <function-ref name="clr" scoped="" ref="0xb71e3eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71e10b0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71e10b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71e1288"/>
        <function-ref name="isInput" scoped="" ref="0xb71e1368"/>
        <function-ref name="toggle" scoped="" ref="0xb71e1448"/>
        <function-ref name="isOutput" scoped="" ref="0xb71e1528"/>
        <function-ref name="get" scoped="" ref="0xb71e1608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71e16e8"/>
        <function-ref name="set" scoped="" ref="0xb71e17c8"/>
        <function-ref name="clr" scoped="" ref="0xb71e18a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71e0a88" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71e0a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71e0c60"/>
        <function-ref name="isInput" scoped="" ref="0xb71e0d40"/>
        <function-ref name="toggle" scoped="" ref="0xb71e0e20"/>
        <function-ref name="isOutput" scoped="" ref="0xb71e0f00"/>
        <function-ref name="get" scoped="" ref="0xb71df010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71df0f0"/>
        <function-ref name="set" scoped="" ref="0xb71df1d0"/>
        <function-ref name="clr" scoped="" ref="0xb71df2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71de538" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71de538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71de710"/>
        <function-ref name="isInput" scoped="" ref="0xb71de7f0"/>
        <function-ref name="toggle" scoped="" ref="0xb71de8d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71de9b0"/>
        <function-ref name="get" scoped="" ref="0xb71dea90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71deb70"/>
        <function-ref name="set" scoped="" ref="0xb71dec50"/>
        <function-ref name="clr" scoped="" ref="0xb71ded30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7af34f0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7af34f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7af36c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7af37a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7af3888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7af3968"/>
        <function-ref name="get" scoped="" ref="0xb7af3a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7af3b28"/>
        <function-ref name="set" scoped="" ref="0xb7af3c08"/>
        <function-ref name="clr" scoped="" ref="0xb7af3ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7af1170" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7af1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7af1348"/>
        <function-ref name="isInput" scoped="" ref="0xb7af1428"/>
        <function-ref name="toggle" scoped="" ref="0xb7af1508"/>
        <function-ref name="isOutput" scoped="" ref="0xb7af15e8"/>
        <function-ref name="get" scoped="" ref="0xb7af16c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7af17a8"/>
        <function-ref name="set" scoped="" ref="0xb7af1888"/>
        <function-ref name="clr" scoped="" ref="0xb7af1968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7af4228" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7af4228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7af4400"/>
        <function-ref name="isInput" scoped="" ref="0xb7af44e0"/>
        <function-ref name="toggle" scoped="" ref="0xb7af45c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7af46a0"/>
        <function-ref name="get" scoped="" ref="0xb7af4780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7af4860"/>
        <function-ref name="set" scoped="" ref="0xb7af4940"/>
        <function-ref name="clr" scoped="" ref="0xb7af4a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7af3e48" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7af3e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7af2050"/>
        <function-ref name="isInput" scoped="" ref="0xb7af2130"/>
        <function-ref name="toggle" scoped="" ref="0xb7af2210"/>
        <function-ref name="isOutput" scoped="" ref="0xb7af22f0"/>
        <function-ref name="get" scoped="" ref="0xb7af23d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7af24b0"/>
        <function-ref name="set" scoped="" ref="0xb7af2590"/>
        <function-ref name="clr" scoped="" ref="0xb7af2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7af1ac8" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7af1ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7af1ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7af1d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7af1e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7af0010"/>
        <function-ref name="get" scoped="" ref="0xb7af00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7af01d0"/>
        <function-ref name="set" scoped="" ref="0xb7af02b0"/>
        <function-ref name="clr" scoped="" ref="0xb7af0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7af4b80" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7af4b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7af4d58"/>
        <function-ref name="isInput" scoped="" ref="0xb7af4e38"/>
        <function-ref name="toggle" scoped="" ref="0xb7af4f18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7af3010"/>
        <function-ref name="get" scoped="" ref="0xb7af30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7af31d0"/>
        <function-ref name="set" scoped="" ref="0xb7af32b0"/>
        <function-ref name="clr" scoped="" ref="0xb7af3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7af27d0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7af27d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7af29a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7af2a88"/>
        <function-ref name="toggle" scoped="" ref="0xb7af2b68"/>
        <function-ref name="isOutput" scoped="" ref="0xb7af2c48"/>
        <function-ref name="get" scoped="" ref="0xb7af2d28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7af2e08"/>
        <function-ref name="set" scoped="" ref="0xb7af2ee8"/>
        <function-ref name="clr" scoped="" ref="0xb7af1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7af04f0" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7af04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7af06c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7af07a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7af0888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7af0968"/>
        <function-ref name="get" scoped="" ref="0xb7af0a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7af0b28"/>
        <function-ref name="set" scoped="" ref="0xb7af0c08"/>
        <function-ref name="clr" scoped="" ref="0xb7af0ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71b1938" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71b1938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71b1b10"/>
        <function-ref name="isInput" scoped="" ref="0xb71b1bf0"/>
        <function-ref name="toggle" scoped="" ref="0xb71b1cd0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71b1db0"/>
        <function-ref name="get" scoped="" ref="0xb71b1e90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71b0010"/>
        <function-ref name="set" scoped="" ref="0xb71b00f0"/>
        <function-ref name="clr" scoped="" ref="0xb71b01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71af3b0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71af3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71af588"/>
        <function-ref name="isInput" scoped="" ref="0xb71af668"/>
        <function-ref name="toggle" scoped="" ref="0xb71af748"/>
        <function-ref name="isOutput" scoped="" ref="0xb71af828"/>
        <function-ref name="get" scoped="" ref="0xb71af908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71af9e8"/>
        <function-ref name="set" scoped="" ref="0xb71afac8"/>
        <function-ref name="clr" scoped="" ref="0xb71afba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71aed70" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71aed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71ad010"/>
        <function-ref name="isInput" scoped="" ref="0xb71ad0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb71ad1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71ad2b0"/>
        <function-ref name="get" scoped="" ref="0xb71ad390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71ad470"/>
        <function-ref name="set" scoped="" ref="0xb71ad550"/>
        <function-ref name="clr" scoped="" ref="0xb71ad630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71ac7f8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71ac7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71ac9d0"/>
        <function-ref name="isInput" scoped="" ref="0xb71acab0"/>
        <function-ref name="toggle" scoped="" ref="0xb71acb90"/>
        <function-ref name="isOutput" scoped="" ref="0xb71acc70"/>
        <function-ref name="get" scoped="" ref="0xb71acd50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71ace30"/>
        <function-ref name="set" scoped="" ref="0xb71acf10"/>
        <function-ref name="clr" scoped="" ref="0xb71ab010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71aa228" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71aa228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71aa400"/>
        <function-ref name="isInput" scoped="" ref="0xb71aa4e0"/>
        <function-ref name="toggle" scoped="" ref="0xb71aa5c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71aa6a0"/>
        <function-ref name="get" scoped="" ref="0xb71aa780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71aa860"/>
        <function-ref name="set" scoped="" ref="0xb71aa940"/>
        <function-ref name="clr" scoped="" ref="0xb71aaa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71a9c08" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71a9c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71a9de0"/>
        <function-ref name="isInput" scoped="" ref="0xb71a9ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb71a8010"/>
        <function-ref name="isOutput" scoped="" ref="0xb71a80f0"/>
        <function-ref name="get" scoped="" ref="0xb71a81d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71a82b0"/>
        <function-ref name="set" scoped="" ref="0xb71a8390"/>
        <function-ref name="clr" scoped="" ref="0xb71a8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71a76c0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71a76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71a7898"/>
        <function-ref name="isInput" scoped="" ref="0xb71a7978"/>
        <function-ref name="toggle" scoped="" ref="0xb71a7a58"/>
        <function-ref name="isOutput" scoped="" ref="0xb71a7b38"/>
        <function-ref name="get" scoped="" ref="0xb71a7c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71a7cf8"/>
        <function-ref name="set" scoped="" ref="0xb71a7dd8"/>
        <function-ref name="clr" scoped="" ref="0xb71a7eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71a50b0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71a50b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71a5288"/>
        <function-ref name="isInput" scoped="" ref="0xb71a5368"/>
        <function-ref name="toggle" scoped="" ref="0xb71a5448"/>
        <function-ref name="isOutput" scoped="" ref="0xb71a5528"/>
        <function-ref name="get" scoped="" ref="0xb71a5608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71a56e8"/>
        <function-ref name="set" scoped="" ref="0xb71a57c8"/>
        <function-ref name="clr" scoped="" ref="0xb71a58a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7aebe48" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7aebe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aea050"/>
        <function-ref name="isInput" scoped="" ref="0xb7aea130"/>
        <function-ref name="toggle" scoped="" ref="0xb7aea210"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aea2f0"/>
        <function-ref name="get" scoped="" ref="0xb7aea3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aea4b0"/>
        <function-ref name="set" scoped="" ref="0xb7aea590"/>
        <function-ref name="clr" scoped="" ref="0xb7aea670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7ae9ac8" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7ae9ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ae9ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7ae9d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7ae9e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ae8010"/>
        <function-ref name="get" scoped="" ref="0xb7ae80f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ae81d0"/>
        <function-ref name="set" scoped="" ref="0xb7ae82b0"/>
        <function-ref name="clr" scoped="" ref="0xb7ae8390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7aecb00" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7aecb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aeccd8"/>
        <function-ref name="isInput" scoped="" ref="0xb7aecdb8"/>
        <function-ref name="toggle" scoped="" ref="0xb7aece98"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aeb010"/>
        <function-ref name="get" scoped="" ref="0xb7aeb0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aeb1d0"/>
        <function-ref name="set" scoped="" ref="0xb7aeb2b0"/>
        <function-ref name="clr" scoped="" ref="0xb7aeb390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7aea7d0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7aea7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aea9a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7aeaa88"/>
        <function-ref name="toggle" scoped="" ref="0xb7aeab68"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aeac48"/>
        <function-ref name="get" scoped="" ref="0xb7aead28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aeae08"/>
        <function-ref name="set" scoped="" ref="0xb7aeaee8"/>
        <function-ref name="clr" scoped="" ref="0xb7ae9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7ae84f0" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7ae84f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ae86c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7ae87a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7ae8888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ae8968"/>
        <function-ref name="get" scoped="" ref="0xb7ae8a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ae8b28"/>
        <function-ref name="set" scoped="" ref="0xb7ae8c08"/>
        <function-ref name="clr" scoped="" ref="0xb7ae8ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7aeb4f0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7aeb4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aeb6c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7aeb7a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7aeb888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aeb968"/>
        <function-ref name="get" scoped="" ref="0xb7aeba48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aebb28"/>
        <function-ref name="set" scoped="" ref="0xb7aebc08"/>
        <function-ref name="clr" scoped="" ref="0xb7aebce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7ae9170" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7ae9170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ae9348"/>
        <function-ref name="isInput" scoped="" ref="0xb7ae9428"/>
        <function-ref name="toggle" scoped="" ref="0xb7ae9508"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ae95e8"/>
        <function-ref name="get" scoped="" ref="0xb7ae96c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ae97a8"/>
        <function-ref name="set" scoped="" ref="0xb7ae9888"/>
        <function-ref name="clr" scoped="" ref="0xb7ae9968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7ae8e48" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7ae8e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ae7050"/>
        <function-ref name="isInput" scoped="" ref="0xb7ae7130"/>
        <function-ref name="toggle" scoped="" ref="0xb7ae7210"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ae72f0"/>
        <function-ref name="get" scoped="" ref="0xb7ae73d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ae74b0"/>
        <function-ref name="set" scoped="" ref="0xb7ae7590"/>
        <function-ref name="clr" scoped="" ref="0xb7ae7670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7179538" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7179538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7179710"/>
        <function-ref name="isInput" scoped="" ref="0xb71797f0"/>
        <function-ref name="toggle" scoped="" ref="0xb71798d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71799b0"/>
        <function-ref name="get" scoped="" ref="0xb7179a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7179b70"/>
        <function-ref name="set" scoped="" ref="0xb7179c50"/>
        <function-ref name="clr" scoped="" ref="0xb7179d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7177010" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7177010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71771e8"/>
        <function-ref name="isInput" scoped="" ref="0xb71772c8"/>
        <function-ref name="toggle" scoped="" ref="0xb71773a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7177488"/>
        <function-ref name="get" scoped="" ref="0xb7177568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7177648"/>
        <function-ref name="set" scoped="" ref="0xb7177728"/>
        <function-ref name="clr" scoped="" ref="0xb7177808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71769e8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71769e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7176bc0"/>
        <function-ref name="isInput" scoped="" ref="0xb7176ca0"/>
        <function-ref name="toggle" scoped="" ref="0xb7176d80"/>
        <function-ref name="isOutput" scoped="" ref="0xb7176e60"/>
        <function-ref name="get" scoped="" ref="0xb7175010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71750f0"/>
        <function-ref name="set" scoped="" ref="0xb71751d0"/>
        <function-ref name="clr" scoped="" ref="0xb71752b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7174538" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7174538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7174710"/>
        <function-ref name="isInput" scoped="" ref="0xb71747f0"/>
        <function-ref name="toggle" scoped="" ref="0xb71748d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71749b0"/>
        <function-ref name="get" scoped="" ref="0xb7174a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7174b70"/>
        <function-ref name="set" scoped="" ref="0xb7174c50"/>
        <function-ref name="clr" scoped="" ref="0xb7174d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7172010" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7172010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71721e8"/>
        <function-ref name="isInput" scoped="" ref="0xb71722c8"/>
        <function-ref name="toggle" scoped="" ref="0xb71723a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7172488"/>
        <function-ref name="get" scoped="" ref="0xb7172568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7172648"/>
        <function-ref name="set" scoped="" ref="0xb7172728"/>
        <function-ref name="clr" scoped="" ref="0xb7172808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71719e8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71719e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7171bc0"/>
        <function-ref name="isInput" scoped="" ref="0xb7171ca0"/>
        <function-ref name="toggle" scoped="" ref="0xb7171d80"/>
        <function-ref name="isOutput" scoped="" ref="0xb7171e60"/>
        <function-ref name="get" scoped="" ref="0xb716f010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb716f0f0"/>
        <function-ref name="set" scoped="" ref="0xb716f1d0"/>
        <function-ref name="clr" scoped="" ref="0xb716f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb716e538" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb716e538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb716e710"/>
        <function-ref name="isInput" scoped="" ref="0xb716e7f0"/>
        <function-ref name="toggle" scoped="" ref="0xb716e8d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb716e9b0"/>
        <function-ref name="get" scoped="" ref="0xb716ea90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb716eb70"/>
        <function-ref name="set" scoped="" ref="0xb716ec50"/>
        <function-ref name="clr" scoped="" ref="0xb716ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb716c010" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb716c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb716c1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb716c2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb716c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb716c488"/>
        <function-ref name="get" scoped="" ref="0xb716c568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb716c648"/>
        <function-ref name="set" scoped="" ref="0xb716c728"/>
        <function-ref name="clr" scoped="" ref="0xb716c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7ae26b0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7ae26b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ae2888"/>
        <function-ref name="isInput" scoped="" ref="0xb7ae2968"/>
        <function-ref name="toggle" scoped="" ref="0xb7ae2a48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ae2b28"/>
        <function-ref name="get" scoped="" ref="0xb7ae2c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ae2ce8"/>
        <function-ref name="set" scoped="" ref="0xb7ae2dc8"/>
        <function-ref name="clr" scoped="" ref="0xb7ae2ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7ae0330" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7ae0330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ae0508"/>
        <function-ref name="isInput" scoped="" ref="0xb7ae05e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7ae06c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ae07a8"/>
        <function-ref name="get" scoped="" ref="0xb7ae0888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ae0968"/>
        <function-ref name="set" scoped="" ref="0xb7ae0a48"/>
        <function-ref name="clr" scoped="" ref="0xb7ae0b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7ae43d8" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7ae43d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ae45b0"/>
        <function-ref name="isInput" scoped="" ref="0xb7ae4690"/>
        <function-ref name="toggle" scoped="" ref="0xb7ae4770"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ae4850"/>
        <function-ref name="get" scoped="" ref="0xb7ae4930"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ae4a10"/>
        <function-ref name="set" scoped="" ref="0xb7ae4af0"/>
        <function-ref name="clr" scoped="" ref="0xb7ae4bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7ae1030" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7ae1030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ae1208"/>
        <function-ref name="isInput" scoped="" ref="0xb7ae12e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7ae13c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ae14a8"/>
        <function-ref name="get" scoped="" ref="0xb7ae1588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ae1668"/>
        <function-ref name="set" scoped="" ref="0xb7ae1748"/>
        <function-ref name="clr" scoped="" ref="0xb7ae1828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7ae0c88" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7ae0c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ae0e60"/>
        <function-ref name="isInput" scoped="" ref="0xb7adf010"/>
        <function-ref name="toggle" scoped="" ref="0xb7adf0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7adf1d0"/>
        <function-ref name="get" scoped="" ref="0xb7adf2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7adf390"/>
        <function-ref name="set" scoped="" ref="0xb7adf470"/>
        <function-ref name="clr" scoped="" ref="0xb7adf550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7ae4d30" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7ae4d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ae4f08"/>
        <function-ref name="isInput" scoped="" ref="0xb7ae2010"/>
        <function-ref name="toggle" scoped="" ref="0xb7ae20f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ae21d0"/>
        <function-ref name="get" scoped="" ref="0xb7ae22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ae2390"/>
        <function-ref name="set" scoped="" ref="0xb7ae2470"/>
        <function-ref name="clr" scoped="" ref="0xb7ae2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7ae1988" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7ae1988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ae1b60"/>
        <function-ref name="isInput" scoped="" ref="0xb7ae1c40"/>
        <function-ref name="toggle" scoped="" ref="0xb7ae1d20"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ae1e00"/>
        <function-ref name="get" scoped="" ref="0xb7ae1ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ae0010"/>
        <function-ref name="set" scoped="" ref="0xb7ae00f0"/>
        <function-ref name="clr" scoped="" ref="0xb7ae01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7adf6b0" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7adf6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7adf888"/>
        <function-ref name="isInput" scoped="" ref="0xb7adf968"/>
        <function-ref name="toggle" scoped="" ref="0xb7adfa48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7adfb28"/>
        <function-ref name="get" scoped="" ref="0xb7adfc08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7adfce8"/>
        <function-ref name="set" scoped="" ref="0xb7adfdc8"/>
        <function-ref name="clr" scoped="" ref="0xb7adfea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7140418" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7140418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71405f0"/>
        <function-ref name="isInput" scoped="" ref="0xb71406d0"/>
        <function-ref name="toggle" scoped="" ref="0xb71407b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7140890"/>
        <function-ref name="get" scoped="" ref="0xb7140970"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7140a50"/>
        <function-ref name="set" scoped="" ref="0xb7140b30"/>
        <function-ref name="clr" scoped="" ref="0xb7140c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb713fde0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb713fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb713e010"/>
        <function-ref name="isInput" scoped="" ref="0xb713e0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb713e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb713e2b0"/>
        <function-ref name="get" scoped="" ref="0xb713e390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb713e470"/>
        <function-ref name="set" scoped="" ref="0xb713e550"/>
        <function-ref name="clr" scoped="" ref="0xb713e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb713d7f8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb713d7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb713d9d0"/>
        <function-ref name="isInput" scoped="" ref="0xb713dab0"/>
        <function-ref name="toggle" scoped="" ref="0xb713db90"/>
        <function-ref name="isOutput" scoped="" ref="0xb713dc70"/>
        <function-ref name="get" scoped="" ref="0xb713dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb713de30"/>
        <function-ref name="set" scoped="" ref="0xb713df10"/>
        <function-ref name="clr" scoped="" ref="0xb713c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb713b228" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb713b228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb713b400"/>
        <function-ref name="isInput" scoped="" ref="0xb713b4e0"/>
        <function-ref name="toggle" scoped="" ref="0xb713b5c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb713b6a0"/>
        <function-ref name="get" scoped="" ref="0xb713b780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb713b860"/>
        <function-ref name="set" scoped="" ref="0xb713b940"/>
        <function-ref name="clr" scoped="" ref="0xb713ba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb713ac08" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb713ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb713ade0"/>
        <function-ref name="isInput" scoped="" ref="0xb713aec0"/>
        <function-ref name="toggle" scoped="" ref="0xb7139010"/>
        <function-ref name="isOutput" scoped="" ref="0xb71390f0"/>
        <function-ref name="get" scoped="" ref="0xb71391d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71392b0"/>
        <function-ref name="set" scoped="" ref="0xb7139390"/>
        <function-ref name="clr" scoped="" ref="0xb7139470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71386c0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71386c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7138898"/>
        <function-ref name="isInput" scoped="" ref="0xb7138978"/>
        <function-ref name="toggle" scoped="" ref="0xb7138a58"/>
        <function-ref name="isOutput" scoped="" ref="0xb7138b38"/>
        <function-ref name="get" scoped="" ref="0xb7138c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7138cf8"/>
        <function-ref name="set" scoped="" ref="0xb7138dd8"/>
        <function-ref name="clr" scoped="" ref="0xb7138eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71360b0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71360b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7136288"/>
        <function-ref name="isInput" scoped="" ref="0xb7136368"/>
        <function-ref name="toggle" scoped="" ref="0xb7136448"/>
        <function-ref name="isOutput" scoped="" ref="0xb7136528"/>
        <function-ref name="get" scoped="" ref="0xb7136608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71366e8"/>
        <function-ref name="set" scoped="" ref="0xb71367c8"/>
        <function-ref name="clr" scoped="" ref="0xb71368a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7135a88" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7135a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7135c60"/>
        <function-ref name="isInput" scoped="" ref="0xb7135d40"/>
        <function-ref name="toggle" scoped="" ref="0xb7135e20"/>
        <function-ref name="isOutput" scoped="" ref="0xb7135f00"/>
        <function-ref name="get" scoped="" ref="0xb7134010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71340f0"/>
        <function-ref name="set" scoped="" ref="0xb71341d0"/>
        <function-ref name="clr" scoped="" ref="0xb71342b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7adbf28" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7adbf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ada110"/>
        <function-ref name="isInput" scoped="" ref="0xb7ada1f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7ada2d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ada3b0"/>
        <function-ref name="get" scoped="" ref="0xb7ada490"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ada570"/>
        <function-ref name="set" scoped="" ref="0xb7ada650"/>
        <function-ref name="clr" scoped="" ref="0xb7ada730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7ad9ba8" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7ad9ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ad9d80"/>
        <function-ref name="isInput" scoped="" ref="0xb7ad9e60"/>
        <function-ref name="toggle" scoped="" ref="0xb7ad8010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ad80f0"/>
        <function-ref name="get" scoped="" ref="0xb7ad81d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ad82b0"/>
        <function-ref name="set" scoped="" ref="0xb7ad8390"/>
        <function-ref name="clr" scoped="" ref="0xb7ad8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7adcc28" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7adcc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7adce00"/>
        <function-ref name="isInput" scoped="" ref="0xb7adcee0"/>
        <function-ref name="toggle" scoped="" ref="0xb7adb010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7adb0f0"/>
        <function-ref name="get" scoped="" ref="0xb7adb1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7adb2b0"/>
        <function-ref name="set" scoped="" ref="0xb7adb390"/>
        <function-ref name="clr" scoped="" ref="0xb7adb470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7ada890" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7ada890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7adaa68"/>
        <function-ref name="isInput" scoped="" ref="0xb7adab48"/>
        <function-ref name="toggle" scoped="" ref="0xb7adac28"/>
        <function-ref name="isOutput" scoped="" ref="0xb7adad08"/>
        <function-ref name="get" scoped="" ref="0xb7adade8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7adaec8"/>
        <function-ref name="set" scoped="" ref="0xb7ad9010"/>
        <function-ref name="clr" scoped="" ref="0xb7ad90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7ad85d0" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7ad85d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ad87a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7ad8888"/>
        <function-ref name="toggle" scoped="" ref="0xb7ad8968"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ad8a48"/>
        <function-ref name="get" scoped="" ref="0xb7ad8b28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ad8c08"/>
        <function-ref name="set" scoped="" ref="0xb7ad8ce8"/>
        <function-ref name="clr" scoped="" ref="0xb7ad8dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7adb5d0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7adb5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7adb7a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7adb888"/>
        <function-ref name="toggle" scoped="" ref="0xb7adb968"/>
        <function-ref name="isOutput" scoped="" ref="0xb7adba48"/>
        <function-ref name="get" scoped="" ref="0xb7adbb28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7adbc08"/>
        <function-ref name="set" scoped="" ref="0xb7adbce8"/>
        <function-ref name="clr" scoped="" ref="0xb7adbdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7ad9250" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7ad9250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ad9428"/>
        <function-ref name="isInput" scoped="" ref="0xb7ad9508"/>
        <function-ref name="toggle" scoped="" ref="0xb7ad95e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ad96c8"/>
        <function-ref name="get" scoped="" ref="0xb7ad97a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ad9888"/>
        <function-ref name="set" scoped="" ref="0xb7ad9968"/>
        <function-ref name="clr" scoped="" ref="0xb7ad9a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7ad8f28" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7ad8f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ad6110"/>
        <function-ref name="isInput" scoped="" ref="0xb7ad61f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7ad62d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ad63b0"/>
        <function-ref name="get" scoped="" ref="0xb7ad6490"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ad6570"/>
        <function-ref name="set" scoped="" ref="0xb7ad6650"/>
        <function-ref name="clr" scoped="" ref="0xb7ad6730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb710cde8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb710cde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7108010"/>
        <function-ref name="isInput" scoped="" ref="0xb71080f0"/>
        <function-ref name="toggle" scoped="" ref="0xb71081d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71082b0"/>
        <function-ref name="get" scoped="" ref="0xb7108390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7108470"/>
        <function-ref name="set" scoped="" ref="0xb7108550"/>
        <function-ref name="clr" scoped="" ref="0xb7108630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71077f8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71077f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71079d0"/>
        <function-ref name="isInput" scoped="" ref="0xb7107ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb7107b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7107c70"/>
        <function-ref name="get" scoped="" ref="0xb7107d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7107e30"/>
        <function-ref name="set" scoped="" ref="0xb7107f10"/>
        <function-ref name="clr" scoped="" ref="0xb7106010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7105228" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7105228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7105400"/>
        <function-ref name="isInput" scoped="" ref="0xb71054e0"/>
        <function-ref name="toggle" scoped="" ref="0xb71055c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71056a0"/>
        <function-ref name="get" scoped="" ref="0xb7105780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7105860"/>
        <function-ref name="set" scoped="" ref="0xb7105940"/>
        <function-ref name="clr" scoped="" ref="0xb7105a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7104c08" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7104c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7104de0"/>
        <function-ref name="isInput" scoped="" ref="0xb7104ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb7103010"/>
        <function-ref name="isOutput" scoped="" ref="0xb71030f0"/>
        <function-ref name="get" scoped="" ref="0xb71031d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71032b0"/>
        <function-ref name="set" scoped="" ref="0xb7103390"/>
        <function-ref name="clr" scoped="" ref="0xb7103470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71026c0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71026c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7102898"/>
        <function-ref name="isInput" scoped="" ref="0xb7102978"/>
        <function-ref name="toggle" scoped="" ref="0xb7102a58"/>
        <function-ref name="isOutput" scoped="" ref="0xb7102b38"/>
        <function-ref name="get" scoped="" ref="0xb7102c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7102cf8"/>
        <function-ref name="set" scoped="" ref="0xb7102dd8"/>
        <function-ref name="clr" scoped="" ref="0xb7102eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb70ff0b0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb70ff0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb70ff288"/>
        <function-ref name="isInput" scoped="" ref="0xb70ff368"/>
        <function-ref name="toggle" scoped="" ref="0xb70ff448"/>
        <function-ref name="isOutput" scoped="" ref="0xb70ff528"/>
        <function-ref name="get" scoped="" ref="0xb70ff608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb70ff6e8"/>
        <function-ref name="set" scoped="" ref="0xb70ff7c8"/>
        <function-ref name="clr" scoped="" ref="0xb70ff8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb70fea88" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb70fea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb70fec60"/>
        <function-ref name="isInput" scoped="" ref="0xb70fed40"/>
        <function-ref name="toggle" scoped="" ref="0xb70fee20"/>
        <function-ref name="isOutput" scoped="" ref="0xb70fef00"/>
        <function-ref name="get" scoped="" ref="0xb70fd010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb70fd0f0"/>
        <function-ref name="set" scoped="" ref="0xb70fd1d0"/>
        <function-ref name="clr" scoped="" ref="0xb70fd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb70fc538" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb70fc538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb70fc710"/>
        <function-ref name="isInput" scoped="" ref="0xb70fc7f0"/>
        <function-ref name="toggle" scoped="" ref="0xb70fc8d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb70fc9b0"/>
        <function-ref name="get" scoped="" ref="0xb70fca90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb70fcb70"/>
        <function-ref name="set" scoped="" ref="0xb70fcc50"/>
        <function-ref name="clr" scoped="" ref="0xb70fcd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7ad3e60" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7ad3e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ad2050"/>
        <function-ref name="isInput" scoped="" ref="0xb7ad2130"/>
        <function-ref name="toggle" scoped="" ref="0xb7ad2210"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ad22f0"/>
        <function-ref name="get" scoped="" ref="0xb7ad23d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ad24b0"/>
        <function-ref name="set" scoped="" ref="0xb7ad2590"/>
        <function-ref name="clr" scoped="" ref="0xb7ad2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7ac4458" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7ac4458"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ac4630"/>
        <function-ref name="isInput" scoped="" ref="0xb7ac4710"/>
        <function-ref name="toggle" scoped="" ref="0xb7ac47f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ac48d0"/>
        <function-ref name="get" scoped="" ref="0xb7ac49b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ac4a90"/>
        <function-ref name="set" scoped="" ref="0xb7ac4b70"/>
        <function-ref name="clr" scoped="" ref="0xb7ac4c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7ac2a30" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7ac2a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ac2c08"/>
        <function-ref name="isInput" scoped="" ref="0xb7ac2ce8"/>
        <function-ref name="toggle" scoped="" ref="0xb7ac2dc8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ac2ea8"/>
        <function-ref name="get" scoped="" ref="0xb7ac1010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ac10f0"/>
        <function-ref name="set" scoped="" ref="0xb7ac11d0"/>
        <function-ref name="clr" scoped="" ref="0xb7ac12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7abe090" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7abe090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7abe268"/>
        <function-ref name="isInput" scoped="" ref="0xb7abe348"/>
        <function-ref name="toggle" scoped="" ref="0xb7abe428"/>
        <function-ref name="isOutput" scoped="" ref="0xb7abe508"/>
        <function-ref name="get" scoped="" ref="0xb7abe5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7abe6c8"/>
        <function-ref name="set" scoped="" ref="0xb7abe7a8"/>
        <function-ref name="clr" scoped="" ref="0xb7abe888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7abc6c0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7abc6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7abc898"/>
        <function-ref name="isInput" scoped="" ref="0xb7abc978"/>
        <function-ref name="toggle" scoped="" ref="0xb7abca58"/>
        <function-ref name="isOutput" scoped="" ref="0xb7abcb38"/>
        <function-ref name="get" scoped="" ref="0xb7abcc18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7abccf8"/>
        <function-ref name="set" scoped="" ref="0xb7abcdd8"/>
        <function-ref name="clr" scoped="" ref="0xb7abceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7ab9cb8" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7ab9cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ab9e90"/>
        <function-ref name="isInput" scoped="" ref="0xb7ab8010"/>
        <function-ref name="toggle" scoped="" ref="0xb7ab80f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ab81d0"/>
        <function-ref name="get" scoped="" ref="0xb7ab82b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ab8390"/>
        <function-ref name="set" scoped="" ref="0xb7ab8470"/>
        <function-ref name="clr" scoped="" ref="0xb7ab8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7ab63b0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7ab63b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ab6588"/>
        <function-ref name="isInput" scoped="" ref="0xb7ab6668"/>
        <function-ref name="toggle" scoped="" ref="0xb7ab6748"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ab6828"/>
        <function-ref name="get" scoped="" ref="0xb7ab6908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ab69e8"/>
        <function-ref name="set" scoped="" ref="0xb7ab6ac8"/>
        <function-ref name="clr" scoped="" ref="0xb7ab6ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7ab4978" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7ab4978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ab4b50"/>
        <function-ref name="isInput" scoped="" ref="0xb7ab4c30"/>
        <function-ref name="toggle" scoped="" ref="0xb7ab4d10"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ab4df0"/>
        <function-ref name="get" scoped="" ref="0xb7ab4ed0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ab3010"/>
        <function-ref name="set" scoped="" ref="0xb7ab30f0"/>
        <function-ref name="clr" scoped="" ref="0xb7ab31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7ab1ee0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7ab1ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ab00e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7ab01c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7ab02a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ab0380"/>
        <function-ref name="get" scoped="" ref="0xb7ab0460"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ab0540"/>
        <function-ref name="set" scoped="" ref="0xb7ab0620"/>
        <function-ref name="clr" scoped="" ref="0xb7ab0700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7aae3e8" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7aae3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aae5c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7aae6a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7aae780"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aae860"/>
        <function-ref name="get" scoped="" ref="0xb7aae940"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aaea20"/>
        <function-ref name="set" scoped="" ref="0xb7aaeb00"/>
        <function-ref name="clr" scoped="" ref="0xb7aaebe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7aac8f0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7aac8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aacac8"/>
        <function-ref name="isInput" scoped="" ref="0xb7aacba8"/>
        <function-ref name="toggle" scoped="" ref="0xb7aacc88"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aacd68"/>
        <function-ref name="get" scoped="" ref="0xb7aace48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aacf28"/>
        <function-ref name="set" scoped="" ref="0xb7aaa018"/>
        <function-ref name="clr" scoped="" ref="0xb7aaa0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7aa9dd8" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7aa9dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aa8010"/>
        <function-ref name="isInput" scoped="" ref="0xb7aa80f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7aa81d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aa82b0"/>
        <function-ref name="get" scoped="" ref="0xb7aa8390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aa8470"/>
        <function-ref name="set" scoped="" ref="0xb7aa8550"/>
        <function-ref name="clr" scoped="" ref="0xb7aa8630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7aa63b0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7aa63b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aa6588"/>
        <function-ref name="isInput" scoped="" ref="0xb7aa6668"/>
        <function-ref name="toggle" scoped="" ref="0xb7aa6748"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aa6828"/>
        <function-ref name="get" scoped="" ref="0xb7aa6908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aa69e8"/>
        <function-ref name="set" scoped="" ref="0xb7aa6ac8"/>
        <function-ref name="clr" scoped="" ref="0xb7aa6ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7a87858" loc="27:/opt/tinyos-main-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7a87858"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb7c0c7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb7c0c7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7a87a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xb7a87c08" loc="28:/opt/tinyos-main-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7a87c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb7a87de0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb7a87ec0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb7a86010"/>
        <function-ref name="actualMicro" scoped="" ref="0xb7a860f0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb7a861d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xb7a74010" loc="60:/opt/tinyos-main-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb7a74010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7a741e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb7a751c8" loc="57:/opt/tinyos-main-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb7a751c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb7a753a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0xb7a75b28" loc="59:/opt/tinyos-main-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb7a75b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7a75d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0xb7a75560" loc="58:/opt/tinyos-main-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb7a75560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7a75738"/>
        <function-ref name="taskLoop" scoped="" ref="0xb7a75818"/>
        <function-ref name="runNextTask" scoped="" ref="0xb7a758f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb7c03600" loc="48:/opt/tinyos-main-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xb7c03600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7c037d8"/>
        <function-ref name="runTask" scoped="" ref="0xb7c038b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb7c09ed8" loc="47:/opt/tinyos-main-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb7c09ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7c0b0c0"/>
        <function-ref name="taskLoop" scoped="" ref="0xb7c0b1a0"/>
        <function-ref name="runNextTask" scoped="" ref="0xb7c0b280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb7b8fd30" loc="56:/opt/tinyos-main-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xb7b8fd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7b8ff08"/>
        <function-ref name="runTask" scoped="" ref="0xb7b8d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0xb7b8d9c0" loc="57:/opt/tinyos-main-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xb7b8d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb7b8db98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb7b8f4f8" loc="55:/opt/tinyos-main-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb7b8f4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b8f6d0"/>
        <function-ref name="taskLoop" scoped="" ref="0xb7b8f7b0"/>
        <function-ref name="runNextTask" scoped="" ref="0xb7b8f890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0xb7b7af18" loc="54:/opt/tinyos-main-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xb7b7af18"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb7b7c108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0xb7b7d438" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xb7b7d438"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb7b7d610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0xb7b7a148" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb7b7a148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb7b7a320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0xb7a2aa10" loc="25:Ch4C.nc">
      <component-ref qname="Ch4C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0xb7a2aa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7a2abe8"/>
        <function-ref name="stopDone" scoped="" ref="0xb7a2acc8"/>
        <function-ref name="start" scoped="" ref="0xb7a2ada8"/>
        <function-ref name="stop" scoped="" ref="0xb7a2ae88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0xb7b66e30" loc="16:Ch4C.nc">
      <component-ref qname="Ch4C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb7b66e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb7a6f050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb7a39e50" loc="19:Ch4C.nc">
      <component-ref qname="Ch4C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7a39e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a6e050"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7a6e130"/>
        <function-ref name="getPayload" scoped="" ref="0xb7a6e210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7a6e2f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7a6e3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb7a347d0" loc="20:Ch4C.nc">
      <component-ref qname="Ch4C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7a347d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7a349a8"/>
        <function-ref name="getPayload" scoped="" ref="0xb7a34a88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7a34b68"/>
        <function-ref name="cancel" scoped="" ref="0xb7a34c48"/>
        <function-ref name="sendDone" scoped="" ref="0xb7a34d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0xb7a19e78" loc="32:Ch4C.nc">
      <component-ref qname="Ch4C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0xb7a19e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7a214b8"/>
        <function-ref name="readDone" scoped="" ref="0xb7a21710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0xb7a2f908" loc="21:Ch4C.nc">
      <component-ref qname="Ch4C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7a2f908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7a2fae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0xb7a24c30" loc="28:Ch4C.nc">
      <component-ref qname="Ch4C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MilliTimer" scoped="" ref="0xb7a24c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7a29730"/>
        <function-ref name="fired" scoped="" ref="0xb7a329d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb7a290f0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb7a32e80"/>
        <function-ref name="getdt" scoped="" ref="0xb7a29be0"/>
        <function-ref name="gett0" scoped="" ref="0xb7a29988"/>
        <function-ref name="isRunning" scoped="" ref="0xb7a32c28"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb7a32278"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb7a29410"/>
        <function-ref name="startOneShot" scoped="" ref="0xb7a324f8"/>
        <function-ref name="stop" scoped="" ref="0xb7a32778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb7a1cdf8" loc="29:Ch4C.nc">
      <component-ref qname="Ch4C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7a1cdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb7a22010"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7a220f0"/>
        <function-ref name="led1On" scoped="" ref="0xb7a221d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb7a222b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb7a22390"/>
        <function-ref name="get" scoped="" ref="0xb7a22470"/>
        <function-ref name="led1Off" scoped="" ref="0xb7a22550"/>
        <function-ref name="led2Off" scoped="" ref="0xb7a228d0"/>
        <function-ref name="set" scoped="" ref="0xb7a22630"/>
        <function-ref name="led0On" scoped="" ref="0xb7a22710"/>
        <function-ref name="led2On" scoped="" ref="0xb7a227f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0xb7a2b248" loc="22:Ch4C.nc">
      <component-ref qname="Ch4C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7a2b248"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb7a2b420"/>
        <function-ref name="noAck" scoped="" ref="0xb7a2b500"/>
        <function-ref name="wasAcked" scoped="" ref="0xb7a2b5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb7a05168" loc="46:/opt/tinyos-main-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7a05168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb7a05340"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7a05420"/>
        <function-ref name="led1On" scoped="" ref="0xb7a05500"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb7a055e0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb7a056c0"/>
        <function-ref name="get" scoped="" ref="0xb7a057a0"/>
        <function-ref name="led1Off" scoped="" ref="0xb7a05880"/>
        <function-ref name="led2Off" scoped="" ref="0xb7a05c00"/>
        <function-ref name="set" scoped="" ref="0xb7a05960"/>
        <function-ref name="led0On" scoped="" ref="0xb7a05a40"/>
        <function-ref name="led2On" scoped="" ref="0xb7a05b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0xb7a014e0" loc="50:/opt/tinyos-main-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xb7a014e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a016b8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a01798"/>
        <function-ref name="toggle" scoped="" ref="0xb7a01878"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a01958"/>
        <function-ref name="get" scoped="" ref="0xb7a01a38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a01b18"/>
        <function-ref name="set" scoped="" ref="0xb7a01bf8"/>
        <function-ref name="clr" scoped="" ref="0xb7a01cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7a044a0" loc="46:/opt/tinyos-main-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7a044a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7a04678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0xb7a01ec8" loc="51:/opt/tinyos-main-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xb7a01ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a000c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7a001a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7a00280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a00360"/>
        <function-ref name="get" scoped="" ref="0xb7a00440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a00520"/>
        <function-ref name="set" scoped="" ref="0xb7a00600"/>
        <function-ref name="clr" scoped="" ref="0xb7a006e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb7a047e8" loc="47:/opt/tinyos-main-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7a047e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb7a049c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7a04aa0"/>
        <function-ref name="led1On" scoped="" ref="0xb7a04b80"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb7a04c60"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb7a04d40"/>
        <function-ref name="get" scoped="" ref="0xb7a04e20"/>
        <function-ref name="led1Off" scoped="" ref="0xb7a04f00"/>
        <function-ref name="led2Off" scoped="" ref="0xb7a012b0"/>
        <function-ref name="set" scoped="" ref="0xb7a01010"/>
        <function-ref name="led0On" scoped="" ref="0xb7a010f0"/>
        <function-ref name="led2On" scoped="" ref="0xb7a011d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0xb7a008d0" loc="52:/opt/tinyos-main-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xb7a008d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a00aa8"/>
        <function-ref name="isInput" scoped="" ref="0xb7a00b88"/>
        <function-ref name="toggle" scoped="" ref="0xb7a00c68"/>
        <function-ref name="isOutput" scoped="" ref="0xb7a00d48"/>
        <function-ref name="get" scoped="" ref="0xb7a00e28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7a00f08"/>
        <function-ref name="set" scoped="" ref="0xb79ff010"/>
        <function-ref name="clr" scoped="" ref="0xb79ff0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0xb7a03ba8" loc="44:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xb7a03ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7a03d80"/>
        <function-ref name="isInput" scoped="" ref="0xb7a03e60"/>
        <function-ref name="toggle" scoped="" ref="0xb79ee010"/>
        <function-ref name="isOutput" scoped="" ref="0xb79ee0f0"/>
        <function-ref name="get" scoped="" ref="0xb79ee1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb79ee2b0"/>
        <function-ref name="set" scoped="" ref="0xb79ee390"/>
        <function-ref name="clr" scoped="" ref="0xb79ee470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0xb79ee680" loc="45:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xb79ee680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb79ee858"/>
        <function-ref name="isInput" scoped="" ref="0xb79ee938"/>
        <function-ref name="toggle" scoped="" ref="0xb79eea18"/>
        <function-ref name="isOutput" scoped="" ref="0xb79eeaf8"/>
        <function-ref name="get" scoped="" ref="0xb79eebd8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb79eecb8"/>
        <function-ref name="set" scoped="" ref="0xb79eed98"/>
        <function-ref name="clr" scoped="" ref="0xb79eee78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0xb79eda38" loc="47:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb79eda38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb79edc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0xb79ed0b0" loc="46:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xb79ed0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb79ed288"/>
        <function-ref name="isInput" scoped="" ref="0xb79ed368"/>
        <function-ref name="toggle" scoped="" ref="0xb79ed448"/>
        <function-ref name="isOutput" scoped="" ref="0xb79ed528"/>
        <function-ref name="get" scoped="" ref="0xb79ed608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb79ed6e8"/>
        <function-ref name="set" scoped="" ref="0xb79ed7c8"/>
        <function-ref name="clr" scoped="" ref="0xb79ed8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7a06c10" loc="55:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7a06c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7a06de8"/>
        <function-ref name="stopDone" scoped="" ref="0xb7a06ec8"/>
        <function-ref name="start" scoped="" ref="0xb79e9010"/>
        <function-ref name="stop" scoped="" ref="0xb79e90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb79e9550" loc="57:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb79e9550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a48e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb79e9728"/>
        <function-ref name="getPayload" scoped="" ref="0xb79e9808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb79e98e8"/>
        <function-ref name="cancel" scoped="" ref="0xb79e99c8"/>
        <function-ref name="sendDone" scoped="" ref="0xb79e9aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb79e85c8" loc="59:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb79e85c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a48e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb79e87a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb79e8920" loc="61:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb79e8920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79e8af8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb79e8bd8"/>
        <function-ref name="getPayload" scoped="" ref="0xb79e8cb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb79e8d98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb79e8e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0xb79d6e98" loc="64:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb79d6e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bb4f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb79e59b0"/>
        <function-ref name="clear" scoped="" ref="0xb79e5d60"/>
        <function-ref name="isValid" scoped="" ref="0xb79e5600"/>
        <function-ref name="set" scoped="" ref="0xb79da150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb79cf6a0" loc="66:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb79cf6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb79cf878"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb79cf958"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb79cfa38"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb79cfb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb79e9f10" loc="58:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb79e9f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a48e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb79e8108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb79e64d0" loc="63:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb79e64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb79e66a8"/>
        <function-ref name="noAck" scoped="" ref="0xb79e6788"/>
        <function-ref name="wasAcked" scoped="" ref="0xb79e6868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb79db7b0" loc="62:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb79db7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb79db988"/>
        <function-ref name="source" scoped="" ref="0xb79dba68"/>
        <function-ref name="address" scoped="" ref="0xb79dbb48"/>
        <function-ref name="destination" scoped="" ref="0xb79dbc28"/>
        <function-ref name="setSource" scoped="" ref="0xb79dbd08"/>
        <function-ref name="setDestination" scoped="" ref="0xb79dbde8"/>
        <function-ref name="type" scoped="" ref="0xb79dbec8"/>
        <function-ref name="setType" scoped="" ref="0xb79e6010"/>
        <function-ref name="isForMe" scoped="" ref="0xb79e60f0"/>
        <function-ref name="setGroup" scoped="" ref="0xb79e61d0"/>
        <function-ref name="localGroup" scoped="" ref="0xb79e62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb79da888" loc="65:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb79da888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb79d53c0"/>
        <function-ref name="clear" scoped="" ref="0xb79d5770"/>
        <function-ref name="isValid" scoped="" ref="0xb79d5010"/>
        <function-ref name="set" scoped="" ref="0xb79d5b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb79c7220" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb79c7220"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb79c73f8"/>
        <function-ref name="stopDone" scoped="" ref="0xb79c74d8"/>
        <function-ref name="start" scoped="" ref="0xb79c75b8"/>
        <function-ref name="stop" scoped="" ref="0xb79c7698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb79b5da0" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0xb79b5da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a48e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb79bf010"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb79bf0f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb79bf1d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb79bf2b0"/>
        <function-ref name="setCca" scoped="" ref="0xb79bf390"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb79bf470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb79adad0" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb79adad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a48e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb79add28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb79c5c28" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb79c5c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79c5e00"/>
        <function-ref name="payloadLength" scoped="" ref="0xb79c5ee0"/>
        <function-ref name="getPayload" scoped="" ref="0xb79c1010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb79c10f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb79c11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb79c7af8" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb79c7af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a48e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb79c7cd0"/>
        <function-ref name="getPayload" scoped="" ref="0xb79c7db0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb79c7e90"/>
        <function-ref name="cancel" scoped="" ref="0xb79c6010"/>
        <function-ref name="sendDone" scoped="" ref="0xb79c60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb79c6bf0" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb79c6bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a48e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb79c6dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0xb79bb518" loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb79bb518"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb79bb6f0"/>
        <function-ref name="setNetwork" scoped="" ref="0xb79bb7d0"/>
        <function-ref name="getRssi" scoped="" ref="0xb79bb8b0"/>
        <function-ref name="getNetwork" scoped="" ref="0xb79bb990"/>
        <function-ref name="getPower" scoped="" ref="0xb79bba70"/>
        <function-ref name="getLqi" scoped="" ref="0xb79bbb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb79bf660" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb79bf660"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb79bf838"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb79bf918"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb79bf9f8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb79bfad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb79c6558" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb79c6558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a48e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb79c6730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb79bbd70" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb79bbd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb79c0010"/>
        <function-ref name="noAck" scoped="" ref="0xb79c00f0"/>
        <function-ref name="wasAcked" scoped="" ref="0xb79c01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb79ba010" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb79ba010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb79ba1e8"/>
        <function-ref name="setRetries" scoped="" ref="0xb79ba2c8"/>
        <function-ref name="getRetries" scoped="" ref="0xb79ba3a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb79ba488"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb79ba568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb79c5010" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb79c5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb79c51e8"/>
        <function-ref name="source" scoped="" ref="0xb79c52c8"/>
        <function-ref name="address" scoped="" ref="0xb79c53a8"/>
        <function-ref name="destination" scoped="" ref="0xb79c5488"/>
        <function-ref name="setSource" scoped="" ref="0xb79c5568"/>
        <function-ref name="setDestination" scoped="" ref="0xb79c5648"/>
        <function-ref name="type" scoped="" ref="0xb79c5728"/>
        <function-ref name="setType" scoped="" ref="0xb79c5808"/>
        <function-ref name="isForMe" scoped="" ref="0xb79c58e8"/>
        <function-ref name="setGroup" scoped="" ref="0xb79c59c8"/>
        <function-ref name="localGroup" scoped="" ref="0xb79c5aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb79b7228" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb79b7228"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb79b7400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb79b3ca8" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb79b3ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb79b3e80"/>
        <function-ref name="stopDone" scoped="" ref="0xb79ab010"/>
        <function-ref name="start" scoped="" ref="0xb79ab0f0"/>
        <function-ref name="stop" scoped="" ref="0xb79ab1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb799fc20" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb799fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb799fdf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb799e630" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb799e630"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb799e808"/>
        <function-ref name="setRetries" scoped="" ref="0xb799e8e8"/>
        <function-ref name="getRetries" scoped="" ref="0xb799e9c8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb799eaa8"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb799eb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0xb79a5e08" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb79a5e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb799f010"/>
        <function-ref name="setNetwork" scoped="" ref="0xb799f0f0"/>
        <function-ref name="getRssi" scoped="" ref="0xb799f1d0"/>
        <function-ref name="getNetwork" scoped="" ref="0xb799f2b0"/>
        <function-ref name="getPower" scoped="" ref="0xb799f390"/>
        <function-ref name="getLqi" scoped="" ref="0xb799f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0xb79a52e8" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0xb79a52e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb79a54c0"/>
        <function-ref name="getPayload" scoped="" ref="0xb79a55a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb79a5680"/>
        <function-ref name="cancel" scoped="" ref="0xb79a5760"/>
        <function-ref name="sendDone" scoped="" ref="0xb79a5840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb799e010" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb799e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb799e1e8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb799e2c8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb799e3a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb799e488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0xb79a9780" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0xb79a9780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb79a9958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb799f690" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb799f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb799f868"/>
        <function-ref name="noAck" scoped="" ref="0xb799f948"/>
        <function-ref name="wasAcked" scoped="" ref="0xb799fa28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb79a66f8" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb79a66f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb79a68d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb79a69b0"/>
        <function-ref name="request" scoped="" ref="0xb79a6a90"/>
        <function-ref name="granted" scoped="" ref="0xb79a6b70"/>
        <function-ref name="isOwner" scoped="" ref="0xb79a6c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb79a9010" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0xb79a9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb79a91e8"/>
        <function-ref name="getPayload" scoped="" ref="0xb79a92c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb79a93a8"/>
        <function-ref name="cancel" scoped="" ref="0xb79a9488"/>
        <function-ref name="sendDone" scoped="" ref="0xb79a9568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0xb79a9b60" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0xb79a9b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79a9d38"/>
        <function-ref name="payloadLength" scoped="" ref="0xb79a9e18"/>
        <function-ref name="getPayload" scoped="" ref="0xb79a9ef8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb79a5010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb79a50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0xb79a5a70" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0xb79a5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb79a5c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb799d388" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb799d388"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb799d560"/>
        <function-ref name="stopDone" scoped="" ref="0xb799d640"/>
        <function-ref name="start" scoped="" ref="0xb799d720"/>
        <function-ref name="stop" scoped="" ref="0xb799d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb799a460" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0xb799a460"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb799a638"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb799a718"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb799a7f8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb799a8d8"/>
        <function-ref name="setCca" scoped="" ref="0xb799a9b8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb799aa98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb799d990" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb799d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb799db68"/>
        <function-ref name="getPayload" scoped="" ref="0xb799dc48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb799dd28"/>
        <function-ref name="cancel" scoped="" ref="0xb799de08"/>
        <function-ref name="sendDone" scoped="" ref="0xb799dee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb799a0a8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb799a0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb799a280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7997408" loc="39:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7997408"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb79975e0"/>
        <function-ref name="stopDone" scoped="" ref="0xb79976c0"/>
        <function-ref name="start" scoped="" ref="0xb79977a0"/>
        <function-ref name="stop" scoped="" ref="0xb7997880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb79951f0" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0xb79951f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb79953c8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb79954a8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb7995588"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb7995668"/>
        <function-ref name="setCca" scoped="" ref="0xb7995748"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb7995828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0xb7992438" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0xb7992438"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb7992610"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb79926f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb79927d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb79928b0"/>
        <function-ref name="setCca" scoped="" ref="0xb7992990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb7992a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb798f9d0" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb798f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb798fba8"/>
        <function-ref name="setNetwork" scoped="" ref="0xb798fc88"/>
        <function-ref name="getRssi" scoped="" ref="0xb798fd68"/>
        <function-ref name="getNetwork" scoped="" ref="0xb798fe48"/>
        <function-ref name="getPower" scoped="" ref="0xb798ff28"/>
        <function-ref name="getLqi" scoped="" ref="0xb7989018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0xb798ac20" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0xb798ac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb798adf8"/>
        <function-ref name="cancel" scoped="" ref="0xb798aed8"/>
        <function-ref name="modify" scoped="" ref="0xb7992010"/>
        <function-ref name="sendDone" scoped="" ref="0xb79920f0"/>
        <function-ref name="resend" scoped="" ref="0xb79921d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb7997a10" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7997a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7997be8"/>
        <function-ref name="getPayload" scoped="" ref="0xb7997cc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7997da8"/>
        <function-ref name="cancel" scoped="" ref="0xb7997e88"/>
        <function-ref name="sendDone" scoped="" ref="0xb7995010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb7988898" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb7988898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb7988a70"/>
        <function-ref name="rand32" scoped="" ref="0xb7988b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb798e668" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb798e668"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb798e840"/>
        <function-ref name="stop" scoped="" ref="0xb798e920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb79831c8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb79831c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb79833a0"/>
        <function-ref name="getHeader" scoped="" ref="0xb7983480"/>
        <function-ref name="getMetadata" scoped="" ref="0xb7983560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0xb7990be0" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0xb7990be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0xb7990db8"/>
        <function-ref name="rfOff" scoped="" ref="0xb7990e98"/>
        <function-ref name="rxOn" scoped="" ref="0xb7993010"/>
        <function-ref name="startVReg" scoped="" ref="0xb79930f0"/>
        <function-ref name="stopVReg" scoped="" ref="0xb79931d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0xb79932b0"/>
        <function-ref name="stopOscillator" scoped="" ref="0xb7993390"/>
        <function-ref name="startVRegDone" scoped="" ref="0xb7993470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb7988ce0" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7988ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb7988eb8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb798f010"/>
        <function-ref name="led1On" scoped="" ref="0xb798f0f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb798f1d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb798f2b0"/>
        <function-ref name="get" scoped="" ref="0xb798f390"/>
        <function-ref name="led1Off" scoped="" ref="0xb798f470"/>
        <function-ref name="led2Off" scoped="" ref="0xb798f7f0"/>
        <function-ref name="set" scoped="" ref="0xb798f550"/>
        <function-ref name="led0On" scoped="" ref="0xb798f630"/>
        <function-ref name="led2On" scoped="" ref="0xb798f710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0xb79959e0" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb79959e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7995bb8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7995c98"/>
        <function-ref name="request" scoped="" ref="0xb7995d78"/>
        <function-ref name="granted" scoped="" ref="0xb7995e58"/>
        <function-ref name="isOwner" scoped="" ref="0xb7994010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0xb7980a10" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0xb7980a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb7980c68"/>
        <function-ref name="toIdle" scoped="" ref="0xb7980d48"/>
        <function-ref name="isState" scoped="" ref="0xb7980e28"/>
        <function-ref name="isIdle" scoped="" ref="0xb7980f08"/>
        <function-ref name="requestState" scoped="" ref="0xb7986010"/>
        <function-ref name="forceState" scoped="" ref="0xb79860f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0xb797fb60" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0xb797fb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb797fd38"/>
        <function-ref name="runTask" scoped="" ref="0xb797fe18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0xb797f350" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0xb797f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb797f528"/>
        <function-ref name="runTask" scoped="" ref="0xb797f608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0xb7985af8" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0xb7985af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7985cd0"/>
        <function-ref name="runTask" scoped="" ref="0xb7985db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0xb794baf0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0xb794baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xb794bcc8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xb794bda8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xb794be88"/>
        <function-ref name="syncDone" scoped="" ref="0xb7953010"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xb79530f0"/>
        <function-ref name="setShortAddr" scoped="" ref="0xb79531d0"/>
        <function-ref name="setChannel" scoped="" ref="0xb79532b0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xb7953390"/>
        <function-ref name="setPanAddr" scoped="" ref="0xb7953470"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xb7953550"/>
        <function-ref name="getExtAddr" scoped="" ref="0xb7953630"/>
        <function-ref name="getShortAddr" scoped="" ref="0xb7953710"/>
        <function-ref name="sync" scoped="" ref="0xb79537f0"/>
        <function-ref name="getChannel" scoped="" ref="0xb7953950"/>
        <function-ref name="getPanAddr" scoped="" ref="0xb7953a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0xb7952760" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0xb7952760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7952d88"/>
        <function-ref name="readDone" scoped="" ref="0xb794a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0xb7953c00" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0xb7953c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0xb7953dd8"/>
        <function-ref name="rfOff" scoped="" ref="0xb7953eb8"/>
        <function-ref name="rxOn" scoped="" ref="0xb7952010"/>
        <function-ref name="startVReg" scoped="" ref="0xb79520f0"/>
        <function-ref name="stopVReg" scoped="" ref="0xb79521d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0xb79522b0"/>
        <function-ref name="stopOscillator" scoped="" ref="0xb7952390"/>
        <function-ref name="startVRegDone" scoped="" ref="0xb7952470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb79579f8" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb79579f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7957bd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7957cb0"/>
        <function-ref name="request" scoped="" ref="0xb7957d90"/>
        <function-ref name="granted" scoped="" ref="0xb7957e70"/>
        <function-ref name="isOwner" scoped="" ref="0xb7954010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0xb7947620" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0xb7947620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xb79477f8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xb79478d8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xb79479b8"/>
        <function-ref name="syncDone" scoped="" ref="0xb7947a98"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xb7947b78"/>
        <function-ref name="setShortAddr" scoped="" ref="0xb7947c58"/>
        <function-ref name="setChannel" scoped="" ref="0xb7947d38"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xb7947e18"/>
        <function-ref name="setPanAddr" scoped="" ref="0xb7947ef8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xb7946010"/>
        <function-ref name="getExtAddr" scoped="" ref="0xb79460f0"/>
        <function-ref name="getShortAddr" scoped="" ref="0xb79461d0"/>
        <function-ref name="sync" scoped="" ref="0xb79462b0"/>
        <function-ref name="getChannel" scoped="" ref="0xb7946410"/>
        <function-ref name="getPanAddr" scoped="" ref="0xb79464f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0xb7937b08" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0xb7937b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7937ce0"/>
        <function-ref name="write" scoped="" ref="0xb7937dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0xb7942628" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb7942628"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0xb7942800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0xb793eeb0" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0xb793eeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bb4f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7943388"/>
        <function-ref name="fired" scoped="" ref="0xb7944b28"/>
        <function-ref name="startAt" scoped="" ref="0xb7943048"/>
        <function-ref name="isRunning" scoped="" ref="0xb7944da0"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7943600"/>
        <function-ref name="start" scoped="" ref="0xb7944610"/>
        <function-ref name="stop" scoped="" ref="0xb79448b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0xb79370d8" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0xb79370d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb79372b0"/>
        <function-ref name="write" scoped="" ref="0xb7937390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0xb793c300" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xb793c300"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb793c4d8"/>
        <function-ref name="isInput" scoped="" ref="0xb793c5b8"/>
        <function-ref name="toggle" scoped="" ref="0xb793c698"/>
        <function-ref name="isOutput" scoped="" ref="0xb793c778"/>
        <function-ref name="get" scoped="" ref="0xb793c858"/>
        <function-ref name="makeOutput" scoped="" ref="0xb793c938"/>
        <function-ref name="set" scoped="" ref="0xb793ca18"/>
        <function-ref name="clr" scoped="" ref="0xb793caf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0xb79451c0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0xb79451c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb79457e8"/>
        <function-ref name="readDone" scoped="" ref="0xb7945a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0xb7926e60" loc="126:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0xb7926e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7924050"/>
        <function-ref name="runTask" scoped="" ref="0xb7924130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0xb7935030" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0xb7935030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7935208"/>
        <function-ref name="write" scoped="" ref="0xb79352e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0xb7935538" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xb7935538"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7935710"/>
        <function-ref name="write" scoped="" ref="0xb79357f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0xb792f690" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0xb792f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb792f868"/>
        <function-ref name="write" scoped="" ref="0xb792f948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xb7936e48" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb7936e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb7939050"/>
        <function-ref name="changed" scoped="" ref="0xb7939130"/>
        <function-ref name="amGroup" scoped="" ref="0xb7939210"/>
        <function-ref name="setAddress" scoped="" ref="0xb79392f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0xb79438d0" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0xb79438d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7943aa8"/>
        <function-ref name="isInput" scoped="" ref="0xb7943b88"/>
        <function-ref name="toggle" scoped="" ref="0xb7943c68"/>
        <function-ref name="isOutput" scoped="" ref="0xb7943d48"/>
        <function-ref name="get" scoped="" ref="0xb7943e28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7943f08"/>
        <function-ref name="set" scoped="" ref="0xb793c010"/>
        <function-ref name="clr" scoped="" ref="0xb793c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0xb792cc20" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0xb792cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb792cef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0xb793cd08" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0xb793cd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb793cee0"/>
        <function-ref name="isInput" scoped="" ref="0xb793b010"/>
        <function-ref name="toggle" scoped="" ref="0xb793b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb793b1d0"/>
        <function-ref name="get" scoped="" ref="0xb793b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb793b390"/>
        <function-ref name="set" scoped="" ref="0xb793b470"/>
        <function-ref name="clr" scoped="" ref="0xb793b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb794ab20" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb794ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb794acf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0xb79375f8" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xb79375f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb79377d0"/>
        <function-ref name="write" scoped="" ref="0xb79378b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0xb792d158" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0xb792d158"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb792d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb792d578" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb792d578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb792d750"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb792d830"/>
        <function-ref name="request" scoped="" ref="0xb792d910"/>
        <function-ref name="granted" scoped="" ref="0xb792d9f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb792dad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0xb792b508" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0xb792b508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb792b6e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb792b7c0"/>
        <function-ref name="request" scoped="" ref="0xb792b8a0"/>
        <function-ref name="granted" scoped="" ref="0xb792b980"/>
        <function-ref name="isOwner" scoped="" ref="0xb792ba60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0xb79466c0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0xb79466c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0xb7946898"/>
        <function-ref name="rfOff" scoped="" ref="0xb7946978"/>
        <function-ref name="rxOn" scoped="" ref="0xb7946a58"/>
        <function-ref name="startVReg" scoped="" ref="0xb7946b38"/>
        <function-ref name="stopVReg" scoped="" ref="0xb7946c18"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0xb7946cf8"/>
        <function-ref name="stopOscillator" scoped="" ref="0xb7946dd8"/>
        <function-ref name="startVRegDone" scoped="" ref="0xb7946eb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0xb792fb98" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0xb792fb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb792fd70"/>
        <function-ref name="write" scoped="" ref="0xb792fe50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0xb792f188" loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0xb792f188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb792f360"/>
        <function-ref name="write" scoped="" ref="0xb792f440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0xb792c3d8" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0xb792c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb792c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb792bbf0" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb792bbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb792bdc8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb792bea8"/>
        <function-ref name="led1On" scoped="" ref="0xb792a010"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb792a0f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb792a1d0"/>
        <function-ref name="get" scoped="" ref="0xb792a2b0"/>
        <function-ref name="led1Off" scoped="" ref="0xb792a390"/>
        <function-ref name="led2Off" scoped="" ref="0xb792a710"/>
        <function-ref name="set" scoped="" ref="0xb792a470"/>
        <function-ref name="led0On" scoped="" ref="0xb792a550"/>
        <function-ref name="led2On" scoped="" ref="0xb792a630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0xb7926680" loc="125:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0xb7926680"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7926858"/>
        <function-ref name="runTask" scoped="" ref="0xb7926938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb794aeb0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb794aeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb79470c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb79471a0"/>
        <function-ref name="request" scoped="" ref="0xb7947280"/>
        <function-ref name="granted" scoped="" ref="0xb7947360"/>
        <function-ref name="isOwner" scoped="" ref="0xb7947440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0xb79329e8" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0xb79329e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7932bc0"/>
        <function-ref name="write" scoped="" ref="0xb7932ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0xb7932498" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0xb7932498"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb79326f0"/>
        <function-ref name="write" scoped="" ref="0xb79327d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0xb7938e40" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0xb7938e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb793a050"/>
        <function-ref name="disable" scoped="" ref="0xb793a130"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb793a210"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb793a2f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0xb792dd28" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0xb792dd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb792df00"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb792b010"/>
        <function-ref name="request" scoped="" ref="0xb792b0f0"/>
        <function-ref name="granted" scoped="" ref="0xb792b1d0"/>
        <function-ref name="isOwner" scoped="" ref="0xb792b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0xb792c7f0" loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0xb792c7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb792c9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb78e24c0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb78e24c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb78e2698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0xb78e2a88" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0xb78e2a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bb4f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb78de010"/>
        <function-ref name="fired" scoped="" ref="0xb78df718"/>
        <function-ref name="startAt" scoped="" ref="0xb78dfc08"/>
        <function-ref name="isRunning" scoped="" ref="0xb78df990"/>
        <function-ref name="getAlarm" scoped="" ref="0xb78de288"/>
        <function-ref name="start" scoped="" ref="0xb78df200"/>
        <function-ref name="stop" scoped="" ref="0xb78df4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb78dda60" loc="86:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb78dda60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bb4f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7791010"/>
        <function-ref name="fired" scoped="" ref="0xb78dc718"/>
        <function-ref name="startAt" scoped="" ref="0xb78dcc08"/>
        <function-ref name="isRunning" scoped="" ref="0xb78dc990"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7791288"/>
        <function-ref name="start" scoped="" ref="0xb78dc200"/>
        <function-ref name="stop" scoped="" ref="0xb78dc4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb77914b8" loc="87:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb77914b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7791690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb7086800" loc="28:/opt/tinyos-main-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb7086800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bb4f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7085d58"/>
        <function-ref name="fired" scoped="" ref="0xb7085528"/>
        <function-ref name="startAt" scoped="" ref="0xb7085a18"/>
        <function-ref name="isRunning" scoped="" ref="0xb70857a0"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7084010"/>
        <function-ref name="start" scoped="" ref="0xb7085010"/>
        <function-ref name="stop" scoped="" ref="0xb70852b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb7082610" loc="30:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb7082610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="TOne" ref="0xb7b939a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7081ab8"/>
        <function-ref name="fired" scoped="" ref="0xb7081288"/>
        <function-ref name="startAt" scoped="" ref="0xb7081778"/>
        <function-ref name="isRunning" scoped="" ref="0xb7081500"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7081d30"/>
        <function-ref name="start" scoped="" ref="0xb7082d60"/>
        <function-ref name="stop" scoped="" ref="0xb7081010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb78bf840" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb78bf840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb78bfa18"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0xb78bfaf8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb78bfbd8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0xb78bfcb8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb78bfd98"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb78bfe78"/>
        <function-ref name="getCtrlClock" scoped="" ref="0xb78c4010"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0xb78c40f0"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0xb78c41d0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0xb78c42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb78ba6f0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb78ba6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb78b9288"/>
        <function-ref name="test" scoped="" ref="0xb78bdcb8"/>
        <function-ref name="get" scoped="" ref="0xb78bad38"/>
        <function-ref name="captured" scoped="" ref="0xb78bd2b0"/>
        <function-ref name="reset" scoped="" ref="0xb78bd550"/>
        <function-ref name="isOn" scoped="" ref="0xb78b9010"/>
        <function-ref name="set" scoped="" ref="0xb78bd010"/>
        <function-ref name="start" scoped="" ref="0xb78bd7c8"/>
        <function-ref name="stop" scoped="" ref="0xb78bda40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb78b82f0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb78b82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb78b7840"/>
        <function-ref name="fired" scoped="" ref="0xb78b8e50"/>
        <function-ref name="get" scoped="" ref="0xb78b8938"/>
        <function-ref name="reset" scoped="" ref="0xb78b70d8"/>
        <function-ref name="isOn" scoped="" ref="0xb78b7ab8"/>
        <function-ref name="set" scoped="" ref="0xb78b8bb0"/>
        <function-ref name="start" scoped="" ref="0xb78b7350"/>
        <function-ref name="stop" scoped="" ref="0xb78b75c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb78c6928" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb78c6928"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb78cb418"/>
        <function-ref name="test" scoped="" ref="0xb78ccf08"/>
        <function-ref name="get" scoped="" ref="0xb78cc010"/>
        <function-ref name="setScale" scoped="" ref="0xb78cb690"/>
        <function-ref name="getScale" scoped="" ref="0xb78cb930"/>
        <function-ref name="reset" scoped="" ref="0xb78cc7a0"/>
        <function-ref name="overflow" scoped="" ref="0xb78cc528"/>
        <function-ref name="isOn" scoped="" ref="0xb78cb1a0"/>
        <function-ref name="set" scoped="" ref="0xb78cc288"/>
        <function-ref name="start" scoped="" ref="0xb78cca18"/>
        <function-ref name="stop" scoped="" ref="0xb78ccc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb78aae18" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb78aae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0xb78ad010"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb78ad0f0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb78ad1d0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb78ad2b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb78ad390"/>
        <function-ref name="setControl" scoped="" ref="0xb78ad470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xb78a3498" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb78a3498"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0xb78a3670"/>
        <function-ref name="compareBusy" scoped="" ref="0xb78a3750"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0xb78a3830"/>
        <function-ref name="countBusy" scoped="" ref="0xb78a3910"/>
        <function-ref name="getAssr" scoped="" ref="0xb78a39f0"/>
        <function-ref name="setAssr" scoped="" ref="0xb78a3ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb78ad798" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb78ad798"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb78acce8"/>
        <function-ref name="fired" scoped="" ref="0xb78ac308"/>
        <function-ref name="get" scoped="" ref="0xb78adde0"/>
        <function-ref name="reset" scoped="" ref="0xb78ac580"/>
        <function-ref name="isOn" scoped="" ref="0xb78a8010"/>
        <function-ref name="set" scoped="" ref="0xb78ac068"/>
        <function-ref name="start" scoped="" ref="0xb78ac7f8"/>
        <function-ref name="stop" scoped="" ref="0xb78aca70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb78b35f8" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb78b35f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb78ae068"/>
        <function-ref name="test" scoped="" ref="0xb78afb50"/>
        <function-ref name="get" scoped="" ref="0xb78b3c40"/>
        <function-ref name="setScale" scoped="" ref="0xb78ae2e0"/>
        <function-ref name="getScale" scoped="" ref="0xb78ae580"/>
        <function-ref name="reset" scoped="" ref="0xb78af3e8"/>
        <function-ref name="overflow" scoped="" ref="0xb78af170"/>
        <function-ref name="isOn" scoped="" ref="0xb78afdc8"/>
        <function-ref name="set" scoped="" ref="0xb78b3eb8"/>
        <function-ref name="start" scoped="" ref="0xb78af660"/>
        <function-ref name="stop" scoped="" ref="0xb78af8d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb78a0af0" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb78a0af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0xb78a0cc8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb78a0da8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb78a0e88"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb789f010"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb789f0f0"/>
        <function-ref name="setControl" scoped="" ref="0xb789f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0xb789c010" loc="52:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xb789c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb789c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xb789c470" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb789c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0xb789c648"/>
        <function-ref name="compareBusy" scoped="" ref="0xb789c728"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0xb789c808"/>
        <function-ref name="countBusy" scoped="" ref="0xb789c8e8"/>
        <function-ref name="getAssr" scoped="" ref="0xb789c9c8"/>
        <function-ref name="setAssr" scoped="" ref="0xb789caa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb789f4f8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb789f4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb789da48"/>
        <function-ref name="fired" scoped="" ref="0xb789d068"/>
        <function-ref name="get" scoped="" ref="0xb789fb40"/>
        <function-ref name="reset" scoped="" ref="0xb789d2e0"/>
        <function-ref name="isOn" scoped="" ref="0xb789dcc0"/>
        <function-ref name="set" scoped="" ref="0xb789fdb8"/>
        <function-ref name="start" scoped="" ref="0xb789d558"/>
        <function-ref name="stop" scoped="" ref="0xb789d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb78a7798" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb78a7798"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb78a0288"/>
        <function-ref name="test" scoped="" ref="0xb78a1ce8"/>
        <function-ref name="get" scoped="" ref="0xb78a7de0"/>
        <function-ref name="setScale" scoped="" ref="0xb78a0500"/>
        <function-ref name="getScale" scoped="" ref="0xb78a07a0"/>
        <function-ref name="reset" scoped="" ref="0xb78a1580"/>
        <function-ref name="overflow" scoped="" ref="0xb78a1308"/>
        <function-ref name="isOn" scoped="" ref="0xb78a0010"/>
        <function-ref name="set" scoped="" ref="0xb78a1068"/>
        <function-ref name="start" scoped="" ref="0xb78a17f8"/>
        <function-ref name="stop" scoped="" ref="0xb78a1a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb7867e78" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb7867e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb7865070"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0xb7865150"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb7865230"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0xb7865310"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb78653f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb78654d0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0xb78655b0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0xb7865690"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0xb7865770"/>
        <function-ref name="setCtrlClock" scoped="" ref="0xb7865850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0xb785de98" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0xb785de98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0xb785b0c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb785b1a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb785b280"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb785b360"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb785b440"/>
        <function-ref name="setControl" scoped="" ref="0xb785b520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0xb7863a80" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0xb7863a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb7860010"/>
        <function-ref name="fired" scoped="" ref="0xb7862610"/>
        <function-ref name="get" scoped="" ref="0xb78620f8"/>
        <function-ref name="reset" scoped="" ref="0xb7862888"/>
        <function-ref name="isOn" scoped="" ref="0xb7860288"/>
        <function-ref name="set" scoped="" ref="0xb7862370"/>
        <function-ref name="start" scoped="" ref="0xb7862b00"/>
        <function-ref name="stop" scoped="" ref="0xb7862d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb7865b88" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb7865b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb7863640"/>
        <function-ref name="test" scoped="" ref="0xb7863150"/>
        <function-ref name="get" scoped="" ref="0xb7864200"/>
        <function-ref name="captured" scoped="" ref="0xb7864718"/>
        <function-ref name="reset" scoped="" ref="0xb78649b8"/>
        <function-ref name="isOn" scoped="" ref="0xb78633c8"/>
        <function-ref name="set" scoped="" ref="0xb7864478"/>
        <function-ref name="start" scoped="" ref="0xb7864c30"/>
        <function-ref name="stop" scoped="" ref="0xb7864ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0xb78606a0" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0xb78606a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb785fc90"/>
        <function-ref name="fired" scoped="" ref="0xb785f2b0"/>
        <function-ref name="get" scoped="" ref="0xb7860ce8"/>
        <function-ref name="reset" scoped="" ref="0xb785f528"/>
        <function-ref name="isOn" scoped="" ref="0xb785ff08"/>
        <function-ref name="set" scoped="" ref="0xb785f010"/>
        <function-ref name="start" scoped="" ref="0xb785f7a0"/>
        <function-ref name="stop" scoped="" ref="0xb785fa18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0xb785e340" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0xb785e340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb785d898"/>
        <function-ref name="fired" scoped="" ref="0xb785eea0"/>
        <function-ref name="get" scoped="" ref="0xb785e988"/>
        <function-ref name="reset" scoped="" ref="0xb785d130"/>
        <function-ref name="isOn" scoped="" ref="0xb785db10"/>
        <function-ref name="set" scoped="" ref="0xb785ec00"/>
        <function-ref name="start" scoped="" ref="0xb785d3a8"/>
        <function-ref name="stop" scoped="" ref="0xb785d620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb78b1b70" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb78b1b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb7867600"/>
        <function-ref name="test" scoped="" ref="0xb7867110"/>
        <function-ref name="get" scoped="" ref="0xb7868200"/>
        <function-ref name="setScale" scoped="" ref="0xb7867878"/>
        <function-ref name="getScale" scoped="" ref="0xb7867b18"/>
        <function-ref name="reset" scoped="" ref="0xb7868990"/>
        <function-ref name="overflow" scoped="" ref="0xb7868718"/>
        <function-ref name="isOn" scoped="" ref="0xb7867388"/>
        <function-ref name="set" scoped="" ref="0xb7868478"/>
        <function-ref name="start" scoped="" ref="0xb7868c08"/>
        <function-ref name="stop" scoped="" ref="0xb7868e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb780a700" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb780a700"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb7c0c5d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb7c0c5d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb780a8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb780aae8" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb780aae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb7800600"/>
        <function-ref name="test" scoped="" ref="0xb7800110"/>
        <function-ref name="get" scoped="" ref="0xb7808200"/>
        <function-ref name="setScale" scoped="" ref="0xb7800878"/>
        <function-ref name="getScale" scoped="" ref="0xb7800b18"/>
        <function-ref name="reset" scoped="" ref="0xb7808990"/>
        <function-ref name="overflow" scoped="" ref="0xb7808718"/>
        <function-ref name="isOn" scoped="" ref="0xb7800388"/>
        <function-ref name="set" scoped="" ref="0xb7808478"/>
        <function-ref name="start" scoped="" ref="0xb7808c08"/>
        <function-ref name="stop" scoped="" ref="0xb7808e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb706f560" loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb706f560"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0xb7c0c3d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0xb7c0c3d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="TOne" ref="0xb7b939a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb706eab8"/>
        <function-ref name="fired" scoped="" ref="0xb706e288"/>
        <function-ref name="startAt" scoped="" ref="0xb706e778"/>
        <function-ref name="isRunning" scoped="" ref="0xb706e500"/>
        <function-ref name="getAlarm" scoped="" ref="0xb706ed30"/>
        <function-ref name="start" scoped="" ref="0xb706fcb0"/>
        <function-ref name="stop" scoped="" ref="0xb706e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0xb706a2d0" loc="58:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0xb706a2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb7069840"/>
        <function-ref name="fired" scoped="" ref="0xb706ae30"/>
        <function-ref name="get" scoped="" ref="0xb706a918"/>
        <function-ref name="reset" scoped="" ref="0xb70690d8"/>
        <function-ref name="isOn" scoped="" ref="0xb7069ab8"/>
        <function-ref name="set" scoped="" ref="0xb706ab90"/>
        <function-ref name="start" scoped="" ref="0xb7069350"/>
        <function-ref name="stop" scoped="" ref="0xb70695c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0xb706d010" loc="57:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0xb706d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb706ca68"/>
        <function-ref name="test" scoped="" ref="0xb706c578"/>
        <function-ref name="get" scoped="" ref="0xb706d658"/>
        <function-ref name="setScale" scoped="" ref="0xb706cce0"/>
        <function-ref name="getScale" scoped="" ref="0xb706a010"/>
        <function-ref name="reset" scoped="" ref="0xb706dde8"/>
        <function-ref name="overflow" scoped="" ref="0xb706db70"/>
        <function-ref name="isOn" scoped="" ref="0xb706c7f0"/>
        <function-ref name="set" scoped="" ref="0xb706d8d0"/>
        <function-ref name="start" scoped="" ref="0xb706c088"/>
        <function-ref name="stop" scoped="" ref="0xb706c300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb77dd010" loc="24:/opt/tinyos-main-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb77dd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bb4f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb77dd760"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb77ddc50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb77dd9d8"/>
        <function-ref name="overflow" scoped="" ref="0xb77ddec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb77dca00" loc="24:/opt/tinyos-main-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb77dca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="TOne" ref="0xb7b939a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb77d7200"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb77d76f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb77d7478"/>
        <function-ref name="overflow" scoped="" ref="0xb77d7968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb77d5320" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb77d5320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="TOne" ref="0xb7b939a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb77d5a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb77d4010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb77d5ce8"/>
        <function-ref name="overflow" scoped="" ref="0xb77d4288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb77d4568" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb77d4568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb77c8010"/>
        <function-ref name="test" scoped="" ref="0xb77c9ad8"/>
        <function-ref name="get" scoped="" ref="0xb77d4bb0"/>
        <function-ref name="setScale" scoped="" ref="0xb77c8288"/>
        <function-ref name="getScale" scoped="" ref="0xb77c8528"/>
        <function-ref name="reset" scoped="" ref="0xb77c9370"/>
        <function-ref name="overflow" scoped="" ref="0xb77c90f8"/>
        <function-ref name="isOn" scoped="" ref="0xb77c9d50"/>
        <function-ref name="set" scoped="" ref="0xb77d4e28"/>
        <function-ref name="start" scoped="" ref="0xb77c95e8"/>
        <function-ref name="stop" scoped="" ref="0xb77c9860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0xb77b6ae8" loc="63:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0xb77b6ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="TOne" ref="0xb7b939a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb77b5308"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb77b57f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb77b5580"/>
        <function-ref name="overflow" scoped="" ref="0xb77b5a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb77d97f0" loc="62:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb77d97f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bb4f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb77b6010"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb77b6500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb77b6288"/>
        <function-ref name="overflow" scoped="" ref="0xb77b6778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb707f0a0" loc="61:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb707f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bb4f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb70775c8"/>
        <function-ref name="fired" scoped="" ref="0xb707fd08"/>
        <function-ref name="startAt" scoped="" ref="0xb7077288"/>
        <function-ref name="isRunning" scoped="" ref="0xb7077010"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7077840"/>
        <function-ref name="start" scoped="" ref="0xb707f7f0"/>
        <function-ref name="stop" scoped="" ref="0xb707fa90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0xb7075de0" loc="73:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0xb7075de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="TOne" ref="0xb7b939a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7073350"/>
        <function-ref name="fired" scoped="" ref="0xb7074a88"/>
        <function-ref name="startAt" scoped="" ref="0xb7073010"/>
        <function-ref name="isRunning" scoped="" ref="0xb7074d00"/>
        <function-ref name="getAlarm" scoped="" ref="0xb70735c8"/>
        <function-ref name="start" scoped="" ref="0xb7074570"/>
        <function-ref name="stop" scoped="" ref="0xb7074810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb7077b90" loc="68:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb7077b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bb4f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7075308"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb70757f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7075580"/>
        <function-ref name="overflow" scoped="" ref="0xb7075a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb77937a0" loc="18:/opt/tinyos-main-2.1.2/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb77937a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7793978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0xb778d660" loc="87:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0xb778d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb778d838"/>
        <function-ref name="isInput" scoped="" ref="0xb778d918"/>
        <function-ref name="toggle" scoped="" ref="0xb778d9f8"/>
        <function-ref name="isOutput" scoped="" ref="0xb778dad8"/>
        <function-ref name="get" scoped="" ref="0xb778dbb8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb778dc98"/>
        <function-ref name="set" scoped="" ref="0xb778dd78"/>
        <function-ref name="clr" scoped="" ref="0xb778de58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0xb778c068" loc="88:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0xb778c068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb778c240"/>
        <function-ref name="isInput" scoped="" ref="0xb778c320"/>
        <function-ref name="toggle" scoped="" ref="0xb778c400"/>
        <function-ref name="isOutput" scoped="" ref="0xb778c4e0"/>
        <function-ref name="get" scoped="" ref="0xb778c5c0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb778c6a0"/>
        <function-ref name="set" scoped="" ref="0xb778c780"/>
        <function-ref name="clr" scoped="" ref="0xb778c860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0xb778ca50" loc="89:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xb778ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb778cc28"/>
        <function-ref name="isInput" scoped="" ref="0xb778cd08"/>
        <function-ref name="toggle" scoped="" ref="0xb778cde8"/>
        <function-ref name="isOutput" scoped="" ref="0xb778cec8"/>
        <function-ref name="get" scoped="" ref="0xb778b010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb778b0f0"/>
        <function-ref name="set" scoped="" ref="0xb778b1d0"/>
        <function-ref name="clr" scoped="" ref="0xb778b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0xb778ec48" loc="86:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0xb778ec48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb778ee20"/>
        <function-ref name="isInput" scoped="" ref="0xb778ef00"/>
        <function-ref name="toggle" scoped="" ref="0xb778d010"/>
        <function-ref name="isOutput" scoped="" ref="0xb778d0f0"/>
        <function-ref name="get" scoped="" ref="0xb778d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb778d2b0"/>
        <function-ref name="set" scoped="" ref="0xb778d390"/>
        <function-ref name="clr" scoped="" ref="0xb778d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0xb778be78" loc="91:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0xb778be78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb778a070"/>
        <function-ref name="isInput" scoped="" ref="0xb778a150"/>
        <function-ref name="toggle" scoped="" ref="0xb778a230"/>
        <function-ref name="isOutput" scoped="" ref="0xb778a310"/>
        <function-ref name="get" scoped="" ref="0xb778a3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb778a4d0"/>
        <function-ref name="set" scoped="" ref="0xb778a5b0"/>
        <function-ref name="clr" scoped="" ref="0xb778a690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0xb778e270" loc="85:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0xb778e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb778e448"/>
        <function-ref name="isInput" scoped="" ref="0xb778e528"/>
        <function-ref name="toggle" scoped="" ref="0xb778e608"/>
        <function-ref name="isOutput" scoped="" ref="0xb778e6e8"/>
        <function-ref name="get" scoped="" ref="0xb778e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb778e8a8"/>
        <function-ref name="set" scoped="" ref="0xb778e988"/>
        <function-ref name="clr" scoped="" ref="0xb778ea68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0xb778b490" loc="90:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0xb778b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb778b668"/>
        <function-ref name="isInput" scoped="" ref="0xb778b748"/>
        <function-ref name="toggle" scoped="" ref="0xb778b828"/>
        <function-ref name="isOutput" scoped="" ref="0xb778b908"/>
        <function-ref name="get" scoped="" ref="0xb778b9e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb778bac8"/>
        <function-ref name="set" scoped="" ref="0xb778bba8"/>
        <function-ref name="clr" scoped="" ref="0xb778bc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0xb77827f0" loc="39:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0xb77827f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb77829c8"/>
        <function-ref name="disable" scoped="" ref="0xb7782aa8"/>
        <function-ref name="captured" scoped="" ref="0xb7782b88"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb7782c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0xb7782ef0" loc="40:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0xb7782ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb77840e0"/>
        <function-ref name="disable" scoped="" ref="0xb77841c0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb77842a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb7784380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0xb7784618" loc="41:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0xb7784618"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb77847f0"/>
        <function-ref name="disable" scoped="" ref="0xb77848d0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb77849b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb7784a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb7780ad0" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb7780ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb7780ca8"/>
        <function-ref name="disable" scoped="" ref="0xb7780d88"/>
        <function-ref name="captured" scoped="" ref="0xb7780e68"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb777f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0xb777f220" loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0xb777f220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb7776ca0"/>
        <function-ref name="test" scoped="" ref="0xb77767b0"/>
        <function-ref name="get" scoped="" ref="0xb777f868"/>
        <function-ref name="captured" scoped="" ref="0xb777fd80"/>
        <function-ref name="reset" scoped="" ref="0xb7776048"/>
        <function-ref name="isOn" scoped="" ref="0xb7776a28"/>
        <function-ref name="set" scoped="" ref="0xb777fae0"/>
        <function-ref name="start" scoped="" ref="0xb77762c0"/>
        <function-ref name="stop" scoped="" ref="0xb7776538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0xb7774470" loc="9:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0xb7774470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7774648"/>
        <function-ref name="fired" scoped="" ref="0xb7774728"/>
        <function-ref name="disable" scoped="" ref="0xb7774808"/>
        <function-ref name="edge" scoped="" ref="0xb77748e8"/>
        <function-ref name="enable" scoped="" ref="0xb77749c8"/>
        <function-ref name="getValue" scoped="" ref="0xb7774aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0xb7768e30" loc="8:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0xb7768e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb7774050"/>
        <function-ref name="disable" scoped="" ref="0xb7774130"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb7774210"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb77742f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0xb7763c98" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0xb7763c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7763e70"/>
        <function-ref name="fired" scoped="" ref="0xb7762010"/>
        <function-ref name="disable" scoped="" ref="0xb77620f0"/>
        <function-ref name="edge" scoped="" ref="0xb77621d0"/>
        <function-ref name="enable" scoped="" ref="0xb77622b0"/>
        <function-ref name="getValue" scoped="" ref="0xb7762390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0xb7765090" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0xb7765090"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7765268"/>
        <function-ref name="fired" scoped="" ref="0xb7765348"/>
        <function-ref name="disable" scoped="" ref="0xb7765428"/>
        <function-ref name="edge" scoped="" ref="0xb7765508"/>
        <function-ref name="enable" scoped="" ref="0xb77655e8"/>
        <function-ref name="getValue" scoped="" ref="0xb77656c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0xb7764ad8" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0xb7764ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7764cb0"/>
        <function-ref name="fired" scoped="" ref="0xb7764d90"/>
        <function-ref name="disable" scoped="" ref="0xb7764e70"/>
        <function-ref name="edge" scoped="" ref="0xb7763010"/>
        <function-ref name="enable" scoped="" ref="0xb77630f0"/>
        <function-ref name="getValue" scoped="" ref="0xb77631d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0xb77625d8" loc="52:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0xb77625d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb77627b0"/>
        <function-ref name="fired" scoped="" ref="0xb7762890"/>
        <function-ref name="disable" scoped="" ref="0xb7762970"/>
        <function-ref name="edge" scoped="" ref="0xb7762a50"/>
        <function-ref name="enable" scoped="" ref="0xb7762b30"/>
        <function-ref name="getValue" scoped="" ref="0xb7762c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0xb7765910" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0xb7765910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7765ae8"/>
        <function-ref name="fired" scoped="" ref="0xb7765bc8"/>
        <function-ref name="disable" scoped="" ref="0xb7765ca8"/>
        <function-ref name="edge" scoped="" ref="0xb7765d88"/>
        <function-ref name="enable" scoped="" ref="0xb7765e68"/>
        <function-ref name="getValue" scoped="" ref="0xb7764010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0xb7763418" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0xb7763418"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb77635f0"/>
        <function-ref name="fired" scoped="" ref="0xb77636d0"/>
        <function-ref name="disable" scoped="" ref="0xb77637b0"/>
        <function-ref name="edge" scoped="" ref="0xb7763890"/>
        <function-ref name="enable" scoped="" ref="0xb7763970"/>
        <function-ref name="getValue" scoped="" ref="0xb7763a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0xb77737e0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0xb77737e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb77739b8"/>
        <function-ref name="fired" scoped="" ref="0xb7773a98"/>
        <function-ref name="disable" scoped="" ref="0xb7773b78"/>
        <function-ref name="edge" scoped="" ref="0xb7773c58"/>
        <function-ref name="enable" scoped="" ref="0xb7773d38"/>
        <function-ref name="getValue" scoped="" ref="0xb7773e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0xb7764258" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0xb7764258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7764430"/>
        <function-ref name="fired" scoped="" ref="0xb7764510"/>
        <function-ref name="disable" scoped="" ref="0xb77645f0"/>
        <function-ref name="edge" scoped="" ref="0xb77646d0"/>
        <function-ref name="enable" scoped="" ref="0xb77647b0"/>
        <function-ref name="getValue" scoped="" ref="0xb7764890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0xb775ec50" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0xb775ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb775ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0xb775c5b8" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0xb775c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb775c790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0xb775e360" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0xb775e360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb775e538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0xb775b1a0" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0xb775b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb775b378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0xb775ca30" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0xb775ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb775cc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0xb775e7d8" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0xb775e7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb775e9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0xb775c140" loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0xb775c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb775c318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0xb775cea8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0xb775cea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb775e0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb775f3b0" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb775f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb775f588"/>
        <function-ref name="fired" scoped="" ref="0xb775f668"/>
        <function-ref name="disable" scoped="" ref="0xb775f748"/>
        <function-ref name="edge" scoped="" ref="0xb775f828"/>
        <function-ref name="enable" scoped="" ref="0xb775f908"/>
        <function-ref name="getValue" scoped="" ref="0xb775f9e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb775fb68" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb775fb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb775fd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb7740538" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb7740538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7740710"/>
        <function-ref name="fired" scoped="" ref="0xb77407f0"/>
        <function-ref name="disable" scoped="" ref="0xb77408d0"/>
        <function-ref name="edge" scoped="" ref="0xb77409b0"/>
        <function-ref name="enable" scoped="" ref="0xb7740a90"/>
        <function-ref name="getValue" scoped="" ref="0xb7740b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb7740cf0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb7740cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb7740ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb773d6c0" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb773d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb773d898"/>
        <function-ref name="fired" scoped="" ref="0xb773d978"/>
        <function-ref name="disable" scoped="" ref="0xb773da58"/>
        <function-ref name="edge" scoped="" ref="0xb773db38"/>
        <function-ref name="enable" scoped="" ref="0xb773dc18"/>
        <function-ref name="getValue" scoped="" ref="0xb773dcf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb773de78" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb773de78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb773c070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb773b7a8" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb773b7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb773b980"/>
        <function-ref name="fired" scoped="" ref="0xb773ba60"/>
        <function-ref name="disable" scoped="" ref="0xb773bb40"/>
        <function-ref name="edge" scoped="" ref="0xb773bc20"/>
        <function-ref name="enable" scoped="" ref="0xb773bd00"/>
        <function-ref name="getValue" scoped="" ref="0xb773bde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb773a010" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb773a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb773a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb7739a08" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb7739a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7739be0"/>
        <function-ref name="fired" scoped="" ref="0xb7739cc0"/>
        <function-ref name="disable" scoped="" ref="0xb7739da0"/>
        <function-ref name="edge" scoped="" ref="0xb7739e80"/>
        <function-ref name="enable" scoped="" ref="0xb7738010"/>
        <function-ref name="getValue" scoped="" ref="0xb77380f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb7738270" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb7738270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb7738448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb7737c70" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb7737c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7737e48"/>
        <function-ref name="fired" scoped="" ref="0xb7737f28"/>
        <function-ref name="disable" scoped="" ref="0xb7736018"/>
        <function-ref name="edge" scoped="" ref="0xb77360f8"/>
        <function-ref name="enable" scoped="" ref="0xb77361d8"/>
        <function-ref name="getValue" scoped="" ref="0xb77362b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb7736438" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb7736438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb7736610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb7735e68" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb7735e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7733050"/>
        <function-ref name="fired" scoped="" ref="0xb7733130"/>
        <function-ref name="disable" scoped="" ref="0xb7733210"/>
        <function-ref name="edge" scoped="" ref="0xb77332f0"/>
        <function-ref name="enable" scoped="" ref="0xb77333d0"/>
        <function-ref name="getValue" scoped="" ref="0xb77334b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb7733630" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb7733630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb7733808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb7731050" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb7731050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7731228"/>
        <function-ref name="fired" scoped="" ref="0xb7731308"/>
        <function-ref name="disable" scoped="" ref="0xb77313e8"/>
        <function-ref name="edge" scoped="" ref="0xb77314c8"/>
        <function-ref name="enable" scoped="" ref="0xb77315a8"/>
        <function-ref name="getValue" scoped="" ref="0xb7731688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb7731808" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb7731808"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb77319e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0xb772a6c8" loc="51:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0xb772a6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb772a8a0"/>
        <function-ref name="isInput" scoped="" ref="0xb772a980"/>
        <function-ref name="toggle" scoped="" ref="0xb772aa60"/>
        <function-ref name="isOutput" scoped="" ref="0xb772ab40"/>
        <function-ref name="get" scoped="" ref="0xb772ac20"/>
        <function-ref name="makeOutput" scoped="" ref="0xb772ad00"/>
        <function-ref name="set" scoped="" ref="0xb772ade0"/>
        <function-ref name="clr" scoped="" ref="0xb772aec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0xb772a010" loc="47:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0xb772a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb772a1e8"/>
        <function-ref name="disable" scoped="" ref="0xb772a2c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb772a3a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb772a488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0xb7729ed8" loc="69:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0xb7729ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb77280c0"/>
        <function-ref name="runTask" scoped="" ref="0xb77281a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb75d1010" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0xb75d1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75d12e8"/>
        <function-ref name="write" scoped="" ref="0xb75d13c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb75d74e8" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0xb75d74e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75d76c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb75d35c8" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0xb75d35c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75d37a0"/>
        <function-ref name="write" scoped="" ref="0xb75d3880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb75d1db8" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xb75d1db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75d0010"/>
        <function-ref name="write" scoped="" ref="0xb75d00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb75d0270" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0xb75d0270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75d0448"/>
        <function-ref name="write" scoped="" ref="0xb75d0528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb75ca448" loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0xb75ca448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75ca620"/>
        <function-ref name="write" scoped="" ref="0xb75ca700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb75cb2b0" loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xb75cb2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75cb488"/>
        <function-ref name="write" scoped="" ref="0xb75cb568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb75d7ef0" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0xb75d7ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75d60e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb75cca00" loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb75cca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75ccbd8"/>
        <function-ref name="write" scoped="" ref="0xb75cccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb75d3e38" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0xb75d3e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75d2050"/>
        <function-ref name="write" scoped="" ref="0xb75d2130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb75d26e8" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xb75d26e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75d28c0"/>
        <function-ref name="write" scoped="" ref="0xb75d29a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb75cebd8" loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0xb75cebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75cedb0"/>
        <function-ref name="write" scoped="" ref="0xb75cee90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb75d06a8" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0xb75d06a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75d0880"/>
        <function-ref name="write" scoped="" ref="0xb75d0960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb75d88a8" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xb75d88a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb75d8a80"/>
        <function-ref name="abortRelease" scoped="" ref="0xb75d8b60"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb75d8c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb75d6c68" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0xb75d6c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75d6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb75d4010" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0xb75d4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75d4268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb75d43e8" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0xb75d43e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75d45c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb75cce38" loc="89:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb75cce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75cb050"/>
        <function-ref name="write" scoped="" ref="0xb75cb130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb75d65b8" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0xb75d65b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75d6790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb75d22b0" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0xb75d22b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75d2488"/>
        <function-ref name="write" scoped="" ref="0xb75d2568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb75d3a00" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xb75d3a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75d3bd8"/>
        <function-ref name="write" scoped="" ref="0xb75d3cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb75d7190" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0xb75d7190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75d7368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb75ca010" loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0xb75ca010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75ca1e8"/>
        <function-ref name="write" scoped="" ref="0xb75ca2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb75cb6e8" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xb75cb6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75cb8c0"/>
        <function-ref name="write" scoped="" ref="0xb75cb9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb75cd030" loc="80:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0xb75cd030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75cd208"/>
        <function-ref name="write" scoped="" ref="0xb75cd2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb75cc5c8" loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0xb75cc5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75cc7a0"/>
        <function-ref name="write" scoped="" ref="0xb75cc880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb75d0f18" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0xb75d0f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75ce108"/>
        <function-ref name="write" scoped="" ref="0xb75ce1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb75ca880" loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0xb75ca880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb75cac58"/>
        <function-ref name="writeDone" scoped="" ref="0xb75cad38"/>
        <function-ref name="write" scoped="" ref="0xb75cae18"/>
        <function-ref name="beginRead" scoped="" ref="0xb75caef8"/>
        <function-ref name="readDone" scoped="" ref="0xb75c8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb75d8dc0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xb75d8dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75d7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb75d3190" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0xb75d3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75d3368"/>
        <function-ref name="write" scoped="" ref="0xb75d3448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb75d2b20" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0xb75d2b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75d2cf8"/>
        <function-ref name="write" scoped="" ref="0xb75d2dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb75d0ae0" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0xb75d0ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75d0cb8"/>
        <function-ref name="write" scoped="" ref="0xb75d0d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb75d1548" loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0xb75d1548"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75d1720"/>
        <function-ref name="write" scoped="" ref="0xb75d1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb75d7840" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0xb75d7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75d7a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb75d1980" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xb75d1980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75d1b58"/>
        <function-ref name="write" scoped="" ref="0xb75d1c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb75d81f0" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb75d81f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb75d83c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb75d84a8"/>
        <function-ref name="request" scoped="" ref="0xb75d8588"/>
        <function-ref name="granted" scoped="" ref="0xb75d8668"/>
        <function-ref name="isOwner" scoped="" ref="0xb75d8748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb75d4740" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0xb75d4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75d4918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb75d4df0" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0xb75d4df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75d3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb75cc190" loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0xb75cc190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75cc368"/>
        <function-ref name="write" scoped="" ref="0xb75cc448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb75cdcd8" loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0xb75cdcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75cdeb0"/>
        <function-ref name="write" scoped="" ref="0xb75cc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb75d6910" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0xb75d6910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75d6ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb75cd8a0" loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb75cd8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75cda78"/>
        <function-ref name="write" scoped="" ref="0xb75cdb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb75cbb20" loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0xb75cbb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75cbcf8"/>
        <function-ref name="write" scoped="" ref="0xb75cbdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb75cd468" loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0xb75cd468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75cd640"/>
        <function-ref name="write" scoped="" ref="0xb75cd720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb75d7b98" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0xb75d7b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75d7d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb75ce7a0" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0xb75ce7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75ce978"/>
        <function-ref name="write" scoped="" ref="0xb75cea58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb75d6260" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0xb75d6260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75d6438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb75ce368" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0xb75ce368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75ce540"/>
        <function-ref name="write" scoped="" ref="0xb75ce620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb75d4a98" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0xb75d4a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75d4c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb75c8190" loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0xb75c8190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb75c8368"/>
        <function-ref name="writeDone" scoped="" ref="0xb75c8448"/>
        <function-ref name="write" scoped="" ref="0xb75c8528"/>
        <function-ref name="beginRead" scoped="" ref="0xb75c8608"/>
        <function-ref name="readDone" scoped="" ref="0xb75c86e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0xb77028d0" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0xb77028d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb7702aa8"/>
        <function-ref name="writeDone" scoped="" ref="0xb7702b88"/>
        <function-ref name="write" scoped="" ref="0xb7702c68"/>
        <function-ref name="beginRead" scoped="" ref="0xb7702d48"/>
        <function-ref name="readDone" scoped="" ref="0xb7702e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb7702040" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xb7702040"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb7702218"/>
        <function-ref name="abortRelease" scoped="" ref="0xb77022f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb77023d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0xb7701340" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0xb7701340"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7701518"/>
        <function-ref name="write" scoped="" ref="0xb77015f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0xb7701b08" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0xb7701b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7701ce0"/>
        <function-ref name="write" scoped="" ref="0xb7701dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb77068c0" loc="39:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb77068c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7706a98"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7706b78"/>
        <function-ref name="request" scoped="" ref="0xb7706c58"/>
        <function-ref name="granted" scoped="" ref="0xb7706d38"/>
        <function-ref name="isOwner" scoped="" ref="0xb7706e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0xb7700310" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0xb7700310"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb77004e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0xb76f12f0" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb76f12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76f14c8"/>
        <function-ref name="sendDone" scoped="" ref="0xb76f15a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0xb76fc100" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0xb76fc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb76fc2d8"/>
        <function-ref name="writeDone" scoped="" ref="0xb76fc3b8"/>
        <function-ref name="write" scoped="" ref="0xb76fc498"/>
        <function-ref name="beginRead" scoped="" ref="0xb76fc578"/>
        <function-ref name="readDone" scoped="" ref="0xb76fc658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb7700e88" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xb7700e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb76fd070"/>
        <function-ref name="abortRelease" scoped="" ref="0xb76fd150"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb76fd230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0xb76f9ed8" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb76f9ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb76f80c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0xb76f17c0" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0xb76f17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb76f1998"/>
        <function-ref name="toIdle" scoped="" ref="0xb76f1a78"/>
        <function-ref name="isState" scoped="" ref="0xb76f1b58"/>
        <function-ref name="isIdle" scoped="" ref="0xb76f1c38"/>
        <function-ref name="requestState" scoped="" ref="0xb76f1d18"/>
        <function-ref name="forceState" scoped="" ref="0xb76f1df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb76faee8" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb76faee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb76f90e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb76f91c0"/>
        <function-ref name="request" scoped="" ref="0xb76f92a0"/>
        <function-ref name="granted" scoped="" ref="0xb76f9380"/>
        <function-ref name="isOwner" scoped="" ref="0xb76f9460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0xb76fcb28" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0xb76fcb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb76fcd00"/>
        <function-ref name="write" scoped="" ref="0xb76fcde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0xb76fa2f0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0xb76fa2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb76fa4c8"/>
        <function-ref name="write" scoped="" ref="0xb76fa5a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb76f7010" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb76f7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb76f71e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb76f72c8"/>
        <function-ref name="led1On" scoped="" ref="0xb76f73a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb76f7488"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb76f7568"/>
        <function-ref name="get" scoped="" ref="0xb76f7648"/>
        <function-ref name="led1Off" scoped="" ref="0xb76f7728"/>
        <function-ref name="led2Off" scoped="" ref="0xb76f7aa8"/>
        <function-ref name="set" scoped="" ref="0xb76f7808"/>
        <function-ref name="led0On" scoped="" ref="0xb76f78e8"/>
        <function-ref name="led2On" scoped="" ref="0xb76f79c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb76fd6a8" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb76fd6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb76fd880"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb76fd960"/>
        <function-ref name="request" scoped="" ref="0xb76fda40"/>
        <function-ref name="granted" scoped="" ref="0xb76fdb20"/>
        <function-ref name="isOwner" scoped="" ref="0xb76fdc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0xb76f2d60" loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0xb76f2d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb76f0010"/>
        <function-ref name="runTask" scoped="" ref="0xb76f00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0xb76faaa8" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0xb76faaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb76fac80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb76be528" loc="67:/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xb76be528"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb76be700"/>
        <function-ref name="toIdle" scoped="" ref="0xb76be7e0"/>
        <function-ref name="isState" scoped="" ref="0xb76be8c0"/>
        <function-ref name="isIdle" scoped="" ref="0xb76be9a0"/>
        <function-ref name="requestState" scoped="" ref="0xb76bea80"/>
        <function-ref name="forceState" scoped="" ref="0xb76beb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb76bc790" loc="66:/opt/tinyos-main-2.1.2/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xb76bc790"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb76bc968"/>
        <function-ref name="toIdle" scoped="" ref="0xb76bca48"/>
        <function-ref name="isState" scoped="" ref="0xb76bcb28"/>
        <function-ref name="isIdle" scoped="" ref="0xb76bcc08"/>
        <function-ref name="requestState" scoped="" ref="0xb76bcce8"/>
        <function-ref name="forceState" scoped="" ref="0xb76bcdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb76b97c8" loc="66:/opt/tinyos-main-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb76b97c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb76b99a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb76b9df8" loc="67:/opt/tinyos-main-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xb76b9df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb76b6010"/>
        <function-ref name="toIdle" scoped="" ref="0xb76b60f0"/>
        <function-ref name="isState" scoped="" ref="0xb76b61d0"/>
        <function-ref name="isIdle" scoped="" ref="0xb76b62b0"/>
        <function-ref name="requestState" scoped="" ref="0xb76b6390"/>
        <function-ref name="forceState" scoped="" ref="0xb76b6470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb76b7c58" loc="43:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb76b7c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76b7e30"/>
        <function-ref name="sendDone" scoped="" ref="0xb76b7f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb76b7920" loc="42:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb76b7920"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb76b7af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb76baf10" loc="39:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb76baf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb76b7108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb76b7268" loc="40:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb76b7268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb76b7440"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb76b7520"/>
        <function-ref name="request" scoped="" ref="0xb76b7600"/>
        <function-ref name="granted" scoped="" ref="0xb76b76e0"/>
        <function-ref name="isOwner" scoped="" ref="0xb76b77c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb76a1df8" loc="84:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb76a1df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76a4010"/>
        <function-ref name="sendDone" scoped="" ref="0xb76a40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb76a54f8" loc="82:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb76a54f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb76a56d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb76a5178" loc="81:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb76a5178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb76a5350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb76a17c0" loc="83:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb76a17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb76a1998"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb76a1a78"/>
        <function-ref name="splitRead" scoped="" ref="0xb76a1b58"/>
        <function-ref name="write" scoped="" ref="0xb76a1c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb76a4588" loc="85:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb76a4588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb76a4760"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb76a4840"/>
        <function-ref name="request" scoped="" ref="0xb76a4920"/>
        <function-ref name="granted" scoped="" ref="0xb76a4a00"/>
        <function-ref name="isOwner" scoped="" ref="0xb76a4ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0xb76771e0" loc="296:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0xb76771e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb76773b8"/>
        <function-ref name="runTask" scoped="" ref="0xb7677498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb769e450" loc="94:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb769e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb769e628"/>
        <function-ref name="sendDone" scoped="" ref="0xb769e708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0xb769b8c0" loc="99:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0xb769b8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb769ba98"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb769bb78"/>
        <function-ref name="request" scoped="" ref="0xb769bc58"/>
        <function-ref name="granted" scoped="" ref="0xb769bd38"/>
        <function-ref name="isOwner" scoped="" ref="0xb769be18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb76a3a30" loc="92:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb76a3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb76a3c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb76a36d0" loc="91:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb76a36d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb76a38a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0xb768dbc8" loc="98:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0xb768dbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb768dda0"/>
        <function-ref name="sleep" scoped="" ref="0xb769b2b0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb769c010"/>
        <function-ref name="dataReady" scoped="" ref="0xb769b390"/>
        <function-ref name="initMaster" scoped="" ref="0xb769c1d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb769c2b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb769c390"/>
        <function-ref name="read" scoped="" ref="0xb769c470"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb769c550"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb769c630"/>
        <function-ref name="setClock" scoped="" ref="0xb769c710"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb769c7f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb769c8d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb769ca30"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb769cb10"/>
        <function-ref name="write" scoped="" ref="0xb769cbf0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb769ccd0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb769cdb0"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb769ce90"/>
        <function-ref name="getClock" scoped="" ref="0xb769b010"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb769b0f0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb768de80"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb769c0f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb769b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb76a3db8" loc="93:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb76a3db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb769e010"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb769e0f0"/>
        <function-ref name="splitRead" scoped="" ref="0xb769e1d0"/>
        <function-ref name="write" scoped="" ref="0xb769e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb769eb80" loc="95:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb769eb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb769ed58"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb769ee38"/>
        <function-ref name="request" scoped="" ref="0xb769ef18"/>
        <function-ref name="granted" scoped="" ref="0xb769d010"/>
        <function-ref name="isOwner" scoped="" ref="0xb769d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb768bf08" loc="100:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb768bf08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb768a0f0"/>
        <function-ref name="userId" scoped="" ref="0xb768a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0xb768a398" loc="101:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb768a398"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb768a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0xb769fe48" loc="76:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0xb769fe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb765e050"/>
        <function-ref name="sleep" scoped="" ref="0xb765d470"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb765e210"/>
        <function-ref name="dataReady" scoped="" ref="0xb765d550"/>
        <function-ref name="initMaster" scoped="" ref="0xb765e3d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb765e4b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb765e590"/>
        <function-ref name="read" scoped="" ref="0xb765e670"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb765e750"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb765e830"/>
        <function-ref name="setClock" scoped="" ref="0xb765e910"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb765e9f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb765ead0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb765ec30"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb765ed10"/>
        <function-ref name="write" scoped="" ref="0xb765edf0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb765eed0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb765d010"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb765d0f0"/>
        <function-ref name="getClock" scoped="" ref="0xb765d1d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb765d2b0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb765e130"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb765e2f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb765d390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0xb7657e88" loc="81:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0xb7657e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7654070"/>
        <function-ref name="isInput" scoped="" ref="0xb7654150"/>
        <function-ref name="toggle" scoped="" ref="0xb7654230"/>
        <function-ref name="isOutput" scoped="" ref="0xb7654310"/>
        <function-ref name="get" scoped="" ref="0xb76543f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb76544d0"/>
        <function-ref name="set" scoped="" ref="0xb76545b0"/>
        <function-ref name="clr" scoped="" ref="0xb7654690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0xb76589e8" loc="79:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0xb76589e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7658bc0"/>
        <function-ref name="isInput" scoped="" ref="0xb7658ca0"/>
        <function-ref name="toggle" scoped="" ref="0xb7658d80"/>
        <function-ref name="isOutput" scoped="" ref="0xb7658e60"/>
        <function-ref name="get" scoped="" ref="0xb7657010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb76570f0"/>
        <function-ref name="set" scoped="" ref="0xb76571d0"/>
        <function-ref name="clr" scoped="" ref="0xb76572b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0xb7658010" loc="78:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0xb7658010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb76581e8"/>
        <function-ref name="isInput" scoped="" ref="0xb76582c8"/>
        <function-ref name="toggle" scoped="" ref="0xb76583a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7658488"/>
        <function-ref name="get" scoped="" ref="0xb7658568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7658648"/>
        <function-ref name="set" scoped="" ref="0xb7658728"/>
        <function-ref name="clr" scoped="" ref="0xb7658808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0xb7656ac0" loc="75:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0xb7656ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7656c98"/>
        <function-ref name="stop" scoped="" ref="0xb7656d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0xb7654898" loc="82:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0xb7654898"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb7654a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0xb765a1c8" loc="74:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0xb765a1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb765a3a0"/>
        <function-ref name="sleep" scoped="" ref="0xb76597f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb765a560"/>
        <function-ref name="dataReady" scoped="" ref="0xb76598d0"/>
        <function-ref name="initMaster" scoped="" ref="0xb765a720"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb765a800"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb765a8e0"/>
        <function-ref name="read" scoped="" ref="0xb765a9c0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb765aaa0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb765ab80"/>
        <function-ref name="setClock" scoped="" ref="0xb765ac60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb765ad40"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb765ae20"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb7659010"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb76590f0"/>
        <function-ref name="write" scoped="" ref="0xb76591d0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb76592b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb7659390"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb7659470"/>
        <function-ref name="getClock" scoped="" ref="0xb7659550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb7659630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb765a480"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb765a640"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb7659710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0xb76574a0" loc="80:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0xb76574a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7657678"/>
        <function-ref name="isInput" scoped="" ref="0xb7657758"/>
        <function-ref name="toggle" scoped="" ref="0xb7657838"/>
        <function-ref name="isOutput" scoped="" ref="0xb7657918"/>
        <function-ref name="get" scoped="" ref="0xb76579f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7657ad8"/>
        <function-ref name="set" scoped="" ref="0xb7657bb8"/>
        <function-ref name="clr" scoped="" ref="0xb7657c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb762ccb0" loc="86:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb762ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb762ce98"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb75f7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb75f7600" loc="89:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb75f7600"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb75f77e8"/>
        <function-ref name="configure" scoped="" ref="0xb75f78c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb762c570" loc="85:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb762c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb762c758"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb762c838"/>
        <function-ref name="request" scoped="" ref="0xb762c918"/>
        <function-ref name="granted" scoped="" ref="0xb762c9f8"/>
        <function-ref name="isOwner" scoped="" ref="0xb762cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb75f7150" loc="87:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb75f7150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb75f7328"/>
        <function-ref name="userId" scoped="" ref="0xb75f7408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6ffa238" loc="44:/opt/tinyos-main-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6ffa238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6ffa410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb6ffa570" loc="45:/opt/tinyos-main-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xb6ffa570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb6ffa748"/>
        <function-ref name="isEmpty" scoped="" ref="0xb6ffa828"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb6ffa908"/>
        <function-ref name="dequeue" scoped="" ref="0xb6ffa9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb6ff9cb8" loc="52:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb6ff9cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb6ff9ea0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb6ff7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb6ff7610" loc="56:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb6ff7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb6ff77f8"/>
        <function-ref name="configure" scoped="" ref="0xb6ff78d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb6ff7a38" loc="57:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb6ff7a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb6ff7c10"/>
        <function-ref name="isEmpty" scoped="" ref="0xb6ff7cf0"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb6ff7dd0"/>
        <function-ref name="dequeue" scoped="" ref="0xb6ff7eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb6ff9578" loc="51:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb6ff9578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6ff9760"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6ff9840"/>
        <function-ref name="request" scoped="" ref="0xb6ff9920"/>
        <function-ref name="granted" scoped="" ref="0xb6ff9a00"/>
        <function-ref name="isOwner" scoped="" ref="0xb6ff9ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb6ff7150" loc="53:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb6ff7150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb6ff7328"/>
        <function-ref name="userId" scoped="" ref="0xb6ff7408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb6ff6050" loc="69:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xb6ff6050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6ff6228"/>
        <function-ref name="runTask" scoped="" ref="0xb6ff6308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0xb75f0b68" loc="45:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0xb75f0b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb75f0d40"/>
        <function-ref name="isInput" scoped="" ref="0xb75f0e20"/>
        <function-ref name="toggle" scoped="" ref="0xb75f0f00"/>
        <function-ref name="isOutput" scoped="" ref="0xb75ef010"/>
        <function-ref name="get" scoped="" ref="0xb75ef0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb75ef1d0"/>
        <function-ref name="set" scoped="" ref="0xb75ef2b0"/>
        <function-ref name="clr" scoped="" ref="0xb75ef390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb75f4c00" loc="40:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb75f4c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb75f4dd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb75f4eb8"/>
        <function-ref name="request" scoped="" ref="0xb75f0010"/>
        <function-ref name="granted" scoped="" ref="0xb75f00f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb75f01d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0xb75f0438" loc="44:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0xb75f0438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb75f0610"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb75f06f0"/>
        <function-ref name="request" scoped="" ref="0xb75f07d0"/>
        <function-ref name="granted" scoped="" ref="0xb75f08b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb75f0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb75bcbd8" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0xb75bcbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75bceb0"/>
        <function-ref name="write" scoped="" ref="0xb75bb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb75c1010" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0xb75c1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75c11e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb75bd270" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0xb75bd270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75bd448"/>
        <function-ref name="write" scoped="" ref="0xb75bd528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb75bba00" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xb75bba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75bbbd8"/>
        <function-ref name="write" scoped="" ref="0xb75bbcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb75bbe38" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0xb75bbe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75ba050"/>
        <function-ref name="write" scoped="" ref="0xb75ba130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb75b4190" loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0xb75b4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75b4368"/>
        <function-ref name="write" scoped="" ref="0xb75b4448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb75b5010" loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xb75b5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75b51e8"/>
        <function-ref name="write" scoped="" ref="0xb75b52c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb75c1a18" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0xb75c1a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75c1bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb75b66e8" loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb75b66e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75b68c0"/>
        <function-ref name="write" scoped="" ref="0xb75b69a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb75bdae0" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0xb75bdae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75bdcb8"/>
        <function-ref name="write" scoped="" ref="0xb75bdd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb75bc368" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xb75bc368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75bc540"/>
        <function-ref name="write" scoped="" ref="0xb75bc620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb75b9880" loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0xb75b9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75b9a58"/>
        <function-ref name="write" scoped="" ref="0xb75b9b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb75ba2b0" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0xb75ba2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75ba488"/>
        <function-ref name="write" scoped="" ref="0xb75ba568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb75c2410" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xb75c2410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb75c25e8"/>
        <function-ref name="abortRelease" scoped="" ref="0xb75c26c8"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb75c27a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb75c0840" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0xb75c0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75c0a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb75c0b98" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0xb75c0b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75c0df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb75bf010" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0xb75bf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75bf1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb75b6b20" loc="89:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb75b6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75b6cf8"/>
        <function-ref name="write" scoped="" ref="0xb75b6dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb75c0190" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0xb75c0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75c0368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb75bdf18" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0xb75bdf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75bc108"/>
        <function-ref name="write" scoped="" ref="0xb75bc1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb75bd6a8" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xb75bd6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75bd880"/>
        <function-ref name="write" scoped="" ref="0xb75bd960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb75c2c80" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0xb75c2c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75c2e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb75b5cb8" loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0xb75b5cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75b5e90"/>
        <function-ref name="write" scoped="" ref="0xb75b4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb75b5448" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xb75b5448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75b5620"/>
        <function-ref name="write" scoped="" ref="0xb75b5700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb75b9cb8" loc="80:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0xb75b9cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75b9e90"/>
        <function-ref name="write" scoped="" ref="0xb75b8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb75b62b0" loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0xb75b62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75b6488"/>
        <function-ref name="write" scoped="" ref="0xb75b6568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb75bab20" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0xb75bab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75bacf8"/>
        <function-ref name="write" scoped="" ref="0xb75badd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb75b45c8" loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0xb75b45c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb75b49a0"/>
        <function-ref name="writeDone" scoped="" ref="0xb75b4a80"/>
        <function-ref name="write" scoped="" ref="0xb75b4b60"/>
        <function-ref name="beginRead" scoped="" ref="0xb75b4c40"/>
        <function-ref name="readDone" scoped="" ref="0xb75b4d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb75c2928" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xb75c2928"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75c2b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb75bfd70" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0xb75bfd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75bd010"/>
        <function-ref name="write" scoped="" ref="0xb75bd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb75bc7a0" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0xb75bc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75bc978"/>
        <function-ref name="write" scoped="" ref="0xb75bca58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb75ba6e8" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0xb75ba6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75ba8c0"/>
        <function-ref name="write" scoped="" ref="0xb75ba9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb75bb190" loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0xb75bb190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75bb368"/>
        <function-ref name="write" scoped="" ref="0xb75bb448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb75c1368" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0xb75c1368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75c1540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb75bb5c8" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xb75bb5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75bb7a0"/>
        <function-ref name="write" scoped="" ref="0xb75bb880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb75c3c80" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb75c3c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb75c3e58"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb75c2010"/>
        <function-ref name="request" scoped="" ref="0xb75c20f0"/>
        <function-ref name="granted" scoped="" ref="0xb75c21d0"/>
        <function-ref name="isOwner" scoped="" ref="0xb75c22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb75bf368" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0xb75bf368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75bf540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb75bfa18" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0xb75bfa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75bfbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb75b8e38" loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0xb75b8e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75b6050"/>
        <function-ref name="write" scoped="" ref="0xb75b6130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb75b8a00" loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0xb75b8a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75b8bd8"/>
        <function-ref name="write" scoped="" ref="0xb75b8cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb75c04e8" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0xb75c04e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75c06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb75b85c8" loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb75b85c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75b87a0"/>
        <function-ref name="write" scoped="" ref="0xb75b8880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb75b5880" loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0xb75b5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75b5a58"/>
        <function-ref name="write" scoped="" ref="0xb75b5b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb75b8190" loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0xb75b8190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75b8368"/>
        <function-ref name="write" scoped="" ref="0xb75b8448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb75c16c0" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0xb75c16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75c1898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb75b9448" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0xb75b9448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75b9620"/>
        <function-ref name="write" scoped="" ref="0xb75b9700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb75c1d70" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0xb75c1d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75c0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb75b9010" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0xb75b9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75b91e8"/>
        <function-ref name="write" scoped="" ref="0xb75b92c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb75bf6c0" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0xb75bf6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75bf898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb75b4ea0" loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0xb75b4ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb75b30c0"/>
        <function-ref name="writeDone" scoped="" ref="0xb75b31a0"/>
        <function-ref name="write" scoped="" ref="0xb75b3280"/>
        <function-ref name="beginRead" scoped="" ref="0xb75b3360"/>
        <function-ref name="readDone" scoped="" ref="0xb75b3440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb75a9368" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0xb75a9368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a9640"/>
        <function-ref name="write" scoped="" ref="0xb75a9720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb75af840" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0xb75af840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75afa18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb75ab920" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0xb75ab920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75abaf8"/>
        <function-ref name="write" scoped="" ref="0xb75abbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb75a7190" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xb75a7190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a7368"/>
        <function-ref name="write" scoped="" ref="0xb75a7448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb75a75c8" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0xb75a75c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a77a0"/>
        <function-ref name="write" scoped="" ref="0xb75a7880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb75a2880" loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0xb75a2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a2a58"/>
        <function-ref name="write" scoped="" ref="0xb75a2b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb75a36e8" loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xb75a36e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a38c0"/>
        <function-ref name="write" scoped="" ref="0xb75a39a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb75ad260" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0xb75ad260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75ad438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb75a4e38" loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb75a4e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a3050"/>
        <function-ref name="write" scoped="" ref="0xb75a3130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb75aa270" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0xb75aa270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75aa448"/>
        <function-ref name="write" scoped="" ref="0xb75aa528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb75aaae0" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xb75aaae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75aacb8"/>
        <function-ref name="write" scoped="" ref="0xb75aad98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb75a5010" loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0xb75a5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a51e8"/>
        <function-ref name="write" scoped="" ref="0xb75a52c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb75a7a00" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0xb75a7a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a7bd8"/>
        <function-ref name="write" scoped="" ref="0xb75a7cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb75b0bd0" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xb75b0bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb75b0da8"/>
        <function-ref name="abortRelease" scoped="" ref="0xb75b0e88"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb75af010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb75ac010" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0xb75ac010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75ac1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb75ac368" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0xb75ac368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75ac5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb75ac740" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0xb75ac740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75ac918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb75a32b0" loc="89:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb75a32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a3488"/>
        <function-ref name="write" scoped="" ref="0xb75a3568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb75ad910" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0xb75ad910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75adae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb75aa6a8" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0xb75aa6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75aa880"/>
        <function-ref name="write" scoped="" ref="0xb75aa960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb75abd58" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xb75abd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75aa010"/>
        <function-ref name="write" scoped="" ref="0xb75aa0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb75af4e8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0xb75af4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75af6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb75a2448" loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0xb75a2448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a2620"/>
        <function-ref name="write" scoped="" ref="0xb75a2700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb75a3b20" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xb75a3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a3cf8"/>
        <function-ref name="write" scoped="" ref="0xb75a3dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb75a5448" loc="80:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0xb75a5448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a5620"/>
        <function-ref name="write" scoped="" ref="0xb75a5700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb75a4a00" loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0xb75a4a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a4bd8"/>
        <function-ref name="write" scoped="" ref="0xb75a4cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb75a62b0" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0xb75a62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a6488"/>
        <function-ref name="write" scoped="" ref="0xb75a6568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb75a2cb8" loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0xb75a2cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb75a00c0"/>
        <function-ref name="writeDone" scoped="" ref="0xb75a01a0"/>
        <function-ref name="write" scoped="" ref="0xb75a0280"/>
        <function-ref name="beginRead" scoped="" ref="0xb75a0360"/>
        <function-ref name="readDone" scoped="" ref="0xb75a0440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb75af190" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xb75af190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75af368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb75ab4e8" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0xb75ab4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75ab6c0"/>
        <function-ref name="write" scoped="" ref="0xb75ab7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb75aaf18" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0xb75aaf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a9108"/>
        <function-ref name="write" scoped="" ref="0xb75a91e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb75a7e38" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0xb75a7e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a6050"/>
        <function-ref name="write" scoped="" ref="0xb75a6130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb75a98a0" loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0xb75a98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a9a78"/>
        <function-ref name="write" scoped="" ref="0xb75a9b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb75afb98" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0xb75afb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75afd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb75a9cd8" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xb75a9cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a9eb0"/>
        <function-ref name="write" scoped="" ref="0xb75a7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb75b0518" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb75b0518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb75b06f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb75b07d0"/>
        <function-ref name="request" scoped="" ref="0xb75b08b0"/>
        <function-ref name="granted" scoped="" ref="0xb75b0990"/>
        <function-ref name="isOwner" scoped="" ref="0xb75b0a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb75aca98" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0xb75aca98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75acc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb75ab190" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0xb75ab190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75ab368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb75a45c8" loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0xb75a45c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a47a0"/>
        <function-ref name="write" scoped="" ref="0xb75a4880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb75a4190" loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0xb75a4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a4368"/>
        <function-ref name="write" scoped="" ref="0xb75a4448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb75adc68" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0xb75adc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75ade40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb75a5cb8" loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb75a5cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a5e90"/>
        <function-ref name="write" scoped="" ref="0xb75a4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb75a2010" loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0xb75a2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a21e8"/>
        <function-ref name="write" scoped="" ref="0xb75a22c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb75a5880" loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0xb75a5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a5a58"/>
        <function-ref name="write" scoped="" ref="0xb75a5b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb75afef0" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0xb75afef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75ad0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb75a6b20" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0xb75a6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a6cf8"/>
        <function-ref name="write" scoped="" ref="0xb75a6dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb75ad5b8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0xb75ad5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75ad790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb75a66e8" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0xb75a66e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75a68c0"/>
        <function-ref name="write" scoped="" ref="0xb75a69a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb75acdf0" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0xb75acdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75ab010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb75a05c0" loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0xb75a05c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb75a0798"/>
        <function-ref name="writeDone" scoped="" ref="0xb75a0878"/>
        <function-ref name="write" scoped="" ref="0xb75a0958"/>
        <function-ref name="beginRead" scoped="" ref="0xb75a0a38"/>
        <function-ref name="readDone" scoped="" ref="0xb75a0b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0xb759dea8" loc="54:/opt/tinyos-main-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb759dea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb759a0c0"/>
        <function-ref name="changed" scoped="" ref="0xb759a1a0"/>
        <function-ref name="amGroup" scoped="" ref="0xb759a280"/>
        <function-ref name="setAddress" scoped="" ref="0xb759a360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0xb759c760" loc="40:/opt/tinyos-main-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb759c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0xb759c938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb7588c78" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0xb7588c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb7588e50"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb7587010"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb75870f0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb75871d0"/>
        <function-ref name="setCca" scoped="" ref="0xb75872b0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb7587390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0xb7587e18" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0xb7587e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb7586010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0xb7588560" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0xb7588560"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7588738"/>
        <function-ref name="cancel" scoped="" ref="0xb7588818"/>
        <function-ref name="modify" scoped="" ref="0xb75888f8"/>
        <function-ref name="sendDone" scoped="" ref="0xb75889d8"/>
        <function-ref name="resend" scoped="" ref="0xb7588ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb75880d8" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb75880d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb75882b0"/>
        <function-ref name="stop" scoped="" ref="0xb7588390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0xb75862a0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0xb75862a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb7586478"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb7572a68" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0xb7572a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb7572c40"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb7572d20"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb7572e00"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb7572ee0"/>
        <function-ref name="setCca" scoped="" ref="0xb7571010"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb75710f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb756d850" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb756d850"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bb4f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb756c3c0"/>
        <function-ref name="clear" scoped="" ref="0xb756c770"/>
        <function-ref name="isValid" scoped="" ref="0xb756c010"/>
        <function-ref name="set" scoped="" ref="0xb756cb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0xb7560438" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xb7560438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7560610"/>
        <function-ref name="write" scoped="" ref="0xb75606f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0xb7560900" loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xb7560900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7560ad8"/>
        <function-ref name="write" scoped="" ref="0xb7560bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0xb75713b0" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0xb75713b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb7571588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0xb7562c30" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0xb7562c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7562e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0xb7566e58" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0xb7566e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb7569050"/>
        <function-ref name="disable" scoped="" ref="0xb7569130"/>
        <function-ref name="captured" scoped="" ref="0xb7569210"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb75692f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0xb7571e00" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0xb7571e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bb4f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb756e350"/>
        <function-ref name="fired" scoped="" ref="0xb7570a88"/>
        <function-ref name="startAt" scoped="" ref="0xb756e010"/>
        <function-ref name="isRunning" scoped="" ref="0xb7570d00"/>
        <function-ref name="getAlarm" scoped="" ref="0xb756e5c8"/>
        <function-ref name="start" scoped="" ref="0xb7570570"/>
        <function-ref name="stop" scoped="" ref="0xb7570810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb756e878" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb756e878"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb756ea50"/>
        <function-ref name="setNetwork" scoped="" ref="0xb756eb30"/>
        <function-ref name="getRssi" scoped="" ref="0xb756ec10"/>
        <function-ref name="getNetwork" scoped="" ref="0xb756ecf0"/>
        <function-ref name="getPower" scoped="" ref="0xb756edd0"/>
        <function-ref name="getLqi" scoped="" ref="0xb756eeb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0xb75639d8" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb75639d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7563bb0"/>
        <function-ref name="write" scoped="" ref="0xb7563c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0xb7563ee0" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xb7563ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75620e0"/>
        <function-ref name="write" scoped="" ref="0xb75621c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0xb755b120" loc="83:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0xb755b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb755b2f8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0xb755b3d8"/>
        <function-ref name="sfd" scoped="" ref="0xb755b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb7572330" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7572330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7572508"/>
        <function-ref name="cancel" scoped="" ref="0xb75725e8"/>
        <function-ref name="modify" scoped="" ref="0xb75726c8"/>
        <function-ref name="sendDone" scoped="" ref="0xb75727a8"/>
        <function-ref name="resend" scoped="" ref="0xb7572888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0xb7565c48" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xb7565c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb7565e20"/>
        <function-ref name="abortRelease" scoped="" ref="0xb7565f00"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb7563010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0xb7561088" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0xb7561088"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7561260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0xb7568010" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0xb7568010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb75681e8"/>
        <function-ref name="isInput" scoped="" ref="0xb75682c8"/>
        <function-ref name="toggle" scoped="" ref="0xb75683a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7568488"/>
        <function-ref name="get" scoped="" ref="0xb7568568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7568648"/>
        <function-ref name="set" scoped="" ref="0xb7568728"/>
        <function-ref name="clr" scoped="" ref="0xb7568808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb75739c0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb75739c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7573b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb756d108" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb756d108"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb756d2e0"/>
        <function-ref name="getHeader" scoped="" ref="0xb756d3c0"/>
        <function-ref name="getMetadata" scoped="" ref="0xb756d4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0xb7566788" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb7566788"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7566960"/>
        <function-ref name="isSet" scoped="" ref="0xb7566a40"/>
        <function-ref name="cancel" scoped="" ref="0xb7566b20"/>
        <function-ref name="set" scoped="" ref="0xb7566c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0xb75614c8" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xb75614c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75617a0"/>
        <function-ref name="write" scoped="" ref="0xb7561880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb75654f8" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb75654f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb75656d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb75657b0"/>
        <function-ref name="request" scoped="" ref="0xb7565890"/>
        <function-ref name="granted" scoped="" ref="0xb7565970"/>
        <function-ref name="isOwner" scoped="" ref="0xb7565a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0xb75694f0" loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0xb75694f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7569748"/>
        <function-ref name="isInput" scoped="" ref="0xb7569828"/>
        <function-ref name="toggle" scoped="" ref="0xb7569908"/>
        <function-ref name="isOutput" scoped="" ref="0xb75699e8"/>
        <function-ref name="get" scoped="" ref="0xb7569ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7569ba8"/>
        <function-ref name="set" scoped="" ref="0xb7569c88"/>
        <function-ref name="clr" scoped="" ref="0xb7569d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0xb7560dc8" loc="80:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xb7560dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb755f010"/>
        <function-ref name="write" scoped="" ref="0xb755f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0xb755f318" loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0xb755f318"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb755f4f0"/>
        <function-ref name="write" scoped="" ref="0xb755f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0xb75623f0" loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xb75623f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75625c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0xb7568a08" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0xb7568a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7568be0"/>
        <function-ref name="isInput" scoped="" ref="0xb7568cc0"/>
        <function-ref name="toggle" scoped="" ref="0xb7568da0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7568e80"/>
        <function-ref name="get" scoped="" ref="0xb7565010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb75650f0"/>
        <function-ref name="set" scoped="" ref="0xb75651d0"/>
        <function-ref name="clr" scoped="" ref="0xb75652b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb755b648" loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb755b648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb755b820"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb755b900"/>
        <function-ref name="led1On" scoped="" ref="0xb755b9e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb755bac0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb755bba0"/>
        <function-ref name="get" scoped="" ref="0xb755bc80"/>
        <function-ref name="led1Off" scoped="" ref="0xb755bd60"/>
        <function-ref name="led2Off" scoped="" ref="0xb755e0f8"/>
        <function-ref name="set" scoped="" ref="0xb755be40"/>
        <function-ref name="led0On" scoped="" ref="0xb755bf20"/>
        <function-ref name="led2On" scoped="" ref="0xb755e018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0xb7561f00" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xb7561f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75600f0"/>
        <function-ref name="write" scoped="" ref="0xb75601d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb7573d60" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb7573d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7572010"/>
        <function-ref name="stop" scoped="" ref="0xb75720f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0xb7563238" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0xb7563238"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb7563410"/>
        <function-ref name="writeDone" scoped="" ref="0xb75634f0"/>
        <function-ref name="write" scoped="" ref="0xb75635d0"/>
        <function-ref name="beginRead" scoped="" ref="0xb75636b0"/>
        <function-ref name="readDone" scoped="" ref="0xb7563790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0xb7562800" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0xb7562800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75629d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0xb7561ac0" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0xb7561ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7561c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0xb7571838" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0xb7571838"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb7571a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb7504bd8" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0xb7504bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7504eb0"/>
        <function-ref name="write" scoped="" ref="0xb7503010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb7509190" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0xb7509190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7509368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb7506270" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0xb7506270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7506448"/>
        <function-ref name="write" scoped="" ref="0xb7506528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb7503a00" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xb7503a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7503bd8"/>
        <function-ref name="write" scoped="" ref="0xb7503cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb7503e38" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0xb7503e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7502050"/>
        <function-ref name="write" scoped="" ref="0xb7502130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb74fc190" loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0xb74fc190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74fc368"/>
        <function-ref name="write" scoped="" ref="0xb74fc448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb74fd010" loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xb74fd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74fd1e8"/>
        <function-ref name="write" scoped="" ref="0xb74fd2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb7509b98" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0xb7509b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7509d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb74ff6e8" loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb74ff6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74ff8c0"/>
        <function-ref name="write" scoped="" ref="0xb74ff9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb7506ae0" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0xb7506ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7506cb8"/>
        <function-ref name="write" scoped="" ref="0xb7506d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb7504368" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xb7504368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7504540"/>
        <function-ref name="write" scoped="" ref="0xb7504620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb7501880" loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0xb7501880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7501a58"/>
        <function-ref name="write" scoped="" ref="0xb7501b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb75022b0" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0xb75022b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7502488"/>
        <function-ref name="write" scoped="" ref="0xb7502568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb750b530" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xb750b530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb750b708"/>
        <function-ref name="abortRelease" scoped="" ref="0xb750b7e8"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb750b8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb7508910" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0xb7508910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7508ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb7508c68" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0xb7508c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7508ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb7507080" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0xb7507080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7507258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb74ffb20" loc="89:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb74ffb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74ffcf8"/>
        <function-ref name="write" scoped="" ref="0xb74ffdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb7508260" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0xb7508260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7508438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb7506f18" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0xb7506f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7504108"/>
        <function-ref name="write" scoped="" ref="0xb75041e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb75066a8" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xb75066a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7506880"/>
        <function-ref name="write" scoped="" ref="0xb7506960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb750bda0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0xb750bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7509010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb74fdcb8" loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0xb74fdcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74fde90"/>
        <function-ref name="write" scoped="" ref="0xb74fc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb74fd448" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xb74fd448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74fd620"/>
        <function-ref name="write" scoped="" ref="0xb74fd700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb7501cb8" loc="80:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0xb7501cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7501e90"/>
        <function-ref name="write" scoped="" ref="0xb7500010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb74ff2b0" loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0xb74ff2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74ff488"/>
        <function-ref name="write" scoped="" ref="0xb74ff568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb7502b20" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0xb7502b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7502cf8"/>
        <function-ref name="write" scoped="" ref="0xb7502dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb74fc5c8" loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0xb74fc5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb74fc9a0"/>
        <function-ref name="writeDone" scoped="" ref="0xb74fca80"/>
        <function-ref name="write" scoped="" ref="0xb74fcb60"/>
        <function-ref name="beginRead" scoped="" ref="0xb74fcc40"/>
        <function-ref name="readDone" scoped="" ref="0xb74fcd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb750ba48" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xb750ba48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb750bc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb7507de0" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0xb7507de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7506010"/>
        <function-ref name="write" scoped="" ref="0xb75060f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb75047a0" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0xb75047a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7504978"/>
        <function-ref name="write" scoped="" ref="0xb7504a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb75026e8" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0xb75026e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75028c0"/>
        <function-ref name="write" scoped="" ref="0xb75029a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb7503190" loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0xb7503190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7503368"/>
        <function-ref name="write" scoped="" ref="0xb7503448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb75094e8" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0xb75094e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75096c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb75035c8" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xb75035c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75037a0"/>
        <function-ref name="write" scoped="" ref="0xb7503880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb750ce60" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb750ce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb750b050"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb750b130"/>
        <function-ref name="request" scoped="" ref="0xb750b210"/>
        <function-ref name="granted" scoped="" ref="0xb750b2f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb750b3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb75073d8" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0xb75073d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75075b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb7507a88" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0xb7507a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7507c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb7500e38" loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0xb7500e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74ff050"/>
        <function-ref name="write" scoped="" ref="0xb74ff130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb7500a00" loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0xb7500a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7500bd8"/>
        <function-ref name="write" scoped="" ref="0xb7500cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb75085b8" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0xb75085b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7508790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb75005c8" loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb75005c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75007a0"/>
        <function-ref name="write" scoped="" ref="0xb7500880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb74fd880" loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0xb74fd880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74fda58"/>
        <function-ref name="write" scoped="" ref="0xb74fdb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb7500190" loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0xb7500190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7500368"/>
        <function-ref name="write" scoped="" ref="0xb7500448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb7509840" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0xb7509840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7509a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb7501448" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0xb7501448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7501620"/>
        <function-ref name="write" scoped="" ref="0xb7501700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb7509ef0" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0xb7509ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75080e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb7501010" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0xb7501010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75011e8"/>
        <function-ref name="write" scoped="" ref="0xb75012c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb7507730" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0xb7507730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7507908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb74fcea0" loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0xb74fcea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb74fb0c0"/>
        <function-ref name="writeDone" scoped="" ref="0xb74fb1a0"/>
        <function-ref name="write" scoped="" ref="0xb74fb280"/>
        <function-ref name="beginRead" scoped="" ref="0xb74fb360"/>
        <function-ref name="readDone" scoped="" ref="0xb74fb440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0xb74f3118" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0xb74f3118"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb74f32f0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0xb74f33d0"/>
        <function-ref name="sfd" scoped="" ref="0xb74f34b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb74f3658" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb74f3658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb74f3830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0xb74f3af0" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0xb74f3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb74f3cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb74f6c58" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb74f6c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb74f6e30"/>
        <function-ref name="stop" scoped="" ref="0xb74f6f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0xb74ee840" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0xb74ee840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb74eea18"/>
        <function-ref name="isInput" scoped="" ref="0xb74eeaf8"/>
        <function-ref name="toggle" scoped="" ref="0xb74eebd8"/>
        <function-ref name="isOutput" scoped="" ref="0xb74eecb8"/>
        <function-ref name="get" scoped="" ref="0xb74eed98"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74eee78"/>
        <function-ref name="set" scoped="" ref="0xb74ed010"/>
        <function-ref name="clr" scoped="" ref="0xb74ed0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0xb74e9b18" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0xb74e9b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xb74e9cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xb74e9dd0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xb74e9eb0"/>
        <function-ref name="syncDone" scoped="" ref="0xb74e8010"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xb74e80f0"/>
        <function-ref name="setShortAddr" scoped="" ref="0xb74e81d0"/>
        <function-ref name="setChannel" scoped="" ref="0xb74e82b0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xb74e8390"/>
        <function-ref name="setPanAddr" scoped="" ref="0xb74e8470"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xb74e8550"/>
        <function-ref name="getExtAddr" scoped="" ref="0xb74e8630"/>
        <function-ref name="getShortAddr" scoped="" ref="0xb74e8710"/>
        <function-ref name="sync" scoped="" ref="0xb74e87f0"/>
        <function-ref name="getChannel" scoped="" ref="0xb74e8950"/>
        <function-ref name="getPanAddr" scoped="" ref="0xb74e8a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0xb74ddea0" loc="148:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0xb74ddea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb74dc0c0"/>
        <function-ref name="runTask" scoped="" ref="0xb74dc1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb74e8de0" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb74e8de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bb4f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb74e7920"/>
        <function-ref name="clear" scoped="" ref="0xb74e7cd0"/>
        <function-ref name="isValid" scoped="" ref="0xb74e7570"/>
        <function-ref name="set" scoped="" ref="0xb74e60a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0xb74ed308" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0xb74ed308"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb74ed4e0"/>
        <function-ref name="isInput" scoped="" ref="0xb74ed5c0"/>
        <function-ref name="toggle" scoped="" ref="0xb74ed6a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb74ed780"/>
        <function-ref name="get" scoped="" ref="0xb74ed860"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74ed940"/>
        <function-ref name="set" scoped="" ref="0xb74eda20"/>
        <function-ref name="clr" scoped="" ref="0xb74edb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0xb74e6f00" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xb74e6f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74e50f0"/>
        <function-ref name="write" scoped="" ref="0xb74e51d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0xb74e53e0" loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xb74e53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74e55b8"/>
        <function-ref name="write" scoped="" ref="0xb74e5698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0xb74e5d88" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0xb74e5d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74e4010"/>
        <function-ref name="write" scoped="" ref="0xb74e40f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb74ebd48" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb74ebd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb74ebf20"/>
        <function-ref name="setNetwork" scoped="" ref="0xb74e9018"/>
        <function-ref name="getRssi" scoped="" ref="0xb74e90f8"/>
        <function-ref name="getNetwork" scoped="" ref="0xb74e91d8"/>
        <function-ref name="getPower" scoped="" ref="0xb74e92b8"/>
        <function-ref name="getLqi" scoped="" ref="0xb74e9398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0xb74ef040" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0xb74ef040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb74ef218"/>
        <function-ref name="sfd_dropped" scoped="" ref="0xb74ef2f8"/>
        <function-ref name="sfd" scoped="" ref="0xb74ef3d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0xb74eb4e0" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0xb74eb4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74eb6b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0xb74efdf0" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0xb74efdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb74ee010"/>
        <function-ref name="isInput" scoped="" ref="0xb74ee0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb74ee1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb74ee2b0"/>
        <function-ref name="get" scoped="" ref="0xb74ee390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74ee470"/>
        <function-ref name="set" scoped="" ref="0xb74ee550"/>
        <function-ref name="clr" scoped="" ref="0xb74ee630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0xb74e4338" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb74e4338"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74e4510"/>
        <function-ref name="write" scoped="" ref="0xb74e45f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb74f27e0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb74f27e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb74f29b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb74e95a0" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb74e95a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb74e9778"/>
        <function-ref name="getHeader" scoped="" ref="0xb74e9858"/>
        <function-ref name="getMetadata" scoped="" ref="0xb74e9938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb74ef580" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb74ef580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb74ef758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb74ec4f8" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb74ec4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb74ec6d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb74ec7b0"/>
        <function-ref name="request" scoped="" ref="0xb74ec890"/>
        <function-ref name="granted" scoped="" ref="0xb74ec970"/>
        <function-ref name="isOwner" scoped="" ref="0xb74eca50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0xb74e58a8" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xb74e58a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74e5a80"/>
        <function-ref name="write" scoped="" ref="0xb74e5b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0xb74ecc78" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0xb74ecc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb74ece50"/>
        <function-ref name="writeDone" scoped="" ref="0xb74eb010"/>
        <function-ref name="write" scoped="" ref="0xb74eb0f0"/>
        <function-ref name="beginRead" scoped="" ref="0xb74eb1d0"/>
        <function-ref name="readDone" scoped="" ref="0xb74eb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0xb74e4820" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xb74e4820"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74e4af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0xb74efa18" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0xb74efa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb74efbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb74e4c88" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb74e4c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb74e4e60"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb74e3010"/>
        <function-ref name="led1On" scoped="" ref="0xb74e30f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb74e31d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb74e32b0"/>
        <function-ref name="get" scoped="" ref="0xb74e3390"/>
        <function-ref name="led1Off" scoped="" ref="0xb74e3470"/>
        <function-ref name="led2Off" scoped="" ref="0xb74e37f0"/>
        <function-ref name="set" scoped="" ref="0xb74e3550"/>
        <function-ref name="led0On" scoped="" ref="0xb74e3630"/>
        <function-ref name="led2On" scoped="" ref="0xb74e3710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0xb74e69e0" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xb74e69e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74e6bb8"/>
        <function-ref name="write" scoped="" ref="0xb74e6c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0xb74e65a0" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0xb74e65a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74e6778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0xb74edd98" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0xb74edd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb74ec010"/>
        <function-ref name="disable" scoped="" ref="0xb74ec0f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb74ec1d0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb74ec2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0xb74eb910" loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0xb74eb910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74ebb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb74f2b80" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb74f2b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb74f2d58"/>
        <function-ref name="stop" scoped="" ref="0xb74f2e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb74a44a8" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb74a44a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb74a4680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0xb74a60e0" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb74a60e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb74a62b8"/>
        <function-ref name="setNetwork" scoped="" ref="0xb74a6398"/>
        <function-ref name="getRssi" scoped="" ref="0xb74a6478"/>
        <function-ref name="getNetwork" scoped="" ref="0xb74a6558"/>
        <function-ref name="getPower" scoped="" ref="0xb74a6638"/>
        <function-ref name="getLqi" scoped="" ref="0xb74a6718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0xb74a4b00" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb74a4b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bb4f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb74a36b8"/>
        <function-ref name="clear" scoped="" ref="0xb74a3a68"/>
        <function-ref name="isValid" scoped="" ref="0xb74a3308"/>
        <function-ref name="set" scoped="" ref="0xb74a3e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0xb74a6f08" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb74a6f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb74a40f0"/>
        <function-ref name="getHeader" scoped="" ref="0xb74a41d0"/>
        <function-ref name="getMetadata" scoped="" ref="0xb74a42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb74a1cb0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb74a1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb74a1e88"/>
        <function-ref name="isSet" scoped="" ref="0xb749f010"/>
        <function-ref name="cancel" scoped="" ref="0xb749f0f0"/>
        <function-ref name="set" scoped="" ref="0xb749f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb74a2578" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb74a2578"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb74a1088"/>
        <function-ref name="clear" scoped="" ref="0xb74a1438"/>
        <function-ref name="isValid" scoped="" ref="0xb74a2cc8"/>
        <function-ref name="set" scoped="" ref="0xb74a17e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb74a6988" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb74a6988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb74a6b60"/>
        <function-ref name="noAck" scoped="" ref="0xb74a6c40"/>
        <function-ref name="wasAcked" scoped="" ref="0xb74a6d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb749b010" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb749b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb749b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0xb749fb20" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb749fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb749fcf8"/>
        <function-ref name="setNetwork" scoped="" ref="0xb749fdd8"/>
        <function-ref name="getRssi" scoped="" ref="0xb749feb8"/>
        <function-ref name="getNetwork" scoped="" ref="0xb749c010"/>
        <function-ref name="getPower" scoped="" ref="0xb749c0f0"/>
        <function-ref name="getLqi" scoped="" ref="0xb749c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb7497eb0" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7497eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb74960c0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb74961a0"/>
        <function-ref name="getPayload" scoped="" ref="0xb7496280"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7496360"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7496440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0xb749b668" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb749b668"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bb4f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb749a198"/>
        <function-ref name="clear" scoped="" ref="0xb749a548"/>
        <function-ref name="isValid" scoped="" ref="0xb749bdb8"/>
        <function-ref name="set" scoped="" ref="0xb749a8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0xb749c9c0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb749c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb749cb98"/>
        <function-ref name="getHeader" scoped="" ref="0xb749cc78"/>
        <function-ref name="getMetadata" scoped="" ref="0xb749cd58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb7497888" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb7497888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7497a60"/>
        <function-ref name="isSet" scoped="" ref="0xb7497b40"/>
        <function-ref name="cancel" scoped="" ref="0xb7497c20"/>
        <function-ref name="set" scoped="" ref="0xb7497d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0xb7493440" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0xb7493440"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bb4f08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7493a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0xb7493e98" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0xb7493e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb74954f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb7498100" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7498100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7498c00"/>
        <function-ref name="clear" scoped="" ref="0xb7497010"/>
        <function-ref name="isValid" scoped="" ref="0xb7498850"/>
        <function-ref name="set" scoped="" ref="0xb74973c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb749c440" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb749c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb749c618"/>
        <function-ref name="noAck" scoped="" ref="0xb749c6f8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb749c7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb7466940" loc="48:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb7466940"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bb4f08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7465010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb7465360" loc="49:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb7465360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4d40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bb4f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7465ab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb745e010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7465d28"/>
        <function-ref name="overflow" scoped="" ref="0xb745e288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb745db98" loc="46:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xb745db98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb74596a8"/>
        <function-ref name="fired" scoped="" ref="0xb745a938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb7459068"/>
        <function-ref name="isOneShot" scoped="" ref="0xb745ade8"/>
        <function-ref name="getdt" scoped="" ref="0xb7459b58"/>
        <function-ref name="gett0" scoped="" ref="0xb7459900"/>
        <function-ref name="isRunning" scoped="" ref="0xb745ab90"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb745a1e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb7459388"/>
        <function-ref name="startOneShot" scoped="" ref="0xb745a460"/>
        <function-ref name="stop" scoped="" ref="0xb745a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb7459eb8" loc="47:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb7459eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7457520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb745d3e8" loc="45:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb745d3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb745d5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0xb74527c0" loc="29:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0xb74527c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7452f10"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb7450418"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb74501a0"/>
        <function-ref name="overflow" scoped="" ref="0xb7450690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb74565a0" loc="27:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb74565a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7456778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0xb7456b68" loc="28:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0xb7456b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7452068"/>
        <function-ref name="fired" scoped="" ref="0xb7453820"/>
        <function-ref name="startAt" scoped="" ref="0xb7453d10"/>
        <function-ref name="isRunning" scoped="" ref="0xb7453a98"/>
        <function-ref name="getAlarm" scoped="" ref="0xb74522e0"/>
        <function-ref name="start" scoped="" ref="0xb7453308"/>
        <function-ref name="stop" scoped="" ref="0xb74535a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb7415448" loc="26:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb7415448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7413908"/>
        <function-ref name="fired" scoped="" ref="0xb74130d8"/>
        <function-ref name="startAt" scoped="" ref="0xb74135c8"/>
        <function-ref name="isRunning" scoped="" ref="0xb7413350"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7413b80"/>
        <function-ref name="start" scoped="" ref="0xb7415b98"/>
        <function-ref name="stop" scoped="" ref="0xb7415e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7415010" loc="25:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7415010"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb7c0c5d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb7c0c5d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb74151e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb7413eb0" loc="27:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb7413eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7412610"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb7412b00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7412888"/>
        <function-ref name="overflow" scoped="" ref="0xb7412d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0xb6f804e0" loc="31:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6f804e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0xb6f806b8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb6f80798"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb6f80878"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6f80958"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6f80a38"/>
        <function-ref name="setControl" scoped="" ref="0xb6f80b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb6f87638" loc="26:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6f87638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6f86af0"/>
        <function-ref name="fired" scoped="" ref="0xb6f862c0"/>
        <function-ref name="startAt" scoped="" ref="0xb6f867b0"/>
        <function-ref name="isRunning" scoped="" ref="0xb6f86538"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6f86d68"/>
        <function-ref name="start" scoped="" ref="0xb6f87d88"/>
        <function-ref name="stop" scoped="" ref="0xb6f86048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6f87200" loc="25:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6f87200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6f873d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6f840c0" loc="27:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6f840c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6f84810"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6f84d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6f84a88"/>
        <function-ref name="overflow" scoped="" ref="0xb6f83010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0xb6f7e730" loc="33:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb6f7e730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0xb6f7e908"/>
        <function-ref name="compareBusy" scoped="" ref="0xb6f7e9e8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0xb6f7eac8"/>
        <function-ref name="countBusy" scoped="" ref="0xb6f7eba8"/>
        <function-ref name="getAssr" scoped="" ref="0xb6f7ec88"/>
        <function-ref name="setAssr" scoped="" ref="0xb6f7ed68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0xb6f80d08" loc="32:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb6f80d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6f7e288"/>
        <function-ref name="fired" scoped="" ref="0xb6f7f888"/>
        <function-ref name="get" scoped="" ref="0xb6f7f370"/>
        <function-ref name="reset" scoped="" ref="0xb6f7fb00"/>
        <function-ref name="isOn" scoped="" ref="0xb6f7e500"/>
        <function-ref name="set" scoped="" ref="0xb6f7f5e8"/>
        <function-ref name="start" scoped="" ref="0xb6f7fd78"/>
        <function-ref name="stop" scoped="" ref="0xb6f7e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6f83300" loc="30:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6f83300"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6f82d68"/>
        <function-ref name="test" scoped="" ref="0xb6f82878"/>
        <function-ref name="get" scoped="" ref="0xb6f83948"/>
        <function-ref name="setScale" scoped="" ref="0xb6f80010"/>
        <function-ref name="getScale" scoped="" ref="0xb6f802b0"/>
        <function-ref name="reset" scoped="" ref="0xb6f82110"/>
        <function-ref name="overflow" scoped="" ref="0xb6f83e60"/>
        <function-ref name="isOn" scoped="" ref="0xb6f82af0"/>
        <function-ref name="set" scoped="" ref="0xb6f83bc0"/>
        <function-ref name="start" scoped="" ref="0xb6f82388"/>
        <function-ref name="stop" scoped="" ref="0xb6f82600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0xb73f7010" loc="74:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0xb73f7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb73f71e8"/>
        <function-ref name="runTask" scoped="" ref="0xb73f72c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb73f95b8" loc="49:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb73f95b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb73f8ab8"/>
        <function-ref name="fired" scoped="" ref="0xb73f8288"/>
        <function-ref name="startAt" scoped="" ref="0xb73f8778"/>
        <function-ref name="isRunning" scoped="" ref="0xb73f8500"/>
        <function-ref name="getAlarm" scoped="" ref="0xb73f8d30"/>
        <function-ref name="start" scoped="" ref="0xb73f9d08"/>
        <function-ref name="stop" scoped="" ref="0xb73f8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb7410270" loc="48:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb7410270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb73fad58"/>
        <function-ref name="fired" scoped="" ref="0xb73fa010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb73fa718"/>
        <function-ref name="isOneShot" scoped="" ref="0xb73fa4c0"/>
        <function-ref name="getdt" scoped="" ref="0xb73f9268"/>
        <function-ref name="gett0" scoped="" ref="0xb73f9010"/>
        <function-ref name="isRunning" scoped="" ref="0xb73fa268"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb7410898"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb73faa38"/>
        <function-ref name="startOneShot" scoped="" ref="0xb7410b18"/>
        <function-ref name="stop" scoped="" ref="0xb7410d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0xb73ca798" loc="71:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0xb73ca798"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb73ca970"/>
        <function-ref name="runTask" scoped="" ref="0xb73caa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0xb73cd5a0" loc="49:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0xb73cd5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb73ca098"/>
        <function-ref name="fired" scoped="" ref="0xb73cc330"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb73cca38"/>
        <function-ref name="isOneShot" scoped="" ref="0xb73cc7e0"/>
        <function-ref name="getdt" scoped="" ref="0xb73ca548"/>
        <function-ref name="gett0" scoped="" ref="0xb73ca2f0"/>
        <function-ref name="isRunning" scoped="" ref="0xb73cc588"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb73cdbc8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb73ccd58"/>
        <function-ref name="startOneShot" scoped="" ref="0xb73cde48"/>
        <function-ref name="stop" scoped="" ref="0xb73cc0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb73f4210" loc="48:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb73f4210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb73cfda8"/>
        <function-ref name="fired" scoped="" ref="0xb73cf010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb73cf748"/>
        <function-ref name="isOneShot" scoped="" ref="0xb73cf4e0"/>
        <function-ref name="getdt" scoped="" ref="0xb73cd2b0"/>
        <function-ref name="gett0" scoped="" ref="0xb73cd048"/>
        <function-ref name="isRunning" scoped="" ref="0xb73cf278"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb73f4848"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb73cfa78"/>
        <function-ref name="startOneShot" scoped="" ref="0xb73f4ad8"/>
        <function-ref name="stop" scoped="" ref="0xb73f4d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb73c9c60" loc="48:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb73c9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb73c82e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb73c8638" loc="49:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb73c8638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb73c8d88"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb73c7288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb73c7010"/>
        <function-ref name="overflow" scoped="" ref="0xb73c7500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb73c46e8" loc="45:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb73c46e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb73b9248"/>
        <function-ref name="fired" scoped="" ref="0xb73c34e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb73c3bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb73c3998"/>
        <function-ref name="getdt" scoped="" ref="0xb73b96f8"/>
        <function-ref name="gett0" scoped="" ref="0xb73b94a0"/>
        <function-ref name="isRunning" scoped="" ref="0xb73c3740"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb73c4d10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb73c3f10"/>
        <function-ref name="startOneShot" scoped="" ref="0xb73c3010"/>
        <function-ref name="stop" scoped="" ref="0xb73c3290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb73c08f0" loc="49:/opt/tinyos-main-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xb73c08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb73bb3f8"/>
        <function-ref name="fired" scoped="" ref="0xb73bd688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb73bdd90"/>
        <function-ref name="isOneShot" scoped="" ref="0xb73bdb38"/>
        <function-ref name="getdt" scoped="" ref="0xb73bb8a8"/>
        <function-ref name="gett0" scoped="" ref="0xb73bb650"/>
        <function-ref name="isRunning" scoped="" ref="0xb73bd8e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb73c0f18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb73bb0d8"/>
        <function-ref name="startOneShot" scoped="" ref="0xb73bd1b0"/>
        <function-ref name="stop" scoped="" ref="0xb73bd430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb73b1190" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0xb73b1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73b1468"/>
        <function-ref name="write" scoped="" ref="0xb73b1548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb73b7558" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0xb73b7558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73b7730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb73b37a0" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0xb73b37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73b3978"/>
        <function-ref name="write" scoped="" ref="0xb73b3a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb73b0010" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xb73b0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73b01e8"/>
        <function-ref name="write" scoped="" ref="0xb73b02c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb73b0448" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0xb73b0448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73b0620"/>
        <function-ref name="write" scoped="" ref="0xb73b0700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb73aa6e8" loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0xb73aa6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73aa8c0"/>
        <function-ref name="write" scoped="" ref="0xb73aa9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb73ab5c8" loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xb73ab5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73ab7a0"/>
        <function-ref name="write" scoped="" ref="0xb73ab880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb73b6010" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0xb73b6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73b61e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb73accb8" loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb73accb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73ace90"/>
        <function-ref name="write" scoped="" ref="0xb73ab010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb73b2030" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0xb73b2030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73b2208"/>
        <function-ref name="write" scoped="" ref="0xb73b22e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb73b28a0" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xb73b28a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73b2a78"/>
        <function-ref name="write" scoped="" ref="0xb73b2b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb73aee38" loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0xb73aee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73ad050"/>
        <function-ref name="write" scoped="" ref="0xb73ad130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb73b0880" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0xb73b0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73b0a58"/>
        <function-ref name="write" scoped="" ref="0xb73b0b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb74a7978" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xb74a7978"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb74a7b50"/>
        <function-ref name="abortRelease" scoped="" ref="0xb74a7c30"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb74a7d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb73b6d70" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0xb73b6d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73b4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb73b4190" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0xb73b4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73b43e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb73b4568" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0xb73b4568"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73b4740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb73ab190" loc="89:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb73ab190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73ab368"/>
        <function-ref name="write" scoped="" ref="0xb73ab448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb73b66c0" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0xb73b66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73b6898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb73b2468" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0xb73b2468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73b2640"/>
        <function-ref name="write" scoped="" ref="0xb73b2720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb73b3bd8" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xb73b3bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73b3db0"/>
        <function-ref name="write" scoped="" ref="0xb73b3e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb73b7200" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0xb73b7200"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73b73d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb73aa2b0" loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0xb73aa2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73aa488"/>
        <function-ref name="write" scoped="" ref="0xb73aa568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb73aba00" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xb73aba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73abbd8"/>
        <function-ref name="write" scoped="" ref="0xb73abcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb73ad2b0" loc="80:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0xb73ad2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73ad488"/>
        <function-ref name="write" scoped="" ref="0xb73ad568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb73ac880" loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0xb73ac880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73aca58"/>
        <function-ref name="write" scoped="" ref="0xb73acb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb73ae190" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0xb73ae190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73ae368"/>
        <function-ref name="write" scoped="" ref="0xb73ae448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb73aab20" loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0xb73aab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb73aaef8"/>
        <function-ref name="writeDone" scoped="" ref="0xb73a8010"/>
        <function-ref name="write" scoped="" ref="0xb73a80f0"/>
        <function-ref name="beginRead" scoped="" ref="0xb73a81d0"/>
        <function-ref name="readDone" scoped="" ref="0xb73a82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb74a7e90" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xb74a7e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73b7080"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb73b3368" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0xb73b3368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73b3540"/>
        <function-ref name="write" scoped="" ref="0xb73b3620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb73b2cd8" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0xb73b2cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73b2eb0"/>
        <function-ref name="write" scoped="" ref="0xb73b1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb73b0cb8" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0xb73b0cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73b0e90"/>
        <function-ref name="write" scoped="" ref="0xb73ae010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb73b16c8" loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0xb73b16c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73b18a0"/>
        <function-ref name="write" scoped="" ref="0xb73b1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb73b78b0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0xb73b78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73b7a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb73b1b00" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xb73b1b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73b1cd8"/>
        <function-ref name="write" scoped="" ref="0xb73b1db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb74a72c0" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb74a72c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb74a7498"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb74a7578"/>
        <function-ref name="request" scoped="" ref="0xb74a7658"/>
        <function-ref name="granted" scoped="" ref="0xb74a7738"/>
        <function-ref name="isOwner" scoped="" ref="0xb74a7818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb73b48c0" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0xb73b48c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73b4a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb73b3010" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0xb73b3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73b31e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb73ac448" loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0xb73ac448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73ac620"/>
        <function-ref name="write" scoped="" ref="0xb73ac700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb73ac010" loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0xb73ac010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73ac1e8"/>
        <function-ref name="write" scoped="" ref="0xb73ac2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb73b6a18" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0xb73b6a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73b6bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb73adb20" loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb73adb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73adcf8"/>
        <function-ref name="write" scoped="" ref="0xb73addd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb73abe38" loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0xb73abe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73aa050"/>
        <function-ref name="write" scoped="" ref="0xb73aa130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb73ad6e8" loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0xb73ad6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73ad8c0"/>
        <function-ref name="write" scoped="" ref="0xb73ad9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb73b7c08" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0xb73b7c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73b7de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb73aea00" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0xb73aea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73aebd8"/>
        <function-ref name="write" scoped="" ref="0xb73aecb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb73b6368" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0xb73b6368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73b6540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb73ae5c8" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0xb73ae5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73ae7a0"/>
        <function-ref name="write" scoped="" ref="0xb73ae880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb73b4c18" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0xb73b4c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73b4df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb73a8430" loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0xb73a8430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb73a8608"/>
        <function-ref name="writeDone" scoped="" ref="0xb73a86e8"/>
        <function-ref name="write" scoped="" ref="0xb73a87c8"/>
        <function-ref name="beginRead" scoped="" ref="0xb73a88a8"/>
        <function-ref name="readDone" scoped="" ref="0xb73a8988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb7392978" loc="46:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb7392978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb7392b50"/>
        <function-ref name="rand32" scoped="" ref="0xb7392c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb73920b8" loc="45:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xb73920b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb73926e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7396e30" loc="44:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7396e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7393050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb738e478" loc="48:/opt/tinyos-main-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb738e478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb738e650"/>
        <function-ref name="rand32" scoped="" ref="0xb738e730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb7391b18" loc="47:/opt/tinyos-main-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xb7391b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb738e1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb73915f8" loc="46:/opt/tinyos-main-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb73915f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb73917d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb7395608" loc="67:/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xb7395608"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb73957e0"/>
        <function-ref name="toIdle" scoped="" ref="0xb73958c0"/>
        <function-ref name="isState" scoped="" ref="0xb73959a0"/>
        <function-ref name="isIdle" scoped="" ref="0xb7395a80"/>
        <function-ref name="requestState" scoped="" ref="0xb7395b60"/>
        <function-ref name="forceState" scoped="" ref="0xb7395c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb7386b00" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb7386b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7386cd8"/>
        <function-ref name="getPayload" scoped="" ref="0xb7386db8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7386e98"/>
        <function-ref name="cancel" scoped="" ref="0xb7382010"/>
        <function-ref name="sendDone" scoped="" ref="0xb73820f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb7386390" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7386390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7386568"/>
        <function-ref name="getPayload" scoped="" ref="0xb7386648"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7386728"/>
        <function-ref name="cancel" scoped="" ref="0xb7386808"/>
        <function-ref name="sendDone" scoped="" ref="0xb73868e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb737f570" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb737f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb737f748"/>
        <function-ref name="getPayload" scoped="" ref="0xb737f828"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb737f908"/>
        <function-ref name="cancel" scoped="" ref="0xb737f9e8"/>
        <function-ref name="sendDone" scoped="" ref="0xb737fac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb7382a20" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7382a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7382bf8"/>
        <function-ref name="getPayload" scoped="" ref="0xb7382cd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7382db8"/>
        <function-ref name="cancel" scoped="" ref="0xb7382e98"/>
        <function-ref name="sendDone" scoped="" ref="0xb737f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb737e430" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb737e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb737e608"/>
        <function-ref name="rand32" scoped="" ref="0xb737e6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb737f180" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb737f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb737f358"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb737e8d0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb737e8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb737eaa8"/>
        <function-ref name="getHeader" scoped="" ref="0xb737eb88"/>
        <function-ref name="getMetadata" scoped="" ref="0xb737ec68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0xb737fc40" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xb737fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb737fe18"/>
        <function-ref name="toIdle" scoped="" ref="0xb737fef8"/>
        <function-ref name="isState" scoped="" ref="0xb737e010"/>
        <function-ref name="isIdle" scoped="" ref="0xb737e0f0"/>
        <function-ref name="requestState" scoped="" ref="0xb737e1d0"/>
        <function-ref name="forceState" scoped="" ref="0xb737e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb7381ab8" loc="67:/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xb7381ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb7381c90"/>
        <function-ref name="toIdle" scoped="" ref="0xb7381d70"/>
        <function-ref name="isState" scoped="" ref="0xb7381e50"/>
        <function-ref name="isIdle" scoped="" ref="0xb7380010"/>
        <function-ref name="requestState" scoped="" ref="0xb73800f0"/>
        <function-ref name="forceState" scoped="" ref="0xb73801d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7372b28" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7372b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7372d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb73722d8" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb73722d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb73724b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0xb7372700" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0xb7372700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb73728d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb736e358" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb736e358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb736e530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7371f10" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7371f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb736e108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb73717a0" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb73717a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7371978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb736e718" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb736e718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb736e8f0"/>
        <function-ref name="getHeader" scoped="" ref="0xb736e9d0"/>
        <function-ref name="getMetadata" scoped="" ref="0xb736eab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0xb7371bc8" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0xb7371bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7371da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb73547b8" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb73547b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7354990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb7354b68" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb7354b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7354d40"/>
        <function-ref name="getPayload" scoped="" ref="0xb7354e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7354f00"/>
        <function-ref name="cancel" scoped="" ref="0xb7353010"/>
        <function-ref name="sendDone" scoped="" ref="0xb73530f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb73569d0" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb73569d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7356ba8"/>
        <function-ref name="getPayload" scoped="" ref="0xb7356c88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7356d68"/>
        <function-ref name="cancel" scoped="" ref="0xb7356e48"/>
        <function-ref name="sendDone" scoped="" ref="0xb7356f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0xb7355490" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0xb7355490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7355668"/>
        <function-ref name="getPayload" scoped="" ref="0xb7355748"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7355828"/>
        <function-ref name="cancel" scoped="" ref="0xb7355908"/>
        <function-ref name="sendDone" scoped="" ref="0xb73559e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb73550c0" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb73550c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7355298"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb7356308" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb7356308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb73564e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb73565c0"/>
        <function-ref name="request" scoped="" ref="0xb73566a0"/>
        <function-ref name="granted" scoped="" ref="0xb7356780"/>
        <function-ref name="isOwner" scoped="" ref="0xb7356860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0xb7355c18" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0xb7355c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7355df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0xb7354010" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0xb7354010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb73541e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb73542c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb73543a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7354488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7354568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb734ecb0" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb734ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb734ee88"/>
        <function-ref name="getPayload" scoped="" ref="0xb734c010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb734c0f0"/>
        <function-ref name="cancel" scoped="" ref="0xb734c1d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb734c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb734c4c0" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb734c4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb734c698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0xb7332250" loc="180:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0xb7332250"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7332428"/>
        <function-ref name="runTask" scoped="" ref="0xb7332508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb734c858" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb734c858"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb734ca30"/>
        <function-ref name="setNetwork" scoped="" ref="0xb734cb10"/>
        <function-ref name="getRssi" scoped="" ref="0xb734cbf0"/>
        <function-ref name="getNetwork" scoped="" ref="0xb734ccd0"/>
        <function-ref name="getPower" scoped="" ref="0xb734cdb0"/>
        <function-ref name="getLqi" scoped="" ref="0xb734ce90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0xb734f9b8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0xb734f9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb734fb90"/>
        <function-ref name="getPayload" scoped="" ref="0xb734fc70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb734fd50"/>
        <function-ref name="cancel" scoped="" ref="0xb734fe30"/>
        <function-ref name="sendDone" scoped="" ref="0xb734ff10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb734b6c0" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb734b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb734b898"/>
        <function-ref name="isEmpty" scoped="" ref="0xb734b978"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb734ba58"/>
        <function-ref name="dequeue" scoped="" ref="0xb734bb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb734b108" loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb734b108"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb734b2e0"/>
        <function-ref name="getHeader" scoped="" ref="0xb734b3c0"/>
        <function-ref name="getMetadata" scoped="" ref="0xb734b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0xb734f5e8" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0xb734f5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb734f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb7350718" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb7350718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb73508f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb73509d0"/>
        <function-ref name="request" scoped="" ref="0xb7350ab0"/>
        <function-ref name="granted" scoped="" ref="0xb7350b90"/>
        <function-ref name="isOwner" scoped="" ref="0xb7350c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb7350e58" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0xb7350e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb734f050"/>
        <function-ref name="getPayload" scoped="" ref="0xb734f130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb734f210"/>
        <function-ref name="cancel" scoped="" ref="0xb734f2f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb734f3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0xb734e160" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0xb734e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb734e338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0xb734e540" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0xb734e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb734e718"/>
        <function-ref name="payloadLength" scoped="" ref="0xb734e7f8"/>
        <function-ref name="getPayload" scoped="" ref="0xb734e8d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb734e9b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb734ea98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb73519f0" loc="44:/opt/tinyos-main-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb73519f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7351bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb7351d28" loc="45:/opt/tinyos-main-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xb7351d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb7351f00"/>
        <function-ref name="isEmpty" scoped="" ref="0xb7320010"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb73200f0"/>
        <function-ref name="dequeue" scoped="" ref="0xb73201d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7319570" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7319570"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7319748"/>
        <function-ref name="stopDone" scoped="" ref="0xb7319828"/>
        <function-ref name="start" scoped="" ref="0xb7319908"/>
        <function-ref name="stop" scoped="" ref="0xb73199e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb73184c8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb73184c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb73186a0"/>
        <function-ref name="getPayload" scoped="" ref="0xb7318780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7318860"/>
        <function-ref name="cancel" scoped="" ref="0xb7318940"/>
        <function-ref name="sendDone" scoped="" ref="0xb7318a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7318c30" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7318c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7318e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb731d478" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb731d478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb731d650"/>
        <function-ref name="getPayload" scoped="" ref="0xb731d730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb731d810"/>
        <function-ref name="cancel" scoped="" ref="0xb731d8f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb731d9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb731df20" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb731df20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb7319110"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb73191f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb73192d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb73193b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0xb7319be0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0xb7319be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb7319db8"/>
        <function-ref name="toIdle" scoped="" ref="0xb7319e98"/>
        <function-ref name="isState" scoped="" ref="0xb7318010"/>
        <function-ref name="isIdle" scoped="" ref="0xb73180f0"/>
        <function-ref name="requestState" scoped="" ref="0xb73181d0"/>
        <function-ref name="forceState" scoped="" ref="0xb73182b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb7317098" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb7317098"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7317270"/>
        <function-ref name="stopDone" scoped="" ref="0xb7317350"/>
        <function-ref name="start" scoped="" ref="0xb7317430"/>
        <function-ref name="stop" scoped="" ref="0xb7317510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb731db58" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb731db58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb731dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb7317cb8" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb7317cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb7317e90"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb7314010"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb73140f0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb73141d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb730fd20" loc="67:/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xb730fd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb730fef8"/>
        <function-ref name="toIdle" scoped="" ref="0xb7316010"/>
        <function-ref name="isState" scoped="" ref="0xb73160f0"/>
        <function-ref name="isIdle" scoped="" ref="0xb73161d0"/>
        <function-ref name="requestState" scoped="" ref="0xb73162b0"/>
        <function-ref name="forceState" scoped="" ref="0xb7316390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb730d5e8" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb730d5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb730d7c0"/>
        <function-ref name="getPayload" scoped="" ref="0xb730d8a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb730d980"/>
        <function-ref name="cancel" scoped="" ref="0xb730da60"/>
        <function-ref name="sendDone" scoped="" ref="0xb730db40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb731c748" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb731c748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb731c920"/>
        <function-ref name="getPayload" scoped="" ref="0xb731ca00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb731cae0"/>
        <function-ref name="cancel" scoped="" ref="0xb731cbc0"/>
        <function-ref name="sendDone" scoped="" ref="0xb731cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb731ce48" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb731ce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb730d050"/>
        <function-ref name="setRetries" scoped="" ref="0xb730d130"/>
        <function-ref name="getRetries" scoped="" ref="0xb730d210"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb730d2f0"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb730d3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0xb730ca60" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb730ca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb730cc38"/>
        <function-ref name="noAck" scoped="" ref="0xb730cd18"/>
        <function-ref name="wasAcked" scoped="" ref="0xb730cdf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb730c2a8" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb730c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb730c480"/>
        <function-ref name="setRetries" scoped="" ref="0xb730c560"/>
        <function-ref name="getRetries" scoped="" ref="0xb730c640"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb730c720"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb730c800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb72f9220" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb72f9220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb72f93f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb72fba88" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb72fba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb72fbc60"/>
        <function-ref name="getPayload" scoped="" ref="0xb72fbd40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72fbe20"/>
        <function-ref name="cancel" scoped="" ref="0xb72fbf00"/>
        <function-ref name="sendDone" scoped="" ref="0xb72f9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0xb72f8390" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0xb72f8390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xb72f8568"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xb72f8648"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xb72f8728"/>
        <function-ref name="syncDone" scoped="" ref="0xb72f8808"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xb72f88e8"/>
        <function-ref name="setShortAddr" scoped="" ref="0xb72f89c8"/>
        <function-ref name="setChannel" scoped="" ref="0xb72f8aa8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xb72f8b88"/>
        <function-ref name="setPanAddr" scoped="" ref="0xb72f8c68"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xb72f8d48"/>
        <function-ref name="getExtAddr" scoped="" ref="0xb72f8e28"/>
        <function-ref name="getShortAddr" scoped="" ref="0xb72f8f08"/>
        <function-ref name="sync" scoped="" ref="0xb72f7010"/>
        <function-ref name="getChannel" scoped="" ref="0xb72f7170"/>
        <function-ref name="getPanAddr" scoped="" ref="0xb72f7250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb72fb238" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0xb72fb238"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a48e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb72fb410"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb72fb4f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb72fb5d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb72fb6b0"/>
        <function-ref name="setCca" scoped="" ref="0xb72fb790"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb72fb870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb72fcb88" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb72fcb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a48e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb72fcd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0xb72f7ba0" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0xb72f7ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb72f7d78"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb72f7e58"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb72f6010"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb72f60f0"/>
        <function-ref name="setCca" scoped="" ref="0xb72f61d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb72f62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb72fc190" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb72fc190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb72fc368"/>
        <function-ref name="payloadLength" scoped="" ref="0xb72fc448"/>
        <function-ref name="getPayload" scoped="" ref="0xb72fc528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72fc608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb72fc6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb72fe100" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb72fe100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a48e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb72fe2d8"/>
        <function-ref name="getPayload" scoped="" ref="0xb72fe3b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72fe498"/>
        <function-ref name="cancel" scoped="" ref="0xb72fe578"/>
        <function-ref name="sendDone" scoped="" ref="0xb72fe658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb72fd178" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb72fd178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a48e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb72fd350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb72f95b8" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb72f95b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb72f9790"/>
        <function-ref name="setNetwork" scoped="" ref="0xb72f9870"/>
        <function-ref name="getRssi" scoped="" ref="0xb72f9950"/>
        <function-ref name="getNetwork" scoped="" ref="0xb72f9a30"/>
        <function-ref name="getPower" scoped="" ref="0xb72f9b10"/>
        <function-ref name="getLqi" scoped="" ref="0xb72f9bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xb72f7460" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb72f7460"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb72f76b8"/>
        <function-ref name="changed" scoped="" ref="0xb72f7798"/>
        <function-ref name="amGroup" scoped="" ref="0xb72f7878"/>
        <function-ref name="setAddress" scoped="" ref="0xb72f7958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb72f9dd8" loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb72f9dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb72f8010"/>
        <function-ref name="getHeader" scoped="" ref="0xb72f80f0"/>
        <function-ref name="getMetadata" scoped="" ref="0xb72f81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb72feac0" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb72feac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a48e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb72fec98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb72f6bb8" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb72f6bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb72f6d90"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb72f6e70"/>
        <function-ref name="led1On" scoped="" ref="0xb72f5010"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb72f50f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb72f51d0"/>
        <function-ref name="get" scoped="" ref="0xb72f52b0"/>
        <function-ref name="led1Off" scoped="" ref="0xb72f5390"/>
        <function-ref name="led2Off" scoped="" ref="0xb72f5710"/>
        <function-ref name="set" scoped="" ref="0xb72f5470"/>
        <function-ref name="led0On" scoped="" ref="0xb72f5550"/>
        <function-ref name="led2On" scoped="" ref="0xb72f5630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb72fd4e8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb72fd4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb72fd6c0"/>
        <function-ref name="source" scoped="" ref="0xb72fd7a0"/>
        <function-ref name="address" scoped="" ref="0xb72fd880"/>
        <function-ref name="destination" scoped="" ref="0xb72fd960"/>
        <function-ref name="setSource" scoped="" ref="0xb72fda40"/>
        <function-ref name="setDestination" scoped="" ref="0xb72fdb20"/>
        <function-ref name="type" scoped="" ref="0xb72fdc00"/>
        <function-ref name="setType" scoped="" ref="0xb72fdce0"/>
        <function-ref name="isForMe" scoped="" ref="0xb72fddc0"/>
        <function-ref name="setGroup" scoped="" ref="0xb72fdea0"/>
        <function-ref name="localGroup" scoped="" ref="0xb72fc010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0xb72f64f0" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0xb72f64f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb72f66c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb72f67a8"/>
        <function-ref name="request" scoped="" ref="0xb72f6888"/>
        <function-ref name="granted" scoped="" ref="0xb72f6968"/>
        <function-ref name="isOwner" scoped="" ref="0xb72f6a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb72a86a0" loc="49:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="AppCh4C.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb72a86a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb72a8878"/>
        <function-ref name="getPayload" scoped="" ref="0xb72a8958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72a8a38"/>
        <function-ref name="cancel" scoped="" ref="0xb72a8b18"/>
        <function-ref name="sendDone" scoped="" ref="0xb72a8bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb72a8d38" loc="50:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="AppCh4C.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb72a8d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb72a8f10"/>
        <function-ref name="payloadLength" scoped="" ref="0xb725e010"/>
        <function-ref name="getPayload" scoped="" ref="0xb725e0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb725e1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb725e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb725e3f0" loc="51:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="AppCh4C.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb725e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb725e5c8"/>
        <function-ref name="source" scoped="" ref="0xb725e6a8"/>
        <function-ref name="address" scoped="" ref="0xb725e788"/>
        <function-ref name="destination" scoped="" ref="0xb725e868"/>
        <function-ref name="setSource" scoped="" ref="0xb725e948"/>
        <function-ref name="setDestination" scoped="" ref="0xb725ea28"/>
        <function-ref name="type" scoped="" ref="0xb725eb08"/>
        <function-ref name="setType" scoped="" ref="0xb725ebe8"/>
        <function-ref name="isForMe" scoped="" ref="0xb725ecc8"/>
        <function-ref name="setGroup" scoped="" ref="0xb725eda8"/>
        <function-ref name="localGroup" scoped="" ref="0xb725ee88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb725d010" loc="52:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="AppCh4C.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb725d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb725d1e8"/>
        <function-ref name="noAck" scoped="" ref="0xb725d2c8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb725d3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6f2acf0" loc="49:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="AppCh4C.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6f2acf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f2aec8"/>
        <function-ref name="getPayload" scoped="" ref="0xb6f26010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6f260f0"/>
        <function-ref name="cancel" scoped="" ref="0xb6f261d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f262b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6f263f0" loc="50:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="AppCh4C.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6f263f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6f265c8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6f266a8"/>
        <function-ref name="getPayload" scoped="" ref="0xb6f26788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6f26868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6f26948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6f26a88" loc="51:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="AppCh4C.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6f26a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6f26c60"/>
        <function-ref name="source" scoped="" ref="0xb6f26d40"/>
        <function-ref name="address" scoped="" ref="0xb6f26e20"/>
        <function-ref name="destination" scoped="" ref="0xb6f26f00"/>
        <function-ref name="setSource" scoped="" ref="0xb6f25010"/>
        <function-ref name="setDestination" scoped="" ref="0xb6f250f0"/>
        <function-ref name="type" scoped="" ref="0xb6f251d0"/>
        <function-ref name="setType" scoped="" ref="0xb6f252b0"/>
        <function-ref name="isForMe" scoped="" ref="0xb6f25390"/>
        <function-ref name="setGroup" scoped="" ref="0xb6f25470"/>
        <function-ref name="localGroup" scoped="" ref="0xb6f25550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb6f256b0" loc="52:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="AppCh4C.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb6f256b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6f25888"/>
        <function-ref name="noAck" scoped="" ref="0xb6f25968"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6f25a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6f20670" loc="44:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="AppCh4C.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6f20670"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f20848"/>
        <function-ref name="getPayload" scoped="" ref="0xb6f20928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6f20a08"/>
        <function-ref name="cancel" scoped="" ref="0xb6f20ae8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f20bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xb6f20d38" loc="46:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="AppCh4C.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6f20d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f20f10"/>
        <function-ref name="getPayload" scoped="" ref="0xb6f1f010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6f1f0f0"/>
        <function-ref name="cancel" scoped="" ref="0xb6f1f1d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f1f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb6f1f3f0" loc="47:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="AppCh4C.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6f1f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6f1f5c8"/>
        <function-ref name="source" scoped="" ref="0xb6f1f6a8"/>
        <function-ref name="address" scoped="" ref="0xb6f1f788"/>
        <function-ref name="destination" scoped="" ref="0xb6f1f868"/>
        <function-ref name="setSource" scoped="" ref="0xb6f1f948"/>
        <function-ref name="setDestination" scoped="" ref="0xb6f1fa28"/>
        <function-ref name="type" scoped="" ref="0xb6f1fb08"/>
        <function-ref name="setType" scoped="" ref="0xb6f1fbe8"/>
        <function-ref name="isForMe" scoped="" ref="0xb6f1fcc8"/>
        <function-ref name="setGroup" scoped="" ref="0xb6f1fda8"/>
        <function-ref name="localGroup" scoped="" ref="0xb6f1fe88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb7294688" loc="43:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7294688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7294860"/>
        <function-ref name="getPayload" scoped="" ref="0xb7294940"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7294a20"/>
        <function-ref name="cancel" scoped="" ref="0xb7294b00"/>
        <function-ref name="sendDone" scoped="" ref="0xb7294be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb728eca8" loc="48:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb728eca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a48e40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb728ee90"/>
        <function-ref name="getPayload" scoped="" ref="0xb7267010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72670f0"/>
        <function-ref name="cancel" scoped="" ref="0xb72671d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb72672b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb728e538" loc="46:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb728e538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb728e720"/>
        <function-ref name="getPayload" scoped="" ref="0xb728e800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb728e8e0"/>
        <function-ref name="cancel" scoped="" ref="0xb728e9c0"/>
        <function-ref name="sendDone" scoped="" ref="0xb728eaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb7266010" loc="50:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7266010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb72661e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb72662c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb72663a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7266488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7266568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0xb72666e8" loc="169:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0xb72666e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb72668c0"/>
        <function-ref name="runTask" scoped="" ref="0xb72669a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0xb7266b20" loc="126:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0xb7266b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7266cf8"/>
        <function-ref name="runTask" scoped="" ref="0xb7266dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb72673f0" loc="49:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb72673f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb72675c8"/>
        <function-ref name="source" scoped="" ref="0xb72676a8"/>
        <function-ref name="address" scoped="" ref="0xb7267788"/>
        <function-ref name="destination" scoped="" ref="0xb7267868"/>
        <function-ref name="setSource" scoped="" ref="0xb7267948"/>
        <function-ref name="setDestination" scoped="" ref="0xb7267a28"/>
        <function-ref name="type" scoped="" ref="0xb7267b08"/>
        <function-ref name="setType" scoped="" ref="0xb7267be8"/>
        <function-ref name="isForMe" scoped="" ref="0xb7267cc8"/>
        <function-ref name="setGroup" scoped="" ref="0xb7267da8"/>
        <function-ref name="localGroup" scoped="" ref="0xb7267e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb725bd60" loc="46:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="AppCh4C.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb725bd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb725a010"/>
        <function-ref name="payloadLength" scoped="" ref="0xb725a0f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb725a1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb725a2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb725a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb725ba48" loc="45:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="AppCh4C.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb725ba48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb725bc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb725a4d0" loc="47:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="AppCh4C.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb725a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb725a6a8"/>
        <function-ref name="source" scoped="" ref="0xb725a788"/>
        <function-ref name="address" scoped="" ref="0xb725a868"/>
        <function-ref name="destination" scoped="" ref="0xb725a948"/>
        <function-ref name="setSource" scoped="" ref="0xb725aa28"/>
        <function-ref name="setDestination" scoped="" ref="0xb725ab08"/>
        <function-ref name="type" scoped="" ref="0xb725abe8"/>
        <function-ref name="setType" scoped="" ref="0xb725acc8"/>
        <function-ref name="isForMe" scoped="" ref="0xb725ada8"/>
        <function-ref name="setGroup" scoped="" ref="0xb725ae88"/>
        <function-ref name="localGroup" scoped="" ref="0xb7257010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb7257e48" loc="45:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="AppCh4C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb7257e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7254988"/>
        <function-ref name="fired" scoped="" ref="0xb7256c10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb7254348"/>
        <function-ref name="isOneShot" scoped="" ref="0xb72540f0"/>
        <function-ref name="getdt" scoped="" ref="0xb7254e38"/>
        <function-ref name="gett0" scoped="" ref="0xb7254be0"/>
        <function-ref name="isRunning" scoped="" ref="0xb7256e68"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb72564b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb7254668"/>
        <function-ref name="startOneShot" scoped="" ref="0xb7256738"/>
        <function-ref name="stop" scoped="" ref="0xb72569b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0xb7252c08" loc="10:FakeSensorC.nc">
      <component-ref qname="AppCh4C.FakeSensorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0xb7252c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7251258"/>
        <function-ref name="readDone" scoped="" ref="0xb72514b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0xb6ef33b0" loc="13:FakeSensorP.nc">
      <component-ref qname="AppCh4C.FakeSensorC.FakeSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0xb6ef33b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6ef2e98"/>
        <function-ref name="fired" scoped="" ref="0xb6ef2150"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6ef2858"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6ef2600"/>
        <function-ref name="getdt" scoped="" ref="0xb6ef0368"/>
        <function-ref name="gett0" scoped="" ref="0xb6ef0110"/>
        <function-ref name="isRunning" scoped="" ref="0xb6ef23a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6ef39d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6ef2b78"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6ef3c58"/>
        <function-ref name="stop" scoped="" ref="0xb6ef3ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0xb6ef4350" loc="10:FakeSensorP.nc">
      <component-ref qname="AppCh4C.FakeSensorC.FakeSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0xb6ef4350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb6ef4978"/>
        <function-ref name="readDone" scoped="" ref="0xb6ef4bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb6ef4ec8" loc="12:FakeSensorP.nc">
      <component-ref qname="AppCh4C.FakeSensorC.FakeSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb6ef4ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb6ef30c0"/>
        <function-ref name="rand32" scoped="" ref="0xb6ef31a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6eef0f0" loc="45:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="AppCh4C.FakeSensorC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6eef0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bb4900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bb4ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6eeebe0"/>
        <function-ref name="fired" scoped="" ref="0xb6eefe70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6eee5a0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6eee348"/>
        <function-ref name="getdt" scoped="" ref="0xb6eed0b8"/>
        <function-ref name="gett0" scoped="" ref="0xb6eeee38"/>
        <function-ref name="isRunning" scoped="" ref="0xb6eee0f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6eef718"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6eee8c0"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6eef998"/>
        <function-ref name="stop" scoped="" ref="0xb6eefc18"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-main-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb7b67b80" loc="62:/opt/tinyos-main-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-main-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0xb7b67010" loc="60:/opt/tinyos-main-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-main-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0xb7b61710" loc="60:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0xb7b615b8" loc="60:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0xb7b65cf8" loc="31:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0xb7b62348" loc="39:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb7b621f0" loc="39:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0xb7b62a10" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb7b628b8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0xb7b61010" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0xb7b54b50" loc="44:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0xb7b53010" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0xb7b543c0" loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0xb7b537e0" loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb7b54780" loc="43:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0xb7b533e8" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb7b57c48" loc="40:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0xb7b54010" loc="41:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb7c09390" loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0xb7c09c98" loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0xb7c097d0" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0xb7c04b68" loc="67:/opt/tinyos-main-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0xb7c03090" loc="75:/opt/tinyos-main-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-main-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-main-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0xb7b8d7e8" loc="76:/opt/tinyos-main-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-main-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-main-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-main-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0xb7b7abb8" loc="62:/opt/tinyos-main-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0xb7bc8340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0xb7b7de70" loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0xb7a2c850" loc="113:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7a2c6f8" loc="113:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0xb7a2a730" loc="138:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7a2a5d8" loc="138:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb7a2c010" loc="104:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7a2cd60" loc="130:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0xb7a3d9a8" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a3d850" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xb7a3c398" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a3c240" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb7a39370" loc="126:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a39010" loc="126:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7a391f0" loc="126:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb7a3a9a8" loc="106:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xb7a3a010" loc="94:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a3ccb8" loc="94:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7a3ce98" loc="94:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb7a37098" loc="80:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7a47330"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb7a6eb18" loc="80:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7a47330"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb7a6ed30" loc="80:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7a6ef10" loc="80:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb7a33dd0" loc="135:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a33a70" loc="135:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7a33c50" loc="135:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb7a33510" loc="123:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb7a37d38" loc="96:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a37be0" loc="96:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb7a35bf8" loc="110:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a358a0" loc="110:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb7a35a98" loc="110:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0xb7a22ef0" loc="49:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb7a22ef0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0xb7a193b8" loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0xb7a19b68" loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb7a22ef0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb7a19838" loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0xb7a19a08" loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb7a22ef0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-main-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0xb7a6da48" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-main-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
              <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a6d500" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0xb7a6d6e0" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7a6d8c0" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7a385a0" loc="53:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7a385a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb7a25f00" loc="136:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb7a28b48" loc="83:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0xb7a26cc0" loc="114:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb7a26978" loc="114:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb7a26b60" loc="114:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0xb7a264d0" loc="98:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0xb7a24888" loc="151:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0xb7a24358" loc="144:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb7a26010" loc="92:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0xb7a38bf8" loc="64:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb7a38aa0" loc="64:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0xb7a258e0" loc="129:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb7a25598" loc="129:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb7a25780" loc="129:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0xb7a282b0" loc="73:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb7a28158" loc="73:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7a28780" loc="78:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0xb7a1e010" loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0xb7a1e458" loc="67:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0xb7a1e8d8" loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0xb7a1d158" loc="83:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0xb7a1de48" loc="100:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb7a1c318" loc="117:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0xb7a1ed00" loc="77:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb7a1ca58" loc="134:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0xb7a1c900" loc="134:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0xb7a1fba0" loc="56:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0xb7a1d5d8" loc="89:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0xb7a1da00" loc="94:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0xb7a305a8" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a30450" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0xb7a2e168" loc="71:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a2e010" loc="71:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0xb7a2ebf0" loc="85:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a2ea98" loc="85:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0xb79e6d30" loc="35:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb79e6d30"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb79e6e98" loc="35:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79e6e98"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0xb79d8168" loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79e6e98"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79d8010" loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0xb79d8c00" loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79d8aa8" loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0xb79d9570" loc="49:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79d9418" loc="49:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb79d66e8" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79e6e98"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79d6378" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb79d6588" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79e6e98"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0xb79d06e0" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79d0348" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0xb79d0580" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0xb79cf1c0" loc="71:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79cf068" loc="71:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0xb79d3e50" loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0xb79d37d0" loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0xb79d3678" loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0xb79dd088" loc="177:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7a470d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb79dff08" loc="177:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xb79e48f0" loc="88:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7a47330"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb79e4798" loc="88:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xb79e77d0" loc="68:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7a47330"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xb79e7e68" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7a47330"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb79e7d10" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb79e1218" loc="121:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7a47330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb79e3e80" loc="121:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb79e10b8" loc="121:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7a47330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb79e3500" loc="103:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7a47330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb79e3198" loc="103:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb79e33a0" loc="103:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7a47330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0xb79e0a28" loc="147:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7a48e40"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb79e08d0" loc="147:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xb79df580" loc="162:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7a48e40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb79df250" loc="162:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0xb79df420" loc="162:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7a48e40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb79e1db8" loc="136:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb79e1c60" loc="136:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xb79ddd08" loc="187:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7a470d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb79dd9a8" loc="187:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb79ddba8" loc="187:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7a470d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0xb79db5a0" loc="195:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7a470d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0xb79b5838" loc="95:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79b56e0" loc="95:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0xb79b66c8" loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79b6570" loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0xb79b8848" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0xb79b86f0" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0xb79b8168" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0xb79b8010" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0xb79b8e40" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0xb79b8ce8" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0xb79b5010" loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79b6e20" loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-main-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0xb79ad248" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7a47330"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0xb79baea8" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7a47330"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb79ad0e8" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0xb79bd368" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb79bd010" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0xb79bd208" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0xb79bb3b0" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb79bb030" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0xb79bb250" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0xb79bd9f0" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0xb7f56630"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb79bd898" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0xb79bca08" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb79bc8b0" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0xb79c1b10" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb79c19b8" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0xb79bc168" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb79bc010" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0xb79b0188" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79b0030" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0xb79b2590" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79b21f8" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0xb79b2430" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0xb79b1808" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79b16b0" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0xb79b1190" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79b2dd0" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0xb79b1030" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0xb79b0aa8" loc="71:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79b0950" loc="71:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-main-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0xb79c0bf0" loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-main-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79c0a98" loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb79aa9f0" loc="75:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79aa6b0" loc="75:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb79aa890" loc="75:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb79a1558" loc="125:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79a11f8" loc="125:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb79a13d8" loc="125:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb79a4c88" loc="112:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb79a3650" loc="89:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79a34f8" loc="89:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb79a4368" loc="100:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb79a4010" loc="100:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb79a4208" loc="100:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0xb79a8a58" loc="120:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0xb79a8138" loc="97:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0xb79abae8" loc="88:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0xb79a85e8" loc="102:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0xb79a6168" loc="128:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb798d710" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb798d3c8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0xb798d5b0" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb798b250" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0xb798a960" loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0xb798a170" loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0xb798a618" loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb798a7f8" loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb798bc58" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb798b900" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb798baf8" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0xb798dd60" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0xb798dc08" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-main-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0xb7988698" loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-main-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0xb79881f0" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-main-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xb7993e00" loc="95:/opt/tinyos-main-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-main-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb798e2e8" loc="105:/opt/tinyos-main-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-main-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0xb79844a8" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7984330" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0xb7989e48" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0xb7a6c7f8"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0xb7a6b7e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7989cb0" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0xb7983010" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0xb7a6bea8"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0xb7a6ae08"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7984dd8" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0xb7991740" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0xb7990a10" loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0xb79905a8" loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0xb79948c8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0xb7991268" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0xb7991c58" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0xb7990138" loc="83:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0xb7994dd0" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0xb79807a8" loc="71:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0xb7982948" loc="56:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0xb7980340" loc="66:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0xb79801e8" loc="66:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0xb7982d60" loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0xb7983e28" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0xb7983cd0" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0xb79824c0" loc="51:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0xb7982368" loc="51:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0xb794dd90" loc="106:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0xb794da28" loc="106:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0xb794dc30" loc="106:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0xb794d090" loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0xb794ea88" loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0xb794e698" loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0xb794e928" loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0xb7954f20" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7954dc8" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0xb794d5a8" loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0xb794f7a0" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0xb794f648" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0xb79518d0" loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xb7951778" loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0xb794b950" loc="117:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0xb794e188" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0xb794e030" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0xb794b488" loc="112:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0xb7951d18" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0xb79d2520"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0xb79d29b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0xb794f1c8" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0xb7954918" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0xb7951348" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0xb794fbe0" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0xb7931818" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb7a6f520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb79316c0" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb7931eb0" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb7a6f520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7931d58" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/opt/tinyos-main-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/opt/tinyos-main-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0xb7942438" loc="48:/opt/tinyos-main-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/opt/tinyos-main-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0xb79d2520"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0xb79d29b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7941010" loc="56:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7941010"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb7941178" loc="56:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7941178"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb793e548" loc="109:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7941178"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb793f138" loc="78:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0xb793fe00" loc="103:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7941178"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7941178"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb793fab0" loc="103:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7941178"/></type-var>
          </variable>
          <variable name="dt" ref="0xb793fca0" loc="103:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7941178"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb793f5a8" loc="88:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0xb793e9d8" loc="116:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7941178"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb79417a8" loc="66:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7941178"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb7941650" loc="66:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7941178"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7941c88" loc="73:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0xb79363f0" loc="50:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7a47330"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0xb7936c60" loc="60:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0xb7936860" loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7a470d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0xb793ae80" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7a470d0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7a47330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0xb793ab18" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7a470d0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0xb793ad20" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7a47330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0xb792c0f8" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb7a6f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0xb7934398" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb7a6f520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0xb7939b48" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0xb7934030" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb7934230" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb7932198" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb7a6f520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0xb7934940" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0xb7934e18" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb7932030" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0xb7938b98" loc="68:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xb7938738" loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0xb7938328" loc="54:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0xb793bd88" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0xb78bf038" loc="58:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b948e0"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0xb7b94b08"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0xb78c1a58" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b9ec30"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0xb7b9ee58"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb78c1900" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b9ec30"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0xb7b9ee58"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xb78c0550" loc="54:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b95398"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0xb7b955c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0xb78c23b8" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7ba2aa8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0xb7ba2cd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xb78c0b60" loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b95398"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0xb7b955c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb78c0a08" loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b95398"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0xb7b955c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xb78bf648" loc="59:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b948e0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0xb7b94b08"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb78bf4f0" loc="59:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b948e0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0xb7b94b08"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0xb78c2da8" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b9c2c0"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0xb7b9c4e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0xb78c28d8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b9ec30"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0xb7b9ee58"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0xb78c1410" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7ba2aa8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0xb7ba2cd0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb78c12b8" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7ba2aa8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0xb7ba2cd0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0xb78c0090" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b9c2c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0xb7b9c4e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb78c1f20" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7b9c2c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0xb7b9c4e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xb78c4860" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb78c4860"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0xb78ba3a8" loc="88:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0xb78ba250" loc="88:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xb78bb970" loc="76:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb78c4d58" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb78c4860"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xb78bc8f8" loc="60:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb78c4860"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb78bc7a0" loc="60:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb78c4860"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb78bcd38" loc="64:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb78bbdd0" loc="82:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb78bc320" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb78c4860"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb78bc1c8" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb78c4860"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb78bb158" loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb78bb550" loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xb78b9928" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb78b9928"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0xb78b5858" loc="74:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb78b6808" loc="58:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb78b9e20" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb78b9928"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb78b6c10" loc="62:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb78b5cb8" loc="80:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb78b63c8" loc="54:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb78b9928"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb78b6270" loc="54:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb78b9928"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb78b5038" loc="65:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb78b5430" loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xb78ca3e8" loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb78ca3e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0xb78c7ba0" loc="98:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xb78c7310" loc="87:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb78ca8d8" loc="61:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb78ca3e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0xb78c6168" loc="104:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0xb78c6010" loc="104:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0xb78c65f8" loc="110:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb78c96c8" loc="75:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb78c92a8" loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb78c7778" loc="93:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb78cae50" loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb78ca3e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb78cacf8" loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb78ca3e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb78c9ad0" loc="78:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb78c9ec8" loc="81:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0xb78ab010" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bacb80"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0xb7bacda8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0xb78aa618" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7ba6c80"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0xb7ba6ea8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xb78abae8" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7ba8560"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0xb7ba8788"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xb78aa168" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7ba8560"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0xb7ba8788"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb78aa010" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7ba8560"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0xb7ba8788"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xb78aac20" loc="54:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7ba6c80"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0xb7ba6ea8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb78aaac8" loc="54:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7ba6c80"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0xb7ba6ea8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0xb78ab630" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bacb80"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0xb7bacda8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb78ab4d8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bacb80"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0xb7bacda8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0xb78a57f0" loc="38:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0xb78a5cc0" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0xb78a53d8" loc="32:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0xb78a31a8" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0xb78a88e8" loc="21:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7baad10"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0xb7ba9010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0xb78a8ed8" loc="27:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7baad10"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0xb7ba9010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0xb78a8d80" loc="27:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7baad10"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0xb7ba9010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb77de6a8" loc="57:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb77de6a8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb77de810" loc="57:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb77de810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb77decf8" loc="64:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb77de810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0xb77db7c0" loc="76:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0xb77db2c0" loc="71:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb77dbbc0" loc="82:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0xb7785ba8" loc="54:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xb77825b0" loc="66:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xb7782168" loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb7782010" loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0xb77856a0" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb776e0f8" loc="56:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb776d038" loc="75:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xb7771ce8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0xb776eb58" loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0xb776ea00" loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0xb77718e0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0xb776e548" loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0xb7761f00" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0xb771c2b0" loc="24:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0xb771c7a0" loc="31:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0xb771cc80" loc="39:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0xb770bd60" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb770ba00" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb770bc00" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0xb7707498" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7708f20" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb7707138" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb7707330" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb7708700" loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb7a6f520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb77083a0" loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb77085a0" loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0xb770b170" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb7a6f520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb770ed30" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb770b010" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0xb7709b18" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb77095b8" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb77097b8" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb77099b0" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb76f5098" loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb76f8ae8" loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb76f8d00" loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb76f8ef0" loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb76f3790" loc="82:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb76f3010" loc="82:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb76f3228" loc="82:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb76f3418" loc="82:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f551e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb76f3620" loc="83:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-main-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0xb76f9ca0" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-main-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0xb76f9b48" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0xb76a2278" loc="62:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb76a2120" loc="62:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0xb76a2e60" loc="74:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb76a2d08" loc="74:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0xb76a2788" loc="68:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb76a1518" loc="81:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb76a13c0" loc="81:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0xb7696c40" loc="86:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0xb768f308" loc="126:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0xb76924b0" loc="117:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0xb768f8f0" loc="128:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0xb768f798" loc="128:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0xb76967f0" loc="83:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0xb7691420" loc="122:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0xb76912c8" loc="122:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0xb76936d0" loc="113:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0xb7693578" loc="113:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0xb76944f8" loc="97:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0xb768da10" loc="141:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0xb768d8b8" loc="141:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0xb7693b28" loc="114:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0xb768e2c0" loc="131:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0xb768e168" loc="131:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0xb768eb48" loc="136:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0xb7691eb0" loc="125:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0xb7691d58" loc="125:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0xb768d480" loc="140:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0xb7692a40" loc="119:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0xb76928e8" loc="119:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb7694a90" loc="103:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7694938" loc="103:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0xb7692090" loc="116:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0xb7693f20" loc="116:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0xb76918d0" loc="123:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0xb768fd18" loc="129:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0xb768e6d0" loc="132:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0xb768d010" loc="138:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0xb7692e78" loc="120:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0xb7694090" loc="89:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0xb7693088" loc="109:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7694f00" loc="109:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-main-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-main-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0xb768b7c0" loc="90:/opt/tinyos-main-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-main-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0xb768bcc0" loc="98:/opt/tinyos-main-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-main-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-main-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xb76562f0" loc="95:/opt/tinyos-main-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-main-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb76567d8" loc="105:/opt/tinyos-main-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-main-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0xb762a9b0" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0xb7627010" loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0xb7629c98" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0xb76297d8" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0xb761f618" loc="79:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb7623010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb761f4c0" loc="79:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb7623010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0xb76202a8" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0xb7620968" loc="62:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb7623010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb7620810" loc="62:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb7623010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0xb7620f18" loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0xb7623010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0xb7587b88" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0xb755cea8" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0xb755c928" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0xb755cd48" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0xb755c490" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0xb755c010" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb755fdf8" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0xb7567088" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f56b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb756af18" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0xb756a768" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c0e6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb756a610" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb75662a0" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7566148" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb7567960" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7567808" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a3f640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a3d3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-main-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7496b98" loc="53:/opt/tinyos-main-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7496b98"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb7493090" loc="61:/opt/tinyos-main-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-main-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f55848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0xb73935c0" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb73935c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0xb7393c10" loc="64:/opt/tinyos-main-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c06628"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb73935c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0xb7393ab8" loc="64:/opt/tinyos-main-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb73935c0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
